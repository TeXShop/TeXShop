{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww17900\viewh15440\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
1) Substantial work on the "sudden halt" bug during typesetting. Details ...\
\
2) New engines for pdflatex, xelatex, and lualatex using "dev" versions of LaTeX, \
after they have been extensively tested by the authors of LaTeX, but before they\
become part of the official release. This new addition to latex development was\
described by Frank Mittelbach in a key talk at the TUG summer conference in Palo Alto,\
August 9 - 11, 2019.\
\
3) Fixed Catalina bug, reported by Bruno, in which the back/forth arrows on the Preview\
Window would sometimes disappear.\
\
4) Christian Kirchhof wrote from Germany complaining that "hard wrap" didn't understand\
comments, so the tail end of a comment would become live TeX code after wrapping.\
I wrote back that someone else wrote that code, I never use it, and a glance at the code\
suggested that it would be difficult to fix, particularly if "Undo" needed to still work.\
\
One day later, Kirchhof wrote back with a rewrite of the hard wrap code that fixed the\
problem. His code is in version 4.33. I believe it makes "hard wrap" a useful command, whereas\
it was dangerous before.\
 \
5) This version has Martin Hairer's fix for the "sudden halt" problem. It definitely does not\
completely fix the problem. However, it may well improve matters quite a lot.\
\
Hairer discovered (and I independently discovered) that when pdflatex dies, it is sent\
a SIGPIPE signal. This signal reports a broken pipe, often an attempt to write to a pipe\
with no reader. This is consistent with the outward appearance of the bug.\
\
When TeXShop wants to typeset, it sets up a Cocoa NSTask object which will create\
an independent application running pdftex, or another engine. It also creates an NSPipe\
object, allowing this independent process to communicate with the terminal. Finally it creates\
an NSFile object and attaches it to the pipe for reading.\
\
Then it runs the task and calls the NSFile object with a call saying "Read the pipe and notify\
us when you have something." The pipe is read independently of TeXShop and then TeXShop\
receives a "notification" that the buffer contains something to be processed.\
\
TeXShop then runs a routine called "writeTexOutput" on the main thread. This routine reads\
the buffer and then calls "Read the pipe and notify us when you have something" again.\
Without this very last call, reading would end and we'd get nothing more.\
\
I have carefully tested TeXShop to make certain no other part of the program is suspending the\
NSTask. It appears that everything is working perfectly and then for unknown reasons the pipe\
breaks.\
\
Hairer noticed that the "writeTeXOutput" process does some processing of the buffer contents\
before sending them to the console. In particular, it parses to see if an error was reported and if so\
sets up TeXShop's "goto error" routine to go to that error. Since the pipe is read many times, a list\
of "goto error" commands is built up.\
\
Hairer's fix consists of removing all of this processing, and instead doing it independently on another\
process, so it doesn't interfere with "writeTeXOutput." The result is that "writeTeXOutput" should return\
almost immediately.\
\
--------------------\
\
With this "fix", projects exhibiting the stall bug seem to work better. But stalling can still sometimes occur.\
However, after adding the fix, I began testing Catalina, and so far I have never been able to reproduce the\
bug in Catalina. Thus the evidence suggests that this is an Apple bug which appeared in Mojave, or possibly in\
High Sierra, and may be fixed in Catalina.\
\
There is, sadly, another possibility. Cataline has quite a lot of debugging code which will be removed before\
release. We already know that the bug is harder to trigger in XCode when it is debugging. So this debugging\
code may be masking the bug.\
\
I hope to construct a small example of the bug which can be sent to Apple, so we can determine the\
nature of the bug and whether Catalina fixes it.\
\
---------------------\
\
Version 4.33 has some default settings to control typesettring and aide in debugging. \
\
	defaults write TeXShop DisplayLogInfo YES  // causes TeXShop to output debugging information during typesetting, but maybe not after notarized\
\
	defaults write TeXShop UseTerminationHandler YES // causes TeXShop to call NSTask the modern way\
\
	defaults write TeXShop RepeatTypesetOnError13 NO // if yes and the SIGPIPE error occurs, just kills aux files and typeset again\
\
}