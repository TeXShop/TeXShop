{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoascreenfonts1\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red155\green35\blue147;\red255\green255\blue255;\red0\green0\blue0;
\red57\green0\blue160;\red108\green54\blue169;}
{\*\expandedcolortbl;;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c42190\c21278\c66379;}
\margl1440\margr1440\vieww19000\viewh15440\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
After the release of TeXShop 5.02, I made several hidden changes without changing the version number.\
These hidden changes will automatically be in 5.03 when released.\
\
Most of the hidden changes were minor in the Fourier.tex application, to fix minor annoyances. There were\
these other changes:\
\
1) The pulldown menu in the Save Dialog to set the extension of the new file was broken for all items except TeX, LaTeX, ConTeXt, and HTML.\
Other items were shifted by one, so asking for an item actually gave the item one higher. This is fixed.\
\
2) One user complained that the cursor sometimes vanishes, and can only be restored by restarting the program. There is a Cocoa class called\
NSCursor, and this class has two routines\
\
	[NSCursor hide]\
	[NSCursor unhide]\
\
These items are put on a stack, and thus calls to them must balance out. A search revealed that TeXShop calls these items only in MyPDFView and MyPDFKitView.\
In these spots, balancing is achieved by  using a local variable named "cursorVisible". This variable is set to YES at the start of the routine. Each hide command is\
\
	
\f1\b \cf2 \cb3 if
\f2\b0 \cf4  (cursorVisible)\
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0
\cf4 				\{\
					[\cf5 NSCursor\cf4  \cf6 hide\cf4 ];\
					cursorVisible = 
\f1\b \cf2 NO
\f2\b0 \cf4 ;\
				\}\
\
and each unhide command is\
\
	
\f1\b \cf2 if
\f2\b0 \cf4  (!cursorVisible)\
				\{\
					[\cf5 NSCursor\cf4  \cf6 unhide\cf4 ];\
					cursorVisible = 
\f1\b \cf2 YES
\f2\b0 \cf4 ;\
				\}\
\
Thus if calls balance out in the TeXShop code, we do not need to worry whether they also balance in remaining Cocoa calls.\
Note that when the TeXShop routine is called, the cursor might not be visible. That doesn't matter, because we don't care if cursorVisible is literally true. We only care that calls to it balance out.\
\
However, I discovered that the final call didn't have this form, but instead was written\
\
	[NSCursor unhide]\
\
This would still work if calls were strictly balanced in TeXShop code, but that was a little unclear. So I replaced those final unhide calls, which occurred twice in MyPDFView and three times in MyPDFKitView, with protected calls. \
\
This change should do no harm. The only way it could change things is if the final unhide call in TeXShop occurred when \
\
	cursorVisible = YES\
\
and so the call was certainly unbalanced within TeXShop.\
\
I do not know if this fixes the user's problem.
\f0 \cf0 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
	}