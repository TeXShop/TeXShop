<HTML>

<HEAD>
		<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=iso-8859-1">
		<TITLE>Standard AppleScript Makros</TITLE>
		<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch und Martin Kerz unter der GNU FDL">
		<META NAME="description" CONTENT="applescript">
	<link href="../sty/screen.css" rel="stylesheet" media="all">
	</HEAD>

<BODY>

<div id="content_border">
<P>TeXShop liefert eine Sammlung verschiedener AppleScripts von Will Robertson, Claus Gerhardt und anderen mit. Viele dieser Skripts automatisieren die Arbeit, wenn man mehrere Satzkommandos nacheinander ausf&uuml;hren muss. Indem man die Skripts kopiert und modifiziert, k&ouml;nnen sie an die speziellen Bed&uuml;rfnisse einzelner Benutzer angepasst werden.</P>
			<P>In diesem Abschnitt werden einige dieser Skripte beschrieben.</P>
			<h5>Column Macros, Insert Reference, Open Quickly:</h5>
			<p>Diese Makros stammen von Will Robertson. Mit Hilfe des ersten kann man sehr leicht eine Matrizen und Tabellen erstellen. Das zweite durchsucht die gerade ge&ouml;ffnete Datei nach dem Befehl &bdquo;\label{...}&ldquo;. Danach wird eine Liste angezeigt, in der Referenz-Beschriftungen eingegeben werden k&ouml;nnen. Mit Hilfe des dritten Makros k&ouml;nnen Sie direkt alle Dateien, die sich im gleichen Verzeichnis wie die Quelldatei befinden, &ouml;ffnen. </p>
			<P>
<B>Convert to Mac, Convert to Unix, Convert to Windows: </B>
</P>


<P>Fr&uuml;her wurden Fernschreiber zur Kommunikation benutzt. Der ASCII Zeichensatz hat immernoch remineszenzen an diese Zeit. So erzeugt z.B. 0x07 einen Klingelton. Das Zeichen 0x0a war ein Zeilenwechsel und das Zeichen 0x0d war ein Zeilenwechsel, der an die erste Position der neuen Zeile sprang. Um also einen echten Zeilenwechsel zu erhalten wurde die Zeichensequenz 0x0d 0x0a verwendet.</P>

<P>Nachdem die Bl&uuml;tezeit der Fernschreiber vergangen war benutzten die verschiedenen Computer-Hersteller unterschiedliche Zeichen um einen vollst&auml;ndigen Zeilenwechsel anzuzeigen. In der Unix-Welt wurde 0x0a benutzt. Windows verwendete 0x0d 0x0a und auf dem klassischen Macintosh verwendete man 0x0d. Apples Richtlininen f&uuml;r Mac OS X stellen fest, dass Programme dieses Systems normalerweise Dokumente mit alle verschiedenen Zeilenwechseln &ouml;ffnen k&ouml;nnen. Die meisten Programme, wie z.B. TeXShop oder TextEdit befolgen diese Richtlinien auch. TeXShop benutzt f&uuml;r neue Dokumente die Unix Konvention. Werde jedoch Dokumente ge&ouml;ffnet, die mit der klassischen Mac OS Konvention erstellt wurden, so werden die Zeilenwechsel beibehalten. Nur neue Zeilenwechsel werden nach den Unix-Konventionen gesichert.</P>

<P>Unter Mac OS X bereiten die Zeilenwechsel also keinerlei Schwierigkeiten. Diese treten erst auf, wenn Sie Ihre Dateien auf einem anderen Betriebssystem &ouml;ffnen wollen. Zwar verstehen heute viele Editoren auf anderen Betriebssystemen auch mehrere unterschiedlichen Zeilenwechsel, sollte es jedoch einmal zu Problemen kommen, sollten sie die obigen Skripte benutzen. Nehmen wir an die Quelldatei eines Dokuments hat den Namen &bdquo;MeineDatei.tex&ldquo;. Das Skript &bdquo;Convert to Mac&ldquo; erstellt aus dieser Datei eine neue Datei mit dem gleichen Code, die ausschlie&szlig;lich klassische Macintosh Zeilenwechsel beinhaltet und den Namen &bdquo;MeineDatei_Mac.tex&ldquo; hat. &bdquo;Convert to Unix&ldquo; und &bdquo;Convert to Windows&ldquo; funktionieren auf die selbe Weise. Alle diese Skripte benutzen ein Programm mit dem Namen &bdquo;flip&ldquo;, dass sich in &bdquo;~/Library/TeXShop/bin&ldquo; befindet (Vgl. http://ccrma-www.stanford.edu/~craig/utility/flip/ f&uuml;r weitere Informationen). </P>

<P>
<B>Other Scripts->Bibliography:</B>
</P>

<P>Enth&auml;lt ein TeX Projekt eine Bibliographie muss eine Reihe von Befehlen ausgef&uuml;hrt werden um die Literaturliste zu aktualisieren. Zuerst wird LaTeX ausgef&uuml;hrt, damit eine .aux-Datei erstellt wird. Danach wird BiBTeX ausgef&uuml;hrt um aus dieser Datei .bbl- und .blg-Dateien zu erstellen. Schlie&szlig;lich muss wieder LaTeX ausgef&uuml;hrt werden, um die Bibliographie in das Dokument zu &uuml;bernehmen.</P>

<P>Der &bdquo;Bibliography&ldquo;-Befehl f&uuml;hrt alle diese Schritte nacheinander aus. Erst wird die Datei gesichert und dann latex-&gt;bibtex-&gt;latex-&gt;latex ausgef&uuml;hrt. Schlie&szlig;lich wird das Vorschaufenster aktualisiert.</P>

<P>
<B>htlatexc, htlatexr:</B>
</P>

<P>Tex4ht ist ein TeX-Programm, das LaTeX-Dokumente in eine Webseite konvertiert. Die Quelldatei kann ein Standard-LaTeX-Dokument sein und eps-Illustrationen enthalten. Als Ergebnis erhalten Sie ein html-Dokument und eine Reihe von GIF-Dateien. Der Skript-Befehl &bdquo;htlatexc&ldquo; sichert das Quelldokument, f&uuml;hrt htlatex aus und &ouml;ffnet die fertige html-Seite in Safari. Es verh&auml;lt sich also wie eine neue TeXShop Satzvariante, die jedoch von einem Benutzer mit Hilfe des Skript-Codes erstellt wurde.</P>

<P>Wenn Sie diese Skripte benutzen m&uuml;ssen Sie das Paket text4ht nicht extra einbinden. Das Paket wird automatisch geladen. Das Skript htlatexc ruft htlatex ohne zus&auml;tzliche Optionen auf. htlatexr &uuml;bergibt htlatex die Anweisung eventuell schon bestehende GIF-Dateien neu zu erstellen.</P>

<P>
<B>pdfselectc:</B>
</P>

<P>Dieses Akript f&uuml;hrt das Shell-Skript pdfselect aus, um pdf-Dokumente zu erstellen, die nur einen gewissen Seitenbereich enthalten. Wird es ausgef&uuml;hrt erscheint ein Dialog, der darum bittet die Anzahl der zu erstellenden pdf-Dokumente einzugeben. Nehmen wir an Sie geben hier &bdquo;drei&ldquo; an.  Der n&auml;chste Dialog fordert Sie auf die Seitenfolge der einzelnen Dokumente anzugeben. Nehmenwir an sie geben f&uuml;r das erste Dokument &bdquo;5:8&ldquo;, f&uuml;r das zweite &bdquo;20&ldquo; und f&uuml;r das dritte &bdquo;20:30&ldquo; an. Das Ergebnis wird sein, dass sie drei pdf-Dateien erhalten, wobei die erste die Seiten f&uuml;nf bis acht, die zweite die Seite zehn und die dritte Seiten 20-30 enth&auml;lt.</P>

<P>
<B>mpostc, mpostcpl, latex-makeindex-mpost:</B>
</P>

<P>Das Skript &bdquo;mpostc&ldquo; ruft mpost und danach pdflatex auf. &bdquo;mpostcpl&ldquo; f&uuml;hrt pdflatex-&gt;mpost-&gt;pdflatex aus. Lesen Sie auch in der TeXShop Hilfe unter <a href="general_context.htm">Allgemeine Hilfe: Context und Metapost</a> nach um ein Beispiel daf&uuml;r zu finden, wie Sie diese Befehle nacheinander ausf&uuml;hren k&ouml;nnen.</P>

<P>Das Skript latex-makeindex-mpost sichert die Quelldatei, ruft pdflatex, makeindex, mpost und wieder pdflatex auf, wobei relevante log-Dateien w&auml;hrend dessen ge&ouml;ffnet werden.</P>

<P><B>Andere:</B>
</P>

<P>Der Ordner &bdquo;TeXShop_Folder&ldquo; der mit TeXShop mitgeliefert wird enth&auml;lt einen Unterordner mit dem Namen &bdquo;Scripts by Claus Gerhardt&ldquo; mit weiteren Skripts sowie ausf&uuml;hrlicher Dokumentation. Bitte sehen Sie hier nach um weitere Informationen zu erhalten.
	</div>		
<div id="header_background"></div>
<div id="header_logo"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></div>
<div id="header_chapter">Hilfe zu Makros</div>
<div id="header_title">Standard AppleScript Makros</div>


	<div id="menu_border">
		<UL>
			<LI><a href="macros_preliminaries.htm">Einleitung</a></li>
			
			<LI><a href="macros_default.htm">Die Standardmakros verstehen</a></li>
			<LI><a href="macros_rearrange.htm">Das Makromen&uuml; neu anordnen</a></li>
			<LI><a href="macros_define.htm">Neue Makros erstellen</a></li>
			<li><a href="macros_applescript.htm">AppleScript Makros</a></li>
			<li><a href="macros_includedscripts.htm">Standard AppleScript Makros</a></li>
			<li><a href="macros_defapplescript.htm">AppleScript Makros erstellen</a></li>
			<li><a href="macros_dialogs.htm">Dialoge erstellen</a></li>
			<li><a href="macros_writingcompletescripts.htm">Skripte mit TeXShop-Satzkommandos erstellen</a></li>
			<li><a href="macros_writingcommandscripts.htm">Skripte mit Shell-Befehlen erstellen</a></li>
		</UL>
	</div>
	
	</BODY>
</HTML>