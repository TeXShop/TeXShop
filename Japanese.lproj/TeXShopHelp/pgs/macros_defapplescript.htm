<HTML>

<HEAD>
		<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=iso-8859-1">
		<TITLE>Defining AppleScript Macros</TITLE>
		<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch under the GNU FDL">
		<META NAME="description" CONTENT="applescript">
	</HEAD>

<BODY BGCOLOR="#ffffff">
		<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="100%">
<TR HEIGHT="40">
<TD WIDTH="40" HEIGHT="40"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></TD>
<TD WIDTH="6" HEIGHT="40"></TD>
<TD HEIGHT="40" VALIGN="middle"><FONT FACE="Lucida Grande,Helvetica,Arial" SIZE="4"><B>Defining AppleScript Macros</B></FONT></TD>
</TR>
</TABLE>
		<P><font size="2" face="Lucida Grande,Geneva,Arial">AppleScript syntax is a subject all its own. To learn more about it, read one of several books on the subject. If you installed the developer tools which come with Mac OS X, there is an online book about AppleScript in the Developer folder.</font></P>

 <P><font size="2" face="Lucida Grande,Geneva,Arial">When TeXShop interpretes an applescript macro, it first replaces any string #FILEPATH#, #PDFPATH#, #DVIPATH#, #PSPATH#, #LOGPATH#, #AUXPATH# with the complete path name of the source tex file, pdf file, dvi file, ps file, log file, or aux file respectively. Similarly, the strings #INDPATH#, #BBLPATH#, and #HTMLPATH# are replaced with the complete path name of the ind file, bbl file, or html file. </font></P>

<P><font size="2" face="Lucida Grande,Geneva,Arial">In addition, any string #NAMEPATH# 
is replaced with the complete path name of the source tex file minus its extension,
and any string #DOCUMENTNAME# is replaced with  the display name of the current document.
This last replacement is somewhat subtle; it gives the title of the document as shown at the top of the source window.  If a document was saved with the "hide extension" box checked, #DOCUMENTNAME# will contain only the document name. But if the document was saved without checking "hide extension", #DOCUMENTNAME# will contain the document name and extension. This information can be used to locate the calling document for Applescript code as follows:
<dl> 
<dd>tell document #DOCUMENTNAME# of application "TeXShop"
<dd> latex
<dd> end tell
</dl>
</font></P>

		<P><font size="2" face="Lucida Grande,Geneva,Arial">There are at least two ways to write Applescript commands. Applescript can run shell commands, so after preliminary processing with an applescript, a shell command can be called to do the actual work. TeXShop comes with several examples of this technique; some of these examples will be explained in a later help section. Applescript commands can also call build-in TeXShop commands and thus work directly. A later section will give examples of
this technique.</font></P>

<P><font size="2" face="Lucida Grande,Geneva,Arial">
TeXShop understands the following commands:
<dl>
<dd> typeset
<dd> latex
<dd> tex
<dd> context
<dd> bibtex
<dd> makeindex
<dd> metapost
<dd> typesetinteractive
<dd> latexinteractive
<dd> texinteractive
<dd> contextinteractive
<dd> bibtexinteractive
<dd> makeindexinteractive
<dd> metapostinteractive
<dd> taskdone
<dd> refreshpdf
<dd> refreshtext
<dd> goto line
</dl>
The first seven commands call TeXShop typesetting routines. These commands typeset continuously without
stopping at errors. The next seven commands also call TeXShop typesetting commands, but this time if there is an error, the user is allowed to interact with the console. When a typesetting command is called, control returns to the applescript immediately without waiting until the operation is complete. The "taskdone" call returns NO if typesetting is still running, and YES when it is done. The calls "refreshpdf" and "refreshtext" cause pdf and text documents to display the latest version of their files on the screen. The "goto line" command tells the editor
to select a given line; for example:
<dl> 
<dd>tell document #DOCUMENTNAME# of application "TeXShop"
<dd> goto line 37
<dd> end tell
</dl> 
 </font></P>






	</BODY>

</HTML>