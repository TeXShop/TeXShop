<HTML><HEAD>			<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=Shift_JIS">			<TITLE>TeXShop のタイプセット・コマンドでスクリプトを書く</TITLE>			<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch under the GNU FDL">			<META NAME="description" CONTENT="AppleScriptによるタイプセットの自動化について"></HEAD><BODY BGCOLOR="#ffffff" topmargin="20" leftmargin="20"><TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="100%">	<TR HEIGHT="40">		<TD WIDTH="40" HEIGHT="40"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></TD>		<TD WIDTH="6" HEIGHT="40"></TD>		<TD HEIGHT="40" VALIGN="middle"><FONT FACE="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3" SIZE="4"><B>TeXShop のタイプセット・コマンドでスクリプトを書く</B></FONT></TD>	</TR></TABLE><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">TeX プロジェクトが参考文献目録を含んでいる場合には、一連のタイプセット・コマンドを実行して目録をアップデートしなければなりません。まず LaTeX を実行して .aux ファイルを作成する。BibTeX を実行して .aux ファイルから .bbl および .blg ファイルを作成する。再度 LaTeX を実行して参考文献目録を文書に付け加える。LaTeX を最終的に実行して目録に対する文書内の参照をアップデートする。</font></p><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">複数のプロジェクトに、一連の同様なタイプセット・コマンドが含まれていることもあるでしょう。AppleScript を使えば、こうした作業を自動化することができます。</font></p><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">どんなふうにすればいいのか、TeXShop に付属する「 OtherScripts->Bibliography 」というコマンドを例に調べてみます。このコマンドの本体は次のようになっています。</font></p><font size="3" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><tt><dl>	<dd>--Applescript	<p>	<dd>set fileName to #FILEPATH#	<dd>if fileName is equal to  ""	<dd>activate	<dd>display dialog "Please save the file first"  buttons {"OK"} default button "OK"	<dd>return	<dd>end if	<p>	<dd>set frontName to #DOCUMENTNAME#	<dd>tell application "TeXShop"	<dd>save document frontName	<dd>end tell	<p>	<dd>tell document frontName of application "TeXShop" 	<p>		<dl>			<dd>latexinteractive			<p>			<dd>repeat				<dl>					<dd>delay 2					<dd>if taskdone					<dd>exit repeat					<dd>end if					<p>				</dl>			<dd>end repeat			<p>			<dd>			<dd>bibtex			<p>			<dd>repeat				<dl>					<dd>delay 2					<dd>if taskdone					<dd>exit repeat					<dd>end if				</dl>			<dd>end repeat			<p>			<dd>latex			<p>			<dd>repeat				<dl>					<dd>delay 2					<dd>if taskdone					<dd>exit repeat					<dd>end if				</dl>			<dd>end repeat			<p>			<dd>latex			<p>		</dl>	<dd>end tell</dl></tt></font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">コマンドの第１行目は、これが AppleScript マクロであることを示しています。次の行では #FILEPATH#（ TeX ソースのフルパス名を与えるパラメータ）をチェックしています。このパラメータは、新規書類が作成されていながらまだ保存されていないと、空っぽの文字列になります。その場合、ユーザは文書を保存するように言われ、スクリプトは終了します。</font></p><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">次につづく行では、文書を保存するよう TeXShop に命じています。対象となる文書を参照するのに #DOCUMENTNAME# を使っていることに注意します。</font></p><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">残りのコマンドで latexinteractive, bibtex, latex, それに latex を実行しています。タイプセット・コマンドを呼び出した後、タイプセット作業が完了する前に、コントロールはすぐに AppleScript に戻ることを思い出してください。repeat のループ部分では、次のタイプセット処理が実行される前に、先立つ作業が完了したかどうかをチェックするようスクリプトに命じています。「 delay 2 」という行は、作業が完了したかどうかを絶えず問い合わせつづけることでコンピュータ全体の速度を低下させないよう AppleScript に間合いを取らせています。</font></p></BODY></HTML>