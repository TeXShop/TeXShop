<HTML><HEAD>			<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=Shift_JIS">				<TITLE>更新履歴</TITLE>				<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch under the GNU FDL">				<META NAME="description" CONTENT="新機能　バグ修正　（バージョン1.31〜1.34）"></HEAD><BODY BGCOLOR="#ffffff" topmargin="20" leftmargin="20"><TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" WIDTH="100%">		<TR HEIGHT="40">				<TD WIDTH="40" HEIGHT="40"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></TD>				<TD WIDTH="6" HEIGHT="40"></TD>				<TD HEIGHT="40" VALIGN="middle"><FONT FACE="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3" SIZE="4"><B>更新履歴</B></FONT></TD>		</TR></TABLE><hr><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>バージョン1.34</b>では TeXShop にさらなる機能を追加し、いくつかのバグを修正しました。</font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>新機能：</b></font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">	<ul>		<li>Jonas Zimmermann （ zimmerleut@gmx.de ）による行列パネルの追加。大変ありがとう。		<li>Claus Gerhardt のリクエストにより、AppleScript コマンド「 goto line 」を追補。例──				<dl>					<dd><font size="3"><tt>tell front document of application "TeXShop"</tt></font>					<dd><font size="3"><tt>goto line 15</tt></font>					<dd><font size="3"><tt>end tell</tt></font>				</dl>		<li>pdfsync を初めて搭載。コマンドキーを押しながらプレビューウィンドウの一点をクリックすると、ソースファイル内の相当する位置に移動します。ソースファイルに「 include 」されているファイルがあった場合は、対応するファイルを開き、そのファイル内の箇所に移動します。詳細については「全般的なヘルプ」の「 Pdfsync 」の項を参照のこと。この機能は pdfsync.sty に依存します── pdfsync.sty は Piero D'Ancona が作成し J&#x00E9;r&#x00F4;me Laurens によって改良されました。		<li>さらに pdfsync には別の使い方も。ソースファイル（ルートファイルを設定したものも含む）内の一点を、コマンドキーを押しながらクリックすると、pdf ファイルの対応するページを表示します。	</ul><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>修正されたバグ：</b></font>	<ul><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">		<li>TeX、LaTeX、BibTeX、MakeIndex、MetaPost、ConTeXt、それに MetaFont といったツールバーのボタンが、デフォルトのタイプセット・エンジンをリセットしてしまう。これはもう生じません。なので、BibTeX ボタンを押した後、command + T で再度タイプセットを行なうことが可能です。		<li>コンソールのウィンドウサイズを変えると「 abort 」ボタンがズレてしまう。以上２つのエラーの指摘を Sean Luke に感謝。<li>command + 1 のキー操作でソースとプレビューウィンドウを交互に切り替え可能です。以前のバージョンでは、myfile.texshop あるいは %SourceDoc でルートファイルが設定されているソースウィンドウでは、これが機能しませんでした。それを修正。ソースファイルで command + 1 を押すと、対応するプレビューウィンドウを前面にします。再び command + 1 を押せば、元のソースファイルが前面になります。プレビューウィンドウは複数のソースファイルに対応しているかもしれないので、command + 1 で前面に来るのは、プレビューウィンドウへの切り替えを最後に command + 1 で行なったソースファイルとなります──以前に切り替えを行なったソースがなければ、ルートソースになります。<li>Juan Luis Varona Malumbres による新規のスペイン語ヘルプ。ありがとう。<li>印刷時に、ページ設定での「拡大縮小」を順守するようにしました。「用紙サイズ」については、teTeX 内で設定されるので顧慮していません。印刷は次のように行なわれます：印刷する文書の寸法は TeX で設定され、pdf ファイル内にコード化される；pdf は拡大縮小率が100％でない場合はリサイズされるが、そうでなければフルサイズで用紙中央に配置される；通常は文書のサイズと用紙のサイズは同じですが、違っている場合には、文書のふちを切り落とすことになるかもしれません。</font></ul><hr><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>バージョン1.33</b>では TeXShop にさらなる機能を追加し、いくつかのバグを修正しました。</font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>新機能：</b></font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><ul><li>バージョン1.33の改良点は、AppleScript の拡充、マクロのサポートの向上、外部エディタとの相互関係の改善です。<li>マクロのサポートの改善は Claus Gerhardt により促されました──彼はバージョン1.33に含まれるいくつかの便利なスクリプトを書きました。たとえば、あるスクリプトは htlatex を呼び出して LaTeX ファイルをウェブ用にタイプセットします。スクリプトは、ソースを保存し、タイプセットし、結果の html ファイルを Safari で開きます。つまりちょうど LaTeX のタイプセット・ボタンのように動作するわけですが、違っているのは、pdf ファイルではなく html ファイルを生成し、TeXShop ではなく Safari で html を表示するということです。この取り組みの優れている点は、ユーザ自身がスクリプトを書くことで同様に、新しいプログラムコードを待たずとも TeXShop に機能を追加できることです。<li>TeX のタイプセットではしばしば、連続的な操作が必要になります。参考文献目録を含むファイルを処理するには、LaTeX に次いで BibTeX を実行し、さらにもう２度 LaTeX を実行させねばなりません。これを自動的に行なうスクリプトが入っています。このスクリプトは最初に LaTeX を実行する前にソースを保存し、最後にプレビュー画面を更新します。ユーザはそれぞれのワークフローに合わせて簡単にこのスクリプトをカスタマイズできます。<li>追加されたスクリプトには、ソースファイルを Windows の改行コードに変換したり、Mac OS 9 の改行コードや UNIX の改行コードに変換したりするものもあります。Mac OS X はいずれの改行コードでもそのまま理解しますが、多くのコンピュータはそれほどスマートではありません；改行コードの変換は、ファイルを友人に送る際に重宝します。こうした変換は Craig Stuart Sapp の作ったバイナリ「 flip 」を利用しています。詳細については <A HREF="http://ccrma-www.stanford.edu/~craig/utility/flip/">http://ccrma-www.stanford.edu/~craig/utility/flip/</A> を参照のこと。<li>pdfselect を呼び出すスクリプトも入っており、これは pdf 文書の一部を抜粋します。１つ目のファイルには TeX 文書の３〜７ページが含まれ、２つ目の文書には29ページが、３つ目のファイルには31〜36ページが含まれる、というようなことが可能です。このコードをマクロ・メニューに入れておく利点は、ユーザ・インターフェースが用意されているということです──ユーザは pdfselect を呼び出すときの約束事を覚えておかずともよいし、Terminal に切り替える必要もありません。<li>#DOCUMENTNAME# 変数がマクロエディタに追加されました──これは呼び出す文書の名前を AppleScript コマンドに渡します。<li>以下の AppleScript コマンドが TeXShop に追加されました。これらのコマンドを用いてスクリプトを書くための詳細については、TeXShop ヘルプをお調べください。	<p>		<ul>			<li> typeset			<li> latex					<li> tex					<li> bibtex					<li> context			<li> metapost			<li> makeindex			<li> typesetinteractive			<li> latexinteractive					<li> texinteractive					<li> bibtexinteractive					<li> contextinteractive			<li> metapostinteractive			<li> makeindexinteractive			<li> typeset			<li> refreshpdf			<li> refreshtext 			<li> taskdone		</ul><p><li>Joachim Kock からの促しにより、外部エディタに対するサポートを改善。いくつかの変更が行なわれました：<ul><li>外部エディタ・モードで作業しているのであれば、プレビューウィンドウを継続的に更新する環境設定をオンにできるようになりました。TeXShop は１秒に１度、pdf ファイルが更新されているかどうかをチェックします。更新されていれば、pdf 画面が再描画されます。<li>更新チェックの間隔は、RefreshTime という隠れた環境設定項目でコントロールできます。秒単位で間隔を（たとえば2.19秒ごとに）変更するには次のようにします──<p>				<font size="3"><tt>defaults write TeXShop RefreshTime 2.19</tt></font><p><li>AppleScript コマンドのサポートが追加されたので、外部のアプリケーションから TeXShop にコマンドを送れるようになりました。外部エディタで重要となるのは以下のようなスクリプト・コマンドです──<p>		<ul>		<li>	latexinteractive			<li>	texinteractive			<li>	bibtexinteractive			<li>	contextinteractive		<li>	metapostinteractive		<li>	makeindexinteractive		<li>	typesetinteractive		<li>	refreshpdf		<li>	taskdone		<li>	open_for_externaleditor		</ul><p>最初の７つのコマンドは、TeXShop のタイプセット・エンジンを呼び出します。これらのコマンドの１つが呼び出されると、タイプセット処理が完了していなくても、コントロールはすぐに呼び出し側のプログラムに戻ります。taskdone は、処理中は FALSE を返し、完了すれば TRUE を返します──なので、呼び出し側のプログラムでいくつかのコマンドを送りたい場合にも、ひとつのコマンドを送った後、それが完了したかどうかを調べてから、次のコマンドを送ることができます。<li>Refreshpdf はプレビュー画面を更新しますが、継続的な自動更新の代わりに、これを使って画面をコントロールできます。処理が終了次第、タイプセット・コマンドが自動的に画面を更新します。<li>open_for_externaleditor コマンドは「プレビューを開く...」で .tex ファイルを開きます。</ul><p><li>スクリプティングや外部エディタとは関連しない機能も追加されました：			<li>プレビューのマウスモードが「選択」になっている状態で「全てを選択」を使って pdf 出力の全ページを選択できます。ただし制限事項が１つあります；ページレイアウトが連続ページもしくは連続見開きページになっているときは、文書が最大で20ページの場合にのみ全てを選択することができます──そうでないと、選択した pdf が巨大になり、マシンの速度を低下させるので。		<li>Ghostscript ではなく Apple の pstopdf で pdf を生成するよう環境設定項目で選べるようになりました。これは Panther でのみ機能します── pstopdf が Panther 固有のものなので。環境設定で選択したにもかかわらず Panther が機能しないようなら、従来の ghostscript コードが使われます。この環境設定を選択した場合、ghostscript はもう TeXShop 内部のスクリプトには必要ありませんが、teTeX のスタイルファイルではまだ必要とされるかもしれません。一例として epstopdf.sty がありますが、これはタイプセット時に eps ファイルを pdf 形式へと自動的に変換するのに用いられます。			<li>銭谷さんにより、さらなるドラッグ＆ドロップのサポートが提供されました。新しいバージョンでは、ドロップしたファイルの名前にスペースが含まれているとエラーが出されます。新しいコードは、いくぶん奇妙な方法でカスタマイズも可能です。ドラッグ＆ドロップのコードをカスタマイズするには、マクロ・メニューに「 Drag & Drop 」という名前で新しいサブメニューを追加します。このフォルダ内に、ファイルタイプ（拡張子）ごとに項目を立て、各項目の「内容」をドラッグ＆ドロップされたときに実行されるコードにします。たとえば、ある項目が「 pdf 」だった場合、この項目のコード部分は "\includegraphics[#INS#]{%r}" となるでしょう──どの項目でも引用符は含みません。こうした取り込み用に、次のような短縮形を利用してもらえます：			<p>					<ul>					<li>	%F = ドロップされたファイル名（絶対パス）					<li>	%f = ドロップされたファイル名					<li>	%r = ドロップされたファイル名（相対パス）					<li>	%n = 拡張子なしのファイル名					<li>	%e = 拡張子					</ul><p>			<li>拡張子が Drag & Drop メニューに挙げられていなければ、あるいはこのメニュー自体がなければ、ドラッグ＆ドロップは銭谷さんが規定しておいたように動作します──なので、ほとんどのユーザはコードをカスタマイズする必要はないでしょう。<li>Martin Kerz によりドイツ語版のヘルプがアップデート、Nicola Vitacolonna によりイタリア語版のローカライズがアップデート、Juan Luis Varona Malumbres によりスペイン語版のヘルプがアップデート、Hendrik Chaltin によりフランス語版のローカライズがアップデート、Andrei Teleman によりルーマニア語版のローカライズが追加されました。ありがとう！			<li>プレビューウィンドウがアクティブになっているときにもマクロを呼び出せるようになりました；ここではテキストを挿入するコマンドは無効になります。プレビューウィンドウ用のツールバー項目が追加されたので、プレビューのツールバーにマクロ・ボタンを表示できます。			<li>途中でタイプセット・プログラムを止めたいユーザ用に「 Abort 」ボタンが追加されました。これはマイナー・チェンジです。<li>Elliott Hughes によるコードが追加され、LaTeX、TeX、BibTeX などを呼び出すコードがクリーンアップされました。バイナリ・ファイルが見つからない場合、プログラムはエラー状況を説明するエラーメッセージを出し、環境設定の bin パスが正しいかどうかを問い合わせます。これは Fink を使っていて環境設定を変更し忘れたユーザの役に立ちます。<li>Joachim Kock のリクエストにより、「プレビューを開く...」でファイルを開いた場合や、TeXShop を外部エディタ・モードにしてファイルを開いた場合に、ソースとプレビュー・ファイルの日付を比較するようにしました。もしプレビュー・ファイルが古くなっていたり、まるっきり存在していなかった場合には、自動的にソースファイルをタイプセットします。この動作はデフォルトでオンになっていますが、オフにする隠れた環境設定があります：オフにするには──	<p>	<dl>		<dd><font size="3"><tt>defaults write TeXShop ExternalEditorTypesetAtStart NO</tt></font>	</dl><p></ul><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>修正されたバグ：</b></font>		<ul><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">				<li>幾人かのユーザからの報告では、プリンターが薄黄色の背景をページに付け加えてしまうとのことでした。少数のプリンターでのみこの問題が生じていました。Frank Stengel により、これはプリント描画ルーチンにおける NSEraseRect の呼び出しに起因するものとわかりました。このコールは取り除かれました；今では TeXShop は、Cocoa の vanilla コール [myRep draw] １行だけで印刷を行なっています。			<li>Panther では、すべてのテキスト・オブジェクトに単語の補完が用意されています。単語の一部を入力して option + escape を押せば、補完可能なリストをシステムが提示します。これは TeXShop や TextEdit、その他の Cocoa プログラムで機能します。しかし TeXShop のコマンド補完が Panther で不具合となり、この新しい機能を使えませんでした。これを修正しました。			<li>TeXShop にはテキストを追加する AppleScript コマンドがありますが、このコマンドが undo stack を更新していませんでした。これは Stefan Walsen により修正されました；彼のパッチがバージョン1.33に入っています。						<li>ソースを印刷した後で、タイプセットした文書を印刷した場合、文書が下がってしまう。これを修正しました。		<li>Jerry Keough が TeXShop を Jaguar で使用中に奇妙なバグを発見。環境設定で起動時に新しいファイルを作成しないよう設定していた場合に、文書を開いて pdf ウィンドウをアクティブにし、その後でソースウィンドウを閉じると、次に使うメニュー項目がプログラムをクラッシュさせてしまう。このバグは Panther では生じません。修正しました。</font></ul><hr><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>バージョン1.32</b>では TeXShop に２つの機能をさらに追加し、いくつかのバグを修正しました。</font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>新機能：</b></font><ul><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">新しいメニュー項目「タグを追加」は、ソーステキストに空のタグを挿入し、タグの名前を追加できるようカーソルを配置します。そのうえで、新しいタグを追加するキー操作を用意しました；command + 2 です。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">AppleScript マクロにおいて、#LOGPATH#、#AUXPATH#、#INDPATH#、#BBLPATH#、#HTMLPATH# が認識されるようになりました；これは Claus Gerhardt のリクエストにより追加。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">MetaPost で呼び出すプログラムの設定用に、新しいオプションを用意しました。解説については TeXShop ヘルプをご覧ください。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">ドラッグ＆ドロップのコードが銭谷誠司さんにより改善されました。pdf、jpg、jpeg、tif、tiff、eps、ps といった形式のファイルをソース文書にドロップすると、\includegraphics コマンドが挿入され、ファイルへの参照が行なわれます。cls、sty、bib 形式のファイルをドロップすれば、\documentclass、\usepackage、\bibliographystyle コマンドが挿入され、ファイルへの参照が行なわれます。その他のテキスト・ファイルをドロップした場合には、\input コマンドが挿入され、ファイルへの参照が行なわれます。</font></ul><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>修正されたバグ：</b></font>		<ul><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><li>バージョン1.31でズーム倍率が1000まで引き上げられましたが、倍率コントロールの隣りにある矢印では400までしか上げられませんでした。これを修正。<li>プレビューウィンドウのツールバーを「テキストのみ」の表示にしてズーム倍率を選択すると、倍率を入力する小窓が1.31ではずっと残ってしまっていました。これを修正。<li>環境設定において、タブ幅の文字数、あるいはプレビューウィンドウのズーム倍率を設定してキャンセルすると、ふたたび環境設定パネルを開いたときに、キャンセルしたはずの設定がそのまま残っていました。これを修正。<li>環境設定で見開きページが「右からスタート（片面）」になっているとします。1.31において、左矢印キーはまあ「見開きページ」で機能していましたが、右矢印キーは最後の１ページ手前で止まってしまっていました。「複数見開きページ」では、end キー、ページダウン・キー、それに右矢印キーが最終ページを表示する手前で止まっていました。こうした問題をすべて修正。</ul><hr><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>バージョン1.31</b>では TeXShop にさらなる機能を追加し、いくつかのバグを修正しました。</font><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>新機能：</b></font><ul><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">現在のウィンドウで設定されているタイプセット・エンジンごとに、マクロ項目をそれぞれ特有のものにできるようになりました。TeXShop を最初に起動した際に、２つのデフォルトのマクロ・セットが作成されます──ひとつは LaTeX 用で、もうひとつは ConTeXt 用です（ ConTeXt 用のセットは Hans Hagen により作成されました；ありがとう！）。違うタイプセット・エンジン（たとえば TeX ）が選択されたとします。当初はデフォルトの LaTeX 用のセットになっています。が、このマクロ・セットをマクロエディタで編集すると、編集したセットが TeX 使用時には使われるようになります──以前の LaTeX マクロはそのまま LaTeX で使われます。もちろん LaTeX マクロも編集可能です。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">新しい環境設定項目により、見開きページモードの最初のページを、左始まり右始まりのいずれにもできるようになりました。書籍では通常、最初のページは右にあるので、デフォルトの設定は右始まりになっています。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">環境設定ダイアログに新しいプルダウンメニューを設け、設定プロファイルをデフォルト値にリセットできるようにしました。この追加は銭谷誠司さんからのリクエストによるもので、３つの異なる版の pTeX に対応する必要がある日本のユーザ向けです。日本のユーザのみなさんは、ウェブサイトにあるドキュメントを調べずとも、素早く環境設定を行なえるようになりました。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">プレビューウィンドウでの最大ズーム倍率が1000になりました（以前は400でした）。</font><li> <font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3">Hendrik Chaltin によりフランス語訳のメニューを追加；ありがとう！</font></ul><p><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><b>修正されたバグ：</b></font>		<ul><font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><li>Panther がらみの問題を３つ修正。Panther での外観を改善するために、いくつかのインターフェイスを変更しました。今回のリリースは Panther への対応に欠くことのできないものです。<ul>	<li>Panther において、古いバージョンの TeXShop が、既存のファイルは開くものの、新規書類を作成しない──これは「 displayName 」コードに２行追加して修正しました。	<li>Panther では、「見開きページ」もしくは「複数見開きページ」でスクロールをかけたときに、現在のページ数を表示する小さな黄色いタグが空白になっていました。また、プレビューウィンドウの一部をコピーしようとして選択した方形部分のサイズを表示する小さな黄色いタグも空白なっていました。これを修正。	<li>私のシステムでは、いずれのプログラムにおいても頻繁に Panther のスペルチェックがうまく機能しなくなります。これは起動時に発生します。コンピュータは起動しますが、最初に使うプログラムが TextEdit ないしは Mail であっても、「あなたが入力するのに合わせてスペルチェック」してくれませんし、「スペル・ダイアログ」も出してくれません。これは私のディスク上にあるサードパーティ製のプログラムの不具合ではないかと思われます──よその Panther ユーザはこの問題に遭遇していないのです。しかし、私は今のところバグを発見できていません。いったん問題が発生すると、TextEdit と Mail でのテキスト入力に些細な支障が生じますが、これは入力中の自動スペルチェックをオフにすることで直ります。こうした状況で、TeXShop にはもっと深刻な障害がありました。なので1.31では、スペルチェックが利用可能でない場合に、TeXShop 起動時に入力中の自動スペルチェックをオフにする余分なコードを追加しました。	</ul><li>Luis Sequeira により報告されたバグの修正：ソースウィンドウ内でテキストをドラッグした際に、コピーされペーストされる。オプションキーを押しながらでないかぎり、カットされペーストされるべきである。これを修正。<li>Juan Luis Varona Malumbres がスペイン語ヘルプをいくらか改善（ドロワーに表示されるヘルプ・ファイルのリストの小アイコン）。<li>見開きページで表示しているとき、タイプセット後に最初のページに移動しないようにしました。<li>新しいページ表示ボタンおよびズーム倍率ボタンでは（1.29以前のように）テキストフィールドが選択された状態〔 firstResponder 〕になっているので、いちいちクリックすることなく、いろいろな設定を試してみることができます。<li>バージョン1.30以前では、「移動行指定」ダイアログで不可能な行数を入力した場合、プログラムがクラッシュすることがありました；これを修正。このバグの報告を Eric Seidel に感謝。<li>環境設定項目のインターフェイスの配置を見直し、メニュー項目をいくらか修正し、その他にも Panther でのインターフェイスを改善した新しい English.lproj フォルダを Kevin Ballard（ kevin@sb.org ）に提供してもらいました。どうもありがとう！<li>ドイツ語版の環境設定パネルで Panther 用にスペースを変更。Martin Kerz の提案に感謝。<li>タグの自動追加機能をオフにする隠れた環境設定を用意しました：「 defaults write TeXShop TagSections NO 」がそれですが、この環境設定はいつの間にか（1.30では確実に）使えなくなっていました。これが再び使用可能になりました。<font size="2" face="Lucida Grande,Geneva,Arial,ヒラギノ角ゴ Pro W3"><li>TeXShop がアクティブでないときにも環境設定ウィンドウが隠れなくなりました。</ul></BODY></HTML>