<HTML>

<HEAD>
				<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=UTF-8">
				<TITLE>更新履歴</TITLE>
				<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch under the GNU FDL">
				<META NAME="description" CONTENT="新機能　バグ修正">
				<link href="../sty/screen.css" rel="stylesheet" media="all">
</HEAD>

<BODY>
<div id="content_normal">

<P><h5>バージョン2.41での変更点</h5></P>

<ul>
<!-- The old Auto Completion facility in TeXShop has been given a more understandable name: Key Bindings. 
All features remain the same. Internally in the code, TeXShop still calls this feature AutoCompletion, but interface
elements have been changed to the new name. -->
<li> 「オートコンプリート」と呼ばれていた機能が，より分かりやすく「キーバインド」と改名されました。機能は同じままです。内部的には，AutoCompletion という名前を引き続き利用していますが，インターフェースだけが新しい名前に変わりました。

<p>
<li><!-- The facilities Key Bindings and Command Completion have been made more prominent
in the interface. The Source menu has a new "Key Bindings" menu and the "Command" menu
just below it has been renamed "Command Completion". Both of these items have submenus. The
Key Bindings menu has submenus --> 
「キーバインド」と「コマンド補完」はよりインターフェース上でより目立ちやすくなりました。ソースメニューには，新しい「キーバインド」メニューと，その下に「コマンド補完」（以前は単に「コマンド」でした）が並んでおり，両者にサブメニューがあります。「キーバインド」メニューのサブメニューは
<dl>
<dd> ON/OFF 切り替え
<dd> キーバインドファイルの編集...
</dl>
<!-- and the Command Completion menu has submenus -->
で，「コマンド補完」メニューのサブメニューは
<dl>
<dd> 用語を追加
<dd> マーク
<dd> 補完用語ファイルの編集...
</dl>
です。
<p> <!-- The commands in the Command Completion menu were present in earlier versions and have been rearranged
so make the two facilities  parallel. The Edit Key Bindings File... item is new, bringing up a new editor
by Yusuke Terada. Thus users no longer need edit a configuration file in ~/Library/TeXShop.
The "Toggle On/Off" item turns key bindings on or off on a file by file basis, duplicating functionality previously provided by an optional toolbar source item. The old Preference
Panel item turning Key Bindings on or off remains, setting the default when files are first open.
 --> 
「コマンド補完」メニューは以前のバージョンからありますが，「キーバインド」メニューと対照的になるよう再編成されました。「キーバインドファイルの編集...」が新たに追加され，寺田侑祐さん作の新しいエディタが起動します。「ON/OFF 切り替え」のメニューによって，ファイル単位でキーバインド機能の OF/OFF を切り替えられます。ドキュメントウィンドウのツールバーには，元からこれと同じ機能を果たす追加ツールバー項目がありましたが。
<li><!-- A new "Close Current Environment" item in the Source Menu closes the open environment nearest the cursor. --> 
新しい「現在の環境を閉じる」というメニュー項目がソースメニューに追加されました。カーソル位置に最も近い開いている環境を閉じます。


 
</ul>

<P><h5>バージョン2.40での変更点</h5></P>

バージョン2.40は小さなバクの修正版です。

<ul>
<li> <!-- When working with a project containing a root file, windows would sometimes move as new chapter source
files were opened. This is fixed.-->
プロジェクトルートファイル（親ファイル）を開いている状態で，子ファイルを開くと，親ファイルのウィンドウが動いてしまう問題を修正しました。

<p>
<li> <!-- TeXShop has a hidden preference, "RedConsoleAfterError", which colors console output red after an
error occurs in the source. This preference stopped working several versions ago. It again works.-->
新しい "RedConsoleAfterError" という隠し設定項目が追加されました。これは，エラーが起こった後にコンパイルを継続すると，それ以降のコンソールウィンドウの文字列を赤くするというものです。この設定は随分前のバージョンから機能しなくなっていましたが，復活しました。

<p>
<li> <!-- A few users disliked the temporary red color of parentheses in the new parenthesis matching code,
but didn't want to turn parenthesis matching completely off because they wanted the matching parenthesis
to blink. These users can now change the temporary parenthesis color in the Preference Panel.-->
対応する括弧を入力したときに括弧の色が一瞬赤く変わりますが，その色が気に入らない，でも対応括弧強調機能を完全にオフにしたくはないという人がいました。そこで，環境設定パネルでその色を変更できるようにしました。

<p>
<li> <!-- Hidden preference items were added to change all of the colors used in the new 2.38 additions by
Yusude Terada: the temporary parenthesis color (default is magenta), the highlight color for text between matching parentheses (default is yellow),
and the color of invisible characters when shown (default is orange). -->
バージョン2.38で寺田侑祐さんによって追加された新機能の色を全て変更できる隠し設定項目が用意されました。対応する括弧の強調色（デフォルトではマゼンタ），対応する括弧で囲まれる部分の強調色（デフォルトでは黄色），不可視文字の表示色（デフォルトではオレンジ）です。次のようなコマンドでこれらを変更可能です。

<dl>
<dd> defaults write TeXShop highlightBracesRed 1.00
<dd> defaults write TeXShop highlightBracesGreen 0.00
<dd> defaults write TeXShop highlightBracesBlue 1.00
</dl>
<dl> 
<dd> defaults write TeXShop highlightContentRed 1.00
<dd> defaults write TeXShop highlightContentGreen 1.00
<dd> defaults write TeXShop highlightContentBlue 0.00
</dl>
<dl> 
<dd> defaults write TeXShop invisibleCharRed 1.00
<dd> defaults write TeXShop invisibleCharGreen 0.50
<dd> defaults write TeXShop invisibleCharBlue 0.00
</dl>

<p> 
<li> <!-- On Snow Leopard and above, matching braces are briefly marked with a yellow badge over the brace; this
fulfills a request for great visibility of the matching characters. The badge can now be turned off with a hidden preference:-->
Leopard 以降では，新しく括弧を打ち込んだとき，対応する括弧を示す黄色いインジケータが表示されます。これは対応する括弧を非常に見やすくするという役割を果たしますが，不要な場合は以下の隠し設定で止めることができます。
<dl>
<dd> defaults write TeXShop brieflyFlashYellowForMatch NO
</dl>

</ul>

<P><h5>バージョン2.39での変更点</h5></P>

<!--

TeXShop 2.39 fixes a significant bug for users who write in Hebrew and Arabic. In
version 2.38, typesetting sometimes displaced diacritical marks left one character,
even though the source looked correct. The problem was not in the typesetting, but
instead in the source code, which was converted to an incorrect form when saved. This is fixed.
See the explanation which follows.-->

バージョン2.39は，ヘブライ語やアラビア語を利用しているユーザにとって重大なバクを解消しました。バージョン2.38では，タイプセットの際に，ヘブライ語やアラビア語の文字列を（見た目は何も変わらないのに）不正な形で保存してしまう問題がありました。それが解決されました。詳細な説明は以下を参照してください。

<ul>
<li> <!-- Some languages use extensive diacritical marks, including more than one mark for each letter.
For these languages, there are 
two conventions about the order that the main character and diacritical
marks are written. The two conventions are -->
UTF-8 で日本語を記述する際，濁点・半濁点の扱いを巡って，NFD，NFCという２種類の正規化方式があります。普通の UTF-8 は NFC ですが，Mac のファイルシステム HFS+ は NFD を使っているため，NFD は UTF-8-MAC とも呼ばれます。つまり，
<dl>
<dd>	UTF-8-Mac = NFD = Normalization Form Decomposition
<dd>	UTF-8 = NFC = Normalization Form Composition
</dl>
<p> <!-- A major problem is that the two forms look the same on the screen, but
typeset differently (or in some cases not at all). Users in Japan
sometimes copy and drag UTF-8-MAC text to TeXShop, but then find
that they cannot typeset. So Yusuke Terada provided automatic conversion. This breaks Hebrew
and Arabic typesetting.-->
厄介なことに，画面上では両者は全く同じに見えるのに，タイプセット結果が異なります。場合によってはタイプセットができません。
UTF-8 を解釈する TeX エンジンは，NFC の UTF-8 を要求します。しかし，Finder から濁点入りのファイル名をコピーやドラッグ＆ドロップしたり，Preview.app から濁点入り文字列をコピーした場合などに NFD の文字列がソース中に入り込み，そのような場合，ソースの画面上では何も問題なく見えるのに，コンパイルが失敗するといった問題が生じます。そこで，寺田侑祐さんは，内部的に両者を自動変換することでこの問題を解決していました。しかし，その変換が逆にヘブライ語やアラビア語に対しては悪い影響を及ぼしていたのです。

<p> <!-- In TeXShop 2.39, a new Preference item under the Miscellaneous tab turns this automatic conversion on. The
preference item should be turned on by users in Japan, but most other users should leave it off.-->
そこで，バージョン2.39では，環境設定パネルの「詳細」タブに，この自動変換をON/OFFできる設定項目を用意しました。日本人ユーザはこれをONにし，他国のユーザはOFFにしておくことをお勧めします。

<li> <!-- The program  comes with French translations by Rene Fritz of Herbert Schulz' two documents on
Command Conversion and TeXShop Tips and Tricks.-->
Rene Fritz さんが，Herbert Schulz さんの２つの文書（Command Conversion, TeXShop Tips and Tricks）のフランス語版を用意してくれました。

<p>
<li> <!-- Minor improvements have been made in the French, Spanish, German, and Chinese translations.-->
フランス語，スペイン語，ドイツ語，中国語の翻訳が少し改良されました。

</ul>

<P><h5>バージョン2.38での変更点</h5></P>

<p> <!-- Version 2.38 contains some wonderful changes by Yusuke Terada,
who made the changes at the request of employees in the company he works for in Tokyo. Most of Terada's changes are activated by new items in the TeXShop Preference
Panel, which are turned off by default. So users need to turn these items on and
experiment. You can easily return to the old behavior if desired. Here are Terada's changes:-->
バージョン2.38 には，寺田侑祐さんによる素晴らしい変更の数々が盛り込まれています。彼は，勤務している東京の会社で，従業員からの要求に応えて TeXShop に変更を施しました。寺田さんの新機能のほとんどは，TeXShop の環境設定パネルでONにする形です。デフォルトではOFFなので，新機能を試してみたい人はそれらをONにする必要があります。もし元の挙動に戻したければ簡単に戻せます。以下が寺田さんの変更点です。

<ul>

<li> <!--Show Invisible Characters: TeXShop can now show ordinary space characters,
Japanese full width space characters, tab characters, and newline characters visually
in the source window. Preference items turn each choice on or off, so users can
display only some items if desired. A Preference item determines whether invisible
characters are shown when files are first opened, and a menu item then  toggles invisible
characters on or off on a file-by-file basis.-->
不可視文字の表示：半角スペース，全角スペース，改行，タブの表示ができるようになりました。環境設定パネルで，各文字の表示・非表示を切り替えることができます。これらのうち一部の文字だけを表示するということも可能です。「ファイルを開いた直後から表示」という項目にチェックしておけば，ファイルを開いた段階でデフォルトでこれらの不可視文字を表示するようになります。ファイルを開いた後も，メニューの「不可視文字の表示」を切り替えることで，ファイル単位で不可視文字の表示・非表示を切り替えられます。

<p>
<li> <!-- Much better handling of parentheses: { and }, ( and ), [ and ], and < and >. 
When such a pair is closed, the matching opening parenthesis is clearly marked, 
and the entire section between these parentheses is colored
yellow. This yellow color remains until another character is typed, and then it
vanishes. Thus it is much easier to close a parenthesis and then stop and make sure
the scope of that parenthesis pair is correct. By default, this feature is on, but
it can be turned off in Preferences.-->

括弧類 {  }, (  ), [  ], &lt; &gt; の取り扱いがずっと良くなりました。これらのペアが閉じたときに，対応する括弧が黄色いインジケータで見やすく強調され，また，その括弧で囲まれる部分が黄色く強調されます。この強調表示は，他の文字を打つかカーソルを移動すれば消えます。この機能によって，括弧が正しく閉じているかどうかの確認がずっと楽になります。この新機能はデフォルトでONになっていますが，環境設定パネルでOFFにすることもできます。

<p>
<li> <!--If a parenthesis is typed with not matching pair, the computer beeps, or
if desired the screen flashes. This feature is off by default and must be turned on
in preferences. -->
対応する括弧のない，孤立した括弧を打ち込んだとき，望むならば，警告音を鳴らしたり，画面をフラッシュさせたりすることで警告させることができます。この警告機能はデフォルトでOFFなので，使いたい人は環境設定パネルでONにする必要があります。

<p> 
<li> <!-- The parenthesis matching settings are controlled by five preference items, which can be
turned on or off individually. The first item, "Highlight Enclosed Characters", marks text
between matching parentheses in yellow  when a parenthesis is closed.
The yellow vanishes when additional characters are typed. The
second item, "Show Indicator in Moving", activates this feature when using arrow keys
to move through the text, so when the active position becomes a parenthesis, the area it 
controls is shown in yellow.  The third item, "Blink Highlight", causes a matching parenthesis
to switch temporarily to red and then blink back to its natural syntax color. When this item is
off, the matching parenthesis will remain red until a new character is typed. The last two
items, "Beep for Isolated Parens" and "Flash Back for Isolated Parens", cause the
computer to beep, or momentarily flash the source window background, when a parenthesis
is typed which has no match.-->
環境設定パネルに，「括弧の対応チェックの詳細」というグループが新設され，その中に５つの設定項目があります。最初の「囲まれる部分を強調」というのは，括弧で囲まれる部分の中身に黄色く色を付ける機能です。この黄色い強調表示は，他の文字を打つかカーソルを移動すれば消えます。２番目の「移動中も黄色くポップアップ」は，（文字入力中だけでなく）カーソルを移動している際も，文字入力中と同様に，括弧にさしかかると，対応する括弧を黄色く強調表示する機能です。３番目の「対応する括弧を点滅」は，対応する括弧の色が変わった後，元の色に戻るかどうかを規定します。この項目がOFFの場合は，他の文字を打つかカーソルを移動するまで強調表示色が維持されます。下２つの「孤立括弧を音で警告」「孤立括弧を背景色で警告」は，対応する括弧のない孤立括弧を打ち込んだときに，警告音や背景色の点滅で警告するかどうかを規定します。

<p>
<li> <!--Two new items were added to the Window menu: "Next Source Window" and "Previous
Source Window". These cycle through source windows without changing the Preview Window.
This is particularly useful in a project which inputs multiple source files.-->
「ウインドウ」メニューに「次のソースウインドウ」「前のソースウインドウ」という新しいメニューが追加されました。これらは，プレビューウインドウやコンソールウインドウを除き，ソースウインドウのみを切り替えます。これらはたくさんのソースファイルを含むプロジェクトを編集している際には特に有用でしょう。

<p>
<li>  <!--The default preference setting which determines the position of  source  windows when first
opened is 
 "Remember last position on close".
But an introductory movie in TeXShop's
Help menu suggests changing this preference setting  to "All windows start
at fixed position". Because this change is recommended, the original "Remember last
position on close"  code in TeXShop did not work well.-->
TeXShopの「ソースウインドウの位置」のデフォルト設定は「閉じたときの位置を記憶」になっています。しかし，ヘルプメニューにある TeXShop の入門ムービーでは「いつも同じ位置で開く」の方の設定にするよう推奨しています。これは，「閉じたときの位置を記憶」がうまく機能しなかったからです。

<p> <!-- Terada has improved the default greatly. New windows now appear cascading down and to the right as 
recommended by Apple's Interface Guidelines, rather than on top of each other. Try this method
 to get a feel for Terada's improvement. Similar remarks apply for positioning of Preview windows.-->
寺田さんがこのデフォルトの挙動を大きく改善してくれました。新しいウインドウが，Appleのインターフェースガイドラインに則り，右下にずれて現れるようになりました。寺田さんによって改善されたこの挙動を体感してみてください。これは，ソースウィンドウだけでなくプレビューウィンドウにも適用されます。

<p> <!-- Note that if you use the "All windows start at fixed position" setting, Terada's changes
do not apply and TeXShop works as it always has.-->
なお，「いつも同じ位置で開く」の方の設定にしている場合には，テラダさんによる変更は一切影響せず，これまで通りに使えます。

<p>
<li> <!-- TeXShop uses the default Cocoa behavior for window titles. Before considering
Terada's modification, recall this  default behavior.
Suppose a source file is titled "Sample.tex". Then the title
at the top of the source window will read "Sample.tex" and the title at the top of the preview
window will read "Sample.pdf". If you click on either title while holding the Command Key down,
a pull down menu will appear listing the various components of the full path to the file. Choosing
one of these items will open the corresponding folder in the Finder. In this way, it is very easy
to go to the actual source or output file in the File system. Window titles are also listed in TeXShop's "Window" menu. 
Selecting a window title there
will bring the corresponding window to the front.-->
TeXShop は Cocoa のデフォルトのウィンドウタイトルを使っていました。寺田さんの変更が加わる前の挙動はこうでした。例えば，"Sample.tex"というファイルを開いているときは，ソースウィンドウのタイトルには "Sample.tex" と表示され，プレビューウィンドウのタイトルには "Sample.pdf" と表示されました。コマンドキーを押しながらこれらのタイトルをクリックすれば，そのファイルのパスを示すプルダウンメニューが表示されます。これによって，ファイルシステム上のソースファイル・出力ファイルに簡単にアクセスできます。また，ウインドウのタイトルは TeXShop の「ウインドウ」メニューにも一覧表示されます。これを選択することで，対応するウインドウを前面に表示することができます。

<p> <!-- All this is fine unless your work flow includes the following sort of action: suppose you have folders named Sample1,
Sample2, Sample3, and Sample4, and suppose each folder contains  a file
named Data. Suppose  that your master document uses
Sample1/Data and Sample2/Data. If your master and both data files are open on your desktop, 
you may want to switch from one data file to another using the items in the Window menu. But these
items will both be named "Data". It would be much better if  the Window menu listed "Sample1/Data" and
"Sample2/Data" so you could keep them straight.-->
しかし，次のような状況において困ったことが起こります。例えば，Sample1, Sample2, Sample3, Sample4 という４つのフォルダがあり，その中にそれぞれ Data という名前のファイルがあるとしましょう。親ファイルが Sample1/Data と Sample2/Data をインプットし，それらを両方開いて編集している状況を考えましょう。すると，両者のウインドウのタイトルはともに "Data" となり，ウインドウメニューにも "Data" という項目が２つ表示されます。これらをウインドウメニューで切り替えたいときに，どちらがどちらなのか分からなくなってしまいます。ウインドウメニューには，"Sample1/Data" や "Sample2/Data" のように表示されていれば，迷わずに済みます。

<p> <!-- Terada's change makes this possible. An optional toolbar item named "Show Full Path" with a checkbox  is provided
for the source window; this item must be added using "Customize Toolbar" and isn't in
the default toolbar.  Checking this item will cause the source and preview windows to list 
the full path to files rather than just the title of the files. Moreover, this full path will be listed in
the Window menu.-->
寺田さんの変更によってこれが可能になりました。ソースウィンドウの追加メニュー項目に「フルパス表示」という項目が設置されました。デフォルトでは表示されていないので，「ツールバーのカスタマイズ」を行って追加する必要があります。これをチェックすることで，ソースウインドウ・プレビューウインドウのタイトルバーに，ファイル名だけでなくフルパスを表示することができるようになります。さらに，ウインドウメニューにもフルパスが表示されるようになります。

<p><!-- Full path can be turned on or off on a file by file basis, so some files can show the full path
while others show only the window title. The default checkbox state in the toolbar of a newly opened window will
be the state last set by the user. Thus a user who always wants the full path displayed can check the
item once and then forget it,  even when quitting and restarting TeXShop. If that user changes their
mind, uncheck the item once and forget it. But some users will want to turn on full paths for some files and turn it
off for other files.-->
フルパス表示はファイル単位でON/OFF切替が出来ます。つまり，あるファイルはフルパス表示し，別のファイルはファイル名のみといった表示が出来ます。新しいウインドウを開いた際にデフォルトでONになるかOFFになるかは，ユーザの最後の選択を記憶します。常にフルパス表示しておきたいという人は，一度これをONにし，あとはそのままにしておけばOKです。

<p>
<li><!-- A new menu item in the TeXShop Help menu is provided, named "Open Style File". This
item will open any style file in the texmf trees visible to TeX and LaTeX. This command uses
"kpsetool" to find such style files, but the tool and its parameters can be changed in a new Engine file preference.-->
ヘルプメニューに，「スタイルファイルを開く」という新しいメニューが追加されました。これは，TeX や LaTeX が参照する texmf ツリーからスタイルファイルを探し出して開く機能です。これは，スタイルファイルを探すのに "kpsetool" というツールを利用しています。そのツールのパラメータは，環境設定パネルの「内部設定」タブで変更可能です。

<p>
<li> <!-- Syntax coloring has been changed slightly. Previously, the @ symbol ended a TeX command,
so "\@this" would only color "\@". But now the command is assumed to continue until a break character, so for example, every character of the following line
will be colored:-->
シンタックスカラーリングが少し改善されました。以前は，@ という文字によって TeX コマンド部分の色づけが止まりました。それゆえ，"\@this" という命令の場合，"\@" の部分のみが色づけされました。しかし，今は "\@this" 全体がコマンドとして色づけされます。その結果，例えば
<dl>
<dd>\ifx\@@input\@undefined\let\@@input\input\fi
</dl>
<!-- This will mainly affect users editing style files. -->
の場合，全文字がコマンドとして色づけられることになります。これは，主にスタイルファイルを編集するユーザに関係する変更です。

<p> <!-- We suspect that most users won't notice the change, and those who notice will like it. But
the old behavior can be restored with a hidden preference:-->
多くのユーザは，この色づけの仕方は気にしないと思いますが，気にするユーザにとっては好ましい変更であると思います。ただし，もし元の色づけの仕方に戻したいという場合は，次のコマンドで元に戻せます。
<dl>
<dd>	defaults write TeXShop MakeatletterEnabled NO
</dl>

<p>
<li><!-- A minor bug fix to the "Uncomment" command: previously, TeXShop removed
empty uncommented lines, but now it doesn't.-->
「コメントを外す」コマンドのバグを解決しました。以前のバージョンでは，TeXShop がコメントでない空行を抹消してしまうことがありましたが，それがなくなりました。


<p>
<li> <!-- A new preference "BibTeX Engine" is provided listing the default BibTeX engine. Most
users will list "bibtex" as the default. This
preference is mainly present for users in Japan, where users have access to-->
「BibTeX エンジン」という設定項目が環境設定パネルに新設されました。デフォルトでは "bibtex" になっています。多くのユーザはこのままで構いませんが，日本人ユーザは必要に応じて次のようなコマンドに変更してください。
<dl>
<dd>	bibtex, jbibtex, pbibtex, upbibtex
</dl>

<p>
<li>  <!--New hidden preference items named "backgroundAlpha" and "ConsoleBackgroundAlpha" are
provided. For example, the following commands will provide source windows with translucent
backgrounds:-->
新しい隠し設定項目 "backgroundAlpha" と "ConsoleBackgroundAlpha" が追加されました。例えば，次のように設定することで，ソースウインドウの背景を半透明にできます。
<dl>
<dd>$ defaults write TeXShop SourceWindowAlpha 0.9
<dd>$ defaults write TeXShop backgroundAlpha 0.6
</dl>

<p><!-- (Actually my experiments show that both of these preference items are irrelevant, and the
old SourceWindowAlpha and ConsoleWindowAlpha, documented in TeXShop Help, are
enough to make transparent windows. I'll keep this item in the change document 'just in case.' -- Dick Koch)-->

<li> <!--When "utf export" is enabled to support pTeX in Japan, UTF-8-Mac encoded text
is automatically converted to UTF-8 encoded text.-->
日本人ユーザのために，UTF-8-MAC エンコーディングを自動的に UTF-8 に変換して保存するようになりました。

</ul>

<p> <!--In addition to the work of Terada, TeXShop 2.38 has the following changes:-->
寺田さんの業績に加えて，バージョン2.38では次のような変更が加わっています。

<ul>
<li> <!-- Version 2.38 contains a new Chinese localization by Linus Yang, from Fudan
University in Shanghai, China. Thanks!-->
バージョン2.38では，新しく上海のFudan大学の Linus Yang さんによる中国語ローカライズが含まれました。感謝！

<p> 
<li> <!-- The Help menu now contains a link to a wonderful document by Herbert Shultz called
"TeXShop Tips & Tricks." This document describes a number of useful TeXShop
features in much more detail than the Help panel, including sections on working with large documents,  pdflatexmk, editing shortcuts,
auto completion, and command completion.  -->
ヘルプメニューに，Herbert Shultz さんによる「TeXShop のヒントと技巧」という素晴らしい文書へのリンクが含まれました。この文書には，大きな文書の編集，pdflatexmk，ショートカットの編集，オートコンプリート，コマンド補完など，TeXShop の便利な特長の数々が，ヘルプパネルよりもずっと詳しく記されています。
<p>
<li> <!-- The following bug is fixed:  when a TeX source window is closed, the pdf Preview
window is also closed. In previous versions, the Preview window was not deliberately closed in code, but it
closed anyway because closing a document releases its nib file. This may have caused crashes
in a small number of cases.  In Apple's forthcoming Lion system, the corresponding crash
always happens. But version 2.38 of TeXShop fixes this problem. -->
次のバグが修正されました：ソースウィンドウを閉じる際PDFプレビューウィンドウも閉じられます。以前のバージョンでは，プレビューウィンドウはあえてコード上では閉じていませんでしたが，文書を閉じる際は nib ファイルが解放されるので，本当はプレビューウィンドウも閉じられていました。これによって，いくつかの場合にクラッシュを引き起こすことがあったでしょう。Appleの次バージョンOSのLionでは，毎回必ずこのクラッシュが起こるようになっていました。しかし，バージョン2.38ではこの問題が解決されました。

<p> <!-- In short, this fix may help stability on earlier systems, and is required for Lion.-->
端的に言うと，この修正によって，これまでより安定性が改善され，これは特に Lion では必須ということです。

<p>
<li><!-- The next addition is by Alvise Trevisan. In previous versions of TeXShop,
 if you type begin{itemize} (or \begin{}} or a number of other
typical fragments) and then push the Escape key, the corresponding \end{itemize} will appear
on the following line and it is only necessary to fill in the intermediate lines. Unfortunately, if the
opening \begin{itemize} is indented, the indentation is not preserved for the corresponding
\end{itemize}. But with Trevisan's modification, it is preserved.-->

次の変更は Alvise Trevisan さんによるものです。\begin{itemize} (または \begin{} など典型的なコード断片）を入力してエスケープキーを押すと，対応する \end{itemize} が次の行に現れ，その間を埋めるだけで済みます。ただし，\begin{itemize} がインデントされているときには，対応する \end{itemize} がインデントされずに出てきてしまっていました。Trevisan さんの修正によって，インデントが保存されるようになりました。
<p>
<li> <!--Herb Schulz adopted Trevisan's code to provide a similar preservation of indentions throughout
Command Completion. -->
Herb Schulz さんが，Trevisan さんの修正コードを，コマンド補完全般にわたってインデントが保存されるようにしてくれました。
<p>
<li> <!-- The  ConTeXt-MKIV.engine and the document "About the Inactive Folder" in
TeXShop/Engines/Inactive have been revised to indicate that users must run the following command ONCE
in Terminal before using this engine:-->
ConTeXt-MKIV.engine と TeXShop/Engines/Inactive の文書 "About the Inactive Folder" が改訂されました。このエンジンを使う前にユーザは一度だけターミナルで次のコマンドを実行せねばならないと書かれています。
<dl>
<dd>	luatools --generate
</dl>

<p>
<li><!-- Added the file extensions bbx, cbx, and lbx to the list of files which TeXShop can edit, and
activated syntax coloring for such files.-->
TeXShop で編集可能なファイルの拡張子に bbx, cbx, lbx が加わり，それらのファイルのためのシンタックスカラーリングが有効になりました。
<p>
<li> ファイル→作業ファイルを削除 の対象に .bcf と .run.xml が加わりました。これは latexmk において biber から bibtex に切り替えるときに必要となります。

<p>
<li> Alan Munn updated the help files advanced_otherfiles, advanced_syntaxcolor, basic_preferences,
and advanced_personaltetex. The revisions document a couple of obscure features, but the key point
is that Munn's formatting makes these files easier to read. It also introduces some
inconsistency in the appearance of help pages, but we hope the remaining pages will be reformatted 
in the same way over time.

<p>
<li> The program contains version 4.23 of Latexmk.

<p>
<li> For some time, TeXShop has contained a Substitutions submenu in the Edit Menu. This menu allows
users to activate a number of operating system enhancements  for inputting text:
<dl>
<dd> Smart Copy/Paste
<dd> Smart Quotes
<dd> Smart Dashes
<dd> Smart Links
<dd> Data Detectors
<dd> Text Replacement
</dl>
Consult Apple documentation for details.

<p> Until version 2.38, users had to activate these items each time they opened a file. In TeXShop 2.38, the last choices
a user makes are remembered and used when new files are opened, even after quitting TeXShop.

<p> Warning: Operating system 10.4 (Tiger) only supports smart Copy/Paste. System 10.5 (Leopard) adds support for
smart quotes and smart links. The remaining items are only available in system 10.6 (Snow Leopard) and beyond.
All items are standard parts of Apple's text system, and some may not be appropriate when editing TeX/LaTeX
documents.

<p>
<li> TeXShop 2.38 adds a new magic marker to select the spelling dictionary; this idea was first introduced in the
latest release of TeXworks. Suppose a source file is written in German and  one of the first twenty lines
in the file is
<dl>
<dd> % !TEX spellcheck = de-DE
</dl>
Then the spell checker will use the German dictionary with this document, but will use the default spelling dictionary
for all other open documents without this line. TeXShop reads this line when opening the file, so when the magic marker
is created, the file must be saved, closed, and reopened before TeXShop will use it.  If a project uses several include files,
 each include file must contain the line. 
 
 <p> When using this command, Apple dictionaries are specified using either the ISO 639-1 or ISO 639-2 standards for determining language designations, and the ISO 3166-1 standard for regional designations. The regional designation is used to distinguish between a language as used in one part of the world and that same language in another part of the world. For instance, French is "fr" in ISO 639-1 and "fre" in ISO 639-2; French (France) has regional designation "FR" and
French (Canadian) has regional designation "CA". So to select a French dictionary in Canada, "spellcheck = fr" will work, and "spellcheck = fr-CA" would be even better.
Since these are ISO standards, similar commands will work on other platforms, although TeXShop only runs on the Mac. The language standards are described in 
<dl>
			<dd><a href="http://www.loc.gov/standards/iso639-2/php/English_list.php">http://www.loc.gov/standards/iso639-2/php/English_list.php</a>
		</dl>
and the regional standards are at
<dl>
			<dd><a href="http:www.iso.ch">http:www.iso.ch</a>
		</dl>
although this second site is difficult to use.

<p> Specifying a cocoAspell dictionary is slightly tricky. The Spelling Preference Pane installed by cocoAspell lists all cocoAspell dictionaries, including active dictionaries. Names in this list are the names to be used following "spellcheck". When these dictionaries appear in Apple's list in the Language & Text panel, they often have different names. Those names don't work.

<p> For example, there  is a ocoAspell dictionary named German. If the German dictionary is selected in the Spelling Preference Panel, then the resulting dictionary will be listed in Apple's panel as Deutch (Aspell). In this case 
<dl>
			<dd>% !TEX spellcheck = de
		</dl>
will select Apple's German dictionary and 
<dl>
			<dd>% !TEX spellcheck = German
		</dl>
will select the cocoAspell German dictionary, while
<dl>
			<dd>% !TEX spellcheck = Deutsch (Aspell)
		</dl>
will select nothing. 

<p> Similarly there is a cocoAspell dictionary named German (Germany) in the Spelling Preference Pane. To select it, the appropriate command is
<dl>
			<dd>% !TEX spellcheck = German (Germany)
		</dl>





</ul>

<P><h5>TeXShop Changes 2.37</h5></P>

<ul>

<li> TeXShop contains a slightly updated Japanese localization by Seiji Zenitani.
<p>

<li> The TeXShop/Engines/Inactive folder now contains Latexmk 4.18 and a short new document titled
Quick Start Guide for latexmk.
<p>

<li> In Help and other spots, Dick Koch's email address was changed from
<dl>
<dd>http://www.uoregon.edu/~koch/texshop
</dl>
to
<dl>
<dd>http://pages.uoregon.edu/koch/texshop
</dl>
to conform to changes for all faculty at the University of Oregon.
</ul>


<P><h5>TeXShop Changes 2.35 amd 2.36</h5></P>

<ul>

<li> TeXShop 2.35 is an internal version never publicly released.
<p>

<li> Added a new preference item which switches between the tab and escape keys as the trigger for command completion. 
<p>
<li>
Recall
that complicated commands entered with command completion include "marks" where the various command arguments occur. The Completion/Marks menu contains menu commands to go to the next mark, or to the previous mark. These menu commands have keyboard shortcuts which have not been changed. But TeXShop 2.36 adds extra keyboard shortcuts for these two commands:
<dl>
<dd> option-escape to go to the next mark
<dd> control-escape to go to the previous mark
</dl>
<p>
When the tab key triggers command completion, these shortcuts become
<dl>
<dd> option-tab to go to the next mark
<dd> control-tab to go to the previous mark
</dl>
<p>

<li> Keyboard shortcuts always cause trouble for some users, who may have third party utilities which already use those shortcuts. So there is a hidden preference to turn off the new shortcuts for next mark and previous mark:
<dl>
<dd> defaults write TeXShop CommandCompletionAlternateMarkShortcut NO
</dl>
<p>
<li> Added a menu item following the File/New command:
<dl>
<dd> New from Stationery...
</dl>
<p> Selecting this item brings up a list of  stationery: Beamer, AMS-Article, Letter, Project, ProjectChapter, etc. Each item is listed in the left column and briefly described in the right column. Selecting an item opens a new document with the contents of the chosen stationery. This document is not associated with the stationery file on disk, so pushing the typeset button asks the user to save the document and suggests as a default name "Untitled", exactly as if the document had been created by the New command.

<p> Version 2.36 contains rather rudimentary stationery files. I'm hoping users will contribute better and more robust alternatives for future versions.

<li> Stationery files are stored in a new folder: ~/Library/TeXShop/Stationery. This folder works like all other folders in ~/Library/TeXShop. Users can remove files from the folder, edit files currently there, and add additional files. To recreate the default folder, entirely remove the Stationery folder and restart TeXShop.

<p> Each stationery document ends with extension ".tex". If the folder contains a file with the same name, but extension ".comment", then this file is assumed to contain a one line comment about the file, which will appear in the right column of the stationery dialog. Thus the folder contains both Beamer.tex and Beamer.comment. This "comment" file is optional. An easy way to create a comment file is to duplicate an existing file, rename it, and edit its contents with TeXShop. 

<p> The stationery mechanism is a variant of the Templates menu in TeXShop, which is unchanged. My hope is that the default stationery menu will lead new users more quickly to the standard documents almost everyone eventually creates. Hence I intend to keep the default collection fairly small. Users are free to add additional stationery to the mix.


<li>  Version 2.36 contains a slightly revised LilyPond engine.

<p>
<li> Version 2.36 contains a new default ConTeXt-MKIV engine, created after consulting Hans Hagen at TUG-2010.



</ul>



<P><h5>TeXShop Changes 2.34</h5></P>

<ul>

<li> Removed keyboard shortcut for "hard wrap", since pushing it by mistake can have drastic consequences.
<p>

<li> Added new Edit menu items: Substitutions, Transformations, Speech. These are standard Apple items,
which automatically add these features to the editor. However, part of this addition is not complete. In a future
version, there will be Preference items to preserve the user's choices for smart copy/paste, smart quotes,
smart dashes, smart links, data detectors, and text replacement. Currently, choices are temporary while
the document is open.
<p>

<li> New version of Latexmk, 416a.
<p>

<li> LuaLatex is now a default engine, since LuaTeX has progressed to a system which can be used for
real work. But only new users will see the change; older users must drag LuaLatex from the Inactive folder
to the active area.
<p>

<li> The Sage engine and documentation are slightly improved.
<p>

<li> Fixed the problem of offset line numbers in the German localization.
<p>

<li> Added the Stex extension as one TeXShop can edit and syntax color; this is used when working with R.
<p>

</ul>


<P><h5>TeXShop Changes 2.32 and 2.33</h5></P>

<ul>

<li> TeXShop 2.32 is an internal version never publicly released.
<p>

<li> The major change in 2.33 improves the upgrade process. In previous TeXShop versions, it was necessary to regenerate
various folders in ~/Library/TeXShop to get new defaults. While this method still works, the changes make regeneration unnecessary.
There are three aspects to the change:

<ul>
<p>
<li> TeXShop now automatically updates three subfolders of ~/Library/TeXShop: bin, Engines/Inactive, and Scripts. This upgrade does not
remove files added by the user; it only writes new files and folders or updates existing files and folders known to TeXShop. Note that active engines in ~/Library/TeXShop/Engines are not updated; only the inactive folder is updated.
<p>
<li> TeXShop adds a new folder, ~/Library/TeXShop/New. This folder can be totally rewritten during an update. 
<p>
<li> Finally, TeXShop Help contains a file named "About This Update," which is rewritten for each update, explaining the exact steps needed to obtain new defaults.
</ul>
<p>
As an example of how these changes are used, consider the case when there is a new default Macro. It is no longer necessary to regenerate the Macros folder to obtain this Macro. Instead, the New folder will contain the new macro. Use the Macro Editor's "Add Macros from File..." item to add the macro, and drag it in the Macro Editor's list to an appropriate spot.
<p> Another example: the latexmk engine is often upgraded, but the upgrade usually changes support files in bin rather than the engine itself. From now on, such upgrades will be made automatically without user intervention. Fairly often, additional engines are added to the Inactive folder during upgrades. These will automatically appear without user intervention. For version 2.33, it is important that latexmk users read "About This Release" so they will make a few changes needed to automate future upgrades.
<p> One technical detail: the New folder contains a hidden file listing the version of TeXShop which created the most recent update. TeXShop will only update files in ~/Library/TeXShop if it is a later version than the version listed in this hidden file. So TeXShop doesn't update at each new start, and old version can be run without changing  ~/Library/TeXShop.
<p>
<li> Improved Spanish localization by Juan Luis Varona.
<p>
<li> Fixed a bug reported by Tomas Zahradnicky: when a user attempted to print a file which had not been typeset, a dialog appeared asking the user to typeset first. The dialog has an "OK" button, but clicking the Close icon instead caused a hang. Fixed.

<p>
<li> Fixed a bug reported by Micael Sharpe: searching in the Preview window and afterward closing the source window sometimes caused a crash. Fixed.

<p>
<li> New code by Scott Lambert to improve the Comment/Uncomment and Indent/Unindent code.

<p>
<li> Added fdb_latexmk to the extensions automatically removed by "Trash AUX Files", to improve the operation of latexmk.

<p>
<li> The flip code used by some default macros is now a universal binary.
</ul>


<P><h5>TeXShop Changes 2.31</h5></P>

<ul>

<li> Goto Error is improved. It now highlights the text just before the error (as reported by TeX in the console) rather than an entire line containing the error. When searching for errors, users should first look at the spot where the highlighting ends. This change was requested by users who let TeXShop automatically soft wrap lines; to TeX, these source files appear to contain whole paragraphs rather than individual lines. In earlier versions of TeXShop, Goto Error highlighted these entire paragraphs, making the error hard to spot.

<p>
<li> Fixed the notorious "toolbar incorrectly drawn bug". This bug occurred when the Preview toolbar contained the "mouse mode matrix" but this
matrix was forced offscreen when the Preview window appeared because the window was too narrow to contain it. In that situation, the tools in the toolbar were drawn too high and partially cutoff, or so high that they were invisible. The bug is fixed.

<p>
<li> Fixed an obscure bug reported by Jean-Michel Bismut: he got intermittent crashes when closing the Preview window with command-W or
the red close circle. The bug mainly appeared when TeXShop was used with an external editor. Fixed.

<p>
<li> Fixed a bug reported by Cesar Rivas: when the Default Page Style was "Single Page", the toolbar scale reported the wrong value,
and thus zoom in and zoom out started from the wrong values. The bug fix solved another problem: previously if the user picked a mouse tool 
like "magnify" that was not the default and then typeset, the toolbar would still show the magnify tool active, but the actual tool would change to its default value. Fixed.

<p>
<li> TeXShop has a new SageTeX engine by Dan Drake. This engine is easier to install because SageTeX is now part of Sage rather than an extra download. The engine no longer reruns Sage when typesetting a source in which the sage commands have not changed.

<p> For a brief time, SageTeX was part of TeX Live 2009. This is no longer true because SageTeX is closely tied to Sage and needs to be updated when Sage is updated. SageTeX users should carefully read the short document in ~/Library/TeXShop/Engines/Inactive/Sage before installing the new engine; the document explains the simple step required when upgrading Sage.

<p>
<li> The internal TeXShop script which calls ConTeXt was modified to make the Abort command work. Although it worked for other engines, it recently stopped working for ConTeXT. Steffen Wolfrum reported the bug and was instrumental in finding a fix. The broken script was a tcsh script, and Wolfrum discovered that Abort worked when the internal script was rewritten as a bash script.

<p>
<li> Added a new menu item, "Abort Typesetting", with a keyboard shortcut. This makes it possible to call abort from the keyboard without using the mouse. The shortcut works regardless of which window is active.

<p>
<li> The pdf file is now closed when the Preview window is closed. In version 2.30, the entire document had to be closed to close the pdf file. In 2.29, TeXShop itself had to quit to close the file. So we are making incremental progress.

<p>
<li> Improvements in French localization by Rene Fritz.

<p>
<li> Slight improvements in ConTeXt and MetaPost help sections.

<p>
<li> Slight improvements in latexmk.

<p>
<li> Better error detection in the "Paste Spreadsheet Cells" macro.

<p>
<li> The default KeyEquivalents.plist in ~/Library/TeXShop/Menus was defective; among other things, it had comments
within comments, which is illegal. The file has been fixed. 

<p> KeyEquivalents.plist doesn't actually change any keyboard shortcuts because the changes it illustrates are commented out. But users can change TeXShop's default keyboard shortcuts by editing the file. However, there are some limitations. The OgreKit Find Panel menu items are handled in a special manner and cannot be changed with KeyEquivalents. The Macro menu items are also handling in a special way and cannot be changed with KeyEquivalents, although they can be changed with TeXShop's built-in Macro Editor. Finally, File menu items are sometimes overridden by Cocoa, so shortcut changes in that menu can have unintended consequences.

</ul>

<P><h5>TeXShop Changes 2.30</h5></P>

<ul>

<li> TeXShop has a new item in the Help Menu named "About This Release." This item will be revised for each release, and explains any steps needed to activate new features. Users should form a habit of reading this short file after upgrading.

<p> New users get the latest defaults and can ignore the step. But older users may need to make small changes in Preferences, and regenerate certain subfolders in ~/Library/TeXShop. These locations allow users to modify the default behavior of TeXShop, so
the program does not automatically update them because it does not want to deactivate user choices behind the user's back.

<p> 

<li> This version fixes a crucial crash bug involving synctex, searching pdf documents, and related notifications. Some users ran into the bug when attempting to search pdf documents. Others had crashes immediately after syncing. Many users avoided the crash entirely. Now it should be fixed for everyone.

<p>
<li> TeXShop has a "Goto Error" menu command, mirrored on the console window. Until this version, the command only worked on individual files. But the command now works with projects controlled by a root file. If an error occurs in an included source file not open on the desktop, that source will open and the line with the error will be highlighted. This change
requires a new flag in all engines: " --file-line-error". In TeXShop default preferences, this is set for pdftex, pdflatex, simpdftex, and xetex. If users wrote other engines, they will need to add the flag for these.

<p>
<li> New MetaPost and MetaFun engines by Nicola Vitacolonna are included. The engines are called "nv-metapost" and "nv-metafun." To prepare for these engines, the operation of TeXShop when using MetaPost and MetaFont has been revised. The built-in MetaFont command has been removed entirely; Vitacolonna's nv-metapost works much better for that purpose. The buildin MetaPost command has been retained for compatibility with projects by current users. This command just calls mpost directly. The preference item which switched this command between MetaPost and mptopdf has been removed.</p>

<p>
Users working with MetaPost for illustrations, or MetaFont, users will want to use nv-metapost and nv-metafun instead. Minimal documentation for these commands is available in TeXShop Help's advanced section on ConTeXt and MetaPost. But a more extensive README by Vitacolonna is available in ~/Library/TeXShop/Engines/Inactive/MetaPost.

<p>
<li> Very important improvements to command completion by Herbert Schulz are now included. These improvements allow "tags" in completed commands with parameters. When a command is completed, the entire command, including tags where the required parameters go, appears in the source file, and the first tag is selected. The user can type the parameter, replacing the tag. A keyboard shortcut then activates a new menu item which jumps to the next tag. The user can thus fill in all parameters without removing their hands from the keyboard.

<p> A greatly expanded command completion file by Herbert Schulz is included in this release. For detailed instructions, read the document about command completion written by Schulz and available in ~/Library/TeXShop/CommandCompletion.

<p>
<li> A new "Paste Spreadsheet Cells" macro by Alan Munn has been added to the Macro menu. This wonderful macro allows users to copy an array of cells from a spreadsheet and paste the array, properly formatted with TeX commands, in the TeX source code. Munn wrote instructions for this command, which are in TeXShop Help's Macro section, in Default AppleScript Macros.
 
<p>
<li> A new latexmk engine, version 4.13a, is included.

<p>
<li>  The right justification feature introduced in TeXShop 2.28 for  Arabic, Hebrew, and Persian has been improved. Now a line must start with a character from one of these languages before it is right justified. Thus
lines containing TeX commands with embedded Arabic, Hebrew, or Persian will still be left justified.

<p>
<li>  Added Windows Latin 1 to the list of supported encodings.

<p>
<li>  Added "ctx" to list of extensions which are regarded as TeX files and can be syntax colored and typeset.

<p>
<li>  In 2.29, closing a document left the associated pdf file open until TeXShop quit. This bug is fixed; the pdf file is closed when the source document closes.




</ul> 

<P><h5>TeXShop Changes 2.28-2.29</h5></P>

<ul> 
<p>Here are the changes in version 2.29:</p>

<ul> 

<li>  Revised SyncTeX. The code now has an embedded copy of "synctex" from TeX Live 2008, so it is independent of synctex changes in TeX Live 2009. Note that "synctex" is the script by Jerome Laurens to interprete synctex output, NOT the actual technology to produce this data). The Intel version of the embedded file also has information to interprete files produced by dvips, but the powerpc version does not. So on intel, synctex works better with dvips tasks. In early versions of TeXShop for TeX Live 2009, the embedded code didn't have powerpc code, causing crashes on powerpc. This is fixed. 

</ul>
</ul>
<ul>

<p>Here are the changes in version 2.28:</p>

<ul> 

<li> The =synctex=1 flag was added to the XeTeX and XeLaTeX engines.

<p>

<li> Revised the Hiero engine to deal with new installation instructions on the web page.

<p>

<li> Fixed a bug which broke SyncTeX when filenames contained unicode characters.

<p>

<li> Trash AUX files now trashes .synctex and .synctex.gz files.

<p>

<li>  The script for for mptopdf was changed to much more extensive script by Nicola Vitacolonna. This script, and one for metafun, are in the inactive folder of the Engines folder. But the metapost script is also used internally, replacing the original naive script. 

<p>

<li> An extra source preference named "Arabic, Persian, Hebrew" has been added. This item only works if Syntax Coloring is active. When the new item is activated, lines in the source which contain characters from these languages --- i.e., characters in the range 0x0590 - 0x06FF -- are right justified on the screen. This does not change the source processed by the TeX engine.

<p>

<li>  Removed command line equivalents for "Bold" and "Italic"

<p>

<li>  Removed "package" check for file types tex, ctx, bst, drv, abc, ly, texi, Rnw. Now no file types have "package" checked.

<p>

<li>  There are a small number of German localization fixes.

<p>

<li> The keyboard command to trash AUX files also works if the console or preview window are active.

<p>

<li>  If the shift key is held down while selecting "Trash AUX Files", then the pdf preview file is also trashed. This key can be held in combination with option or not, depending on the choice of aggressive trash. However, aggressive trashing with the shift key down will NOT remove other pdf files (!).

</ul>
</ul>

<P><h5>TeXShop Changes 2.27</h5></P>

<ul>

<li> When using SyncTeX from source to Preview, the preview window now comes forward.

<p>

<li> There are many changes in TeXShop Help, including a new section on encoding, and separate sections on General Engines, and on the XeTeX engine. References to XeTeX were removed.

<p>
<li> There are slight improvements in the Program, Encoding, and Root macro files by Ramon M. Figueroa-Centeno.

</ul>


<P><h5>TeXShop Changes 2.21 - 2.26</h5></P>

<ul>

<p>Here are the changes in version 2.26:</p>

<ul> 
<li> The TeXShop/Engines/Inactive folder contains two scripts from Daniel Becker which call texcount to count active words in a TeX source file. These engines were promised in 2.25 but erroneously omitted. They are in 2.26. To obtain them, quit TeXShop and move the entire Engines folder from ~/Library/TeXShop to the Desktop. Then restart TeXShop. TeXShop will create a new Engines folder. Merge in any changes you have made in the old Engines folder on the desktop to the new folder.

<p>
<li> Juan Luis Varona sent new Program and Encoding macros which display the various choices, so it is not necessarily to look up the wording of these choices. A few days later, Ramon M. Figueroa-Centeno send similar but fancier macros. Ramon's macros are now in TeXShop. To obtain them, quit TeXShop and move the entire Macros folder from ~/Library/TeXShop to the Desktop. Then restart TeXShop. TeXShop will create a new Macros folder. Merge in any changes you made to the old Macros on the desktop to the new copy, using the Macro Editor.

<p>
<li> A memory leak introduced by the code to split the Preview window in 2.25 is fixed. The bug was similar to the old flaw in PDFKit which caused memory to be gradually used up when typesetting a document many times, but this time the bug was caused by me.

<p>
<li> A bug in the zoom code for the preview window when using multiple monitors is fixed.

<p>
<li> A bug which caused TeXShop to ignore a "% !TEX TS-program = ..." command when typesetting from a file with an associated root file is fixed.

<p>
<li> The French localization is improved.

<p>
<li> A localization error caused the "Split Window" icon on the Preview Window toolbar to display strange text. This is fixed.

<p>
<li> A bug caused the Preview Window's toolbar to vanish temporarily if the user tried to move certain text portions of the toolbar. This is fixed.

<p>
<li> One of the keyboard zoom shortcuts acted only on the top portion of the Preview window when split. This is fixed.

<p>
<li> The TeX mdimporter code distributed with TeXShop in 2.25 contained only i386 code. Now it contains code for both PPC and i386.

</ul>

<p>Version 2.21 - 2.24 were internal versions, never released. Here are the changes in version 2.25:</p>

<ul>

<li> Split window, previously available for the source window, now also works for the Preview window. Buttons and tools which interact with the Preview window are applied to the active portion of the Preview window when split. To activate the other portion, click on it. To avoid cluttering the interface, the active portion of the Preview window is not marked. Note that it is possible to use different Display formats in the two views. For instance, after splitting the window you can activate the lower portion and select Double Multiple Page in the Display Format menu to obtain a single page view in the top half and a double page view in the lower half.

<p>
<li> Syncing from source to Preview now scrolls the selection to the visible portion of the window. When the Preview is split, syncing from source to preview goes to the active portion of the Preview window.

<p>
<li> A new menu command, Show Log File, opens the log file. This file is updated after typesetting. If a source file has a root file, the menu command opens the log file of the root file, rather than the nonexistent root file of the input file.

<p>
<p>If the command key is held down while choosing this menu item, a dialog will appear asking for the extension of the file to be opened. For instance, typing "aux" into the dialog opens the aux file rather than the log file. The requested extension can be  typed with or without an opening period.

<p>
<li>A new Help menu command, "Show Package Documentation", opens a dialog which requests the name of a package in TeX Live. It then opens the TeX Live documentation for this package, using the command line program "texdoc." This improvement was suggested by Juan Luis Varona. 


<p>TeX Live has a vast amount of documentation; go to /usr/local/texlive/2008/texmf-dist/doc/latex to see some (but not all) of this documentation. Note that almost all documentation folders have lower case names; therefore it is best to name packages in lower case when requesting documentation: pdftex, latex, graphicx, geometry, texdoc. But there are exceptions: IEEEtran.

<p>Documentation is sometimes available in several different forms: pdf, html, etc. Add the extension to the request to see a particular form of the documentation. For instance, enter "pdftex.pdf" or "pdftex.html" to see these forms of the pdftex documentation. Texdoc will choose a convenient form on its own if the extension is omitted.

<p>Texdoc does not open the documentation in TeXShop; instead it uses the Mac's default application for a given extension. By default, the Macintosh opens pdf files in Preview and html files in Safari, so texdoc will use those viewers. There is a standard way to redefine the default application for an extension. If you change the default, texdoc will use the new default application.

<p>It is also possible to directly configure texdoc to use particular viewers; see the texdoc documentation for details.

<p>Sometimes texdoc will not find documentation for a package, style file, or program. In that case, nothing will appear. In particular, TeXShop does not put up a warning dialog when documentation is not found. Although such a dialog would be useful at first, in the end it might become annoying.

<p>
<li>It is possible to set the foreground color of the Console window in Preferences. This was requested by users who prefer white characters on black backgrounds for the console.

<p>
<li>A new menu command opens the console if it has been closed.

<p>
<li>The menu items to change the text color in the source, to justify right, left, or center in the source, and to bring up the ruler in the source have been removed, since they make no sense in TeX.

<p>
<li>There are localization improvements in French, Spanish, and Japanese.

<p>
<li>This version fixes a bug which ignored Console Preferences when using external editors.

<p>
<li>TeXShop can now create and edit asy files.

<p>
<li>Added a contextual menu item to the Source and Preview windows: Sync. Some users may prefer this menu item for synchronization because using it avoids the command key.

<p>
<li>The TeXShop/Engines/Inactive folder now contains two scripts from Daniel Becker to call texcount to count active words in a TeX source file. The output may be more accurate than the output from detex, which is currently called by TeXShop's "statistics" command. 

<p>Users who upgrade TeXShop can get the new Inactive folder by quitting TeXShop, moving ~/Library/TeXShop/Engines to the desktop, and then restarting TeXShop. The new default Engines folder will be created by TeXShop. After it is created, merge extra items in your old copy on the desktop back into the ~/Library/TeXShop/Engines folder.

<p>
<li>The Inactive folder also contains a "sage.engine" file. This engine makes it possible to use the open source mathematical software Sage, a replacement for Maple, Mathematica, and MatLab, directly from within a TeX source file. For instance, a single TeX line can ask Sage to plot a function; in the typeset output, this plot will appear at that spot. Or a single line can ask Sage to integrate a complicated expression symbolically; in the typeset output, the answer will be shown, typeset consistently with other mathematical expressions in the document. The inactive folder contains an example document typeset in this way. Sage is available free at http://www.sagemath.org/.

<p>  
<li>There was discussion on one of the mailing lists about the logic behind TeXShop's "Typeset" menu command, the "%!TEX program" mechanism, and the fact that "BibTeX" and "MakeIndex" are not really typesetting commands. Members of the list tried to understand the logic behind fine details of TeXShop's operation, but this was a hopeless task because there wasn't much logic present.

<p>An attempt has been made in version 2.25 to provide consistent behavior, but without a complete overhaul of the interface. The code now works in the following way:

<p>The "Typeset" command in the Typesetting menu always does exactly the same thing as the "Typeset" button in the source window toolbar. Both commands call the typesetting command listed in the drop down menu next to the toolbar button, unless the first few lines of the source file contain a line of the form

<dl>
 <dd>   %!TEX TS-program = ...
 </dl>

<p>If such a line is present, then the Typeset command uses the indicated program instead (unless the drop down menu is set to bibtex or makeindex; see comments below). The selected item in the drop down menu does not change, so commenting out the source line will cause typesetting to revert back to the method indicated in the drop down menu. Incidentally, TeXShop ignores extra comment characters at the beginning of the above source line, so it cannot be commented out by adding an extra comment. I prefer to add a space between the "TS" letters.

<p>In previous versions of TeXShop, it was not possible to select bibtex, makeindex, metapost, context, or metafont in the "%!TEX TS-program"  line, for purely historical reasons. This anomaly has been fixed, and any engine can be selected:

<dl>
<dd>     tex, pdftex, latex, pdflatex, bibtex, makeindex, metapost, context, metafont, or a user defined engine
</dl>

<p>There should be one space after the equal sign before the program name, and case is important.

<p>Selecting bibtex or makeindex in the drop down menu causes these programs to be called even if a "%!TEX TS-program" line is present, since these two programs aren't really typesetting engines and a user may need to call them even when an unusual typesetting engine is being used.

<p>So much for the basic "Typeset" command.  The TeXShop "Typeset" menu also contains items to call TeX, LaTeX, BibTeX, MakeIndex, MetaPost, ConTeXt, and MetaFont. These items are present mainly for historical reasons and most users ignore them. Adding new engines to TeXShop doesn't add extra menu items because the menu would become awkwardly long if a user had a large number of extra engines.

<p>The BibTeX and MakeIndex items are treated specially. Selecting one of these items causes TeXShop to run the resulting program regardless of the setting of the toolbar's drop down menu and the possible presence of a "%!TEX TS-program" source line. This is probably the most convenient way to call these two commands.

<p>The remaining TeX, LaTeX, MetaPost, ConTeXt, and MetaFont menu commands behave in a slightly different way. Selecting one of these menu items causes TeXShop to run the resulting command, regardless of the toolbar's drop-down menu selection and regardless of any "%!TEX TS-program" line. Moreover, selecting one of these menu commands changes the toolbar's drop-down menu selection to the engine chosen in the menu command. The idea behind this design is that beginning users may first find the menu commands and typeset using them. If such a user later uses the "Typeset" button in the toolbar, it should cause the same behavior as the earlier menu command.

<p>Sorry for this complexity; I'm trying to balance leaving the interface unchanged for users set in their ways with easier use of the BibTeX and MakeIndex commands.

</ul>









<P><h5>TeXShop Changes 2.19 - 2.20</h5></P>

<p>Version 2.19 was an internal version, never released. Here are the changes in it and version 2.20:</p>

<ul>

<li>  Line numbers are displayed in the source file. A preference item turns this feature on or off; a menu item turns it on or off for the currently active window.

<p>This feature depends on free code by Paul Kim at Noodlesoft. The code is at http://www.noodlesoft.com/blog/; see "Displaying Line Numbers with NSTextView". I don't read this blog, but the code was pointed out to me in an email from Ryan Cuthbertson, who downloaded the TeXShop source code, implemented the change, and sent crystal clear instructions explaining how to add the feature. Kudos to Cuthbertson. Kudos especially to Paul Kim and Noodlesoft; Kim's code is so well written that Cuthbertson had to add only 32 lines of code to TeXShop to make it work.</p>

<li>  TeXShop now uses Sparkle to implement "Check for Updates." This brings many advantages. Rather than directing a user to the TeXShop web page when an update is available, TeXShop now lists new features directly, downloads the update upon request, and even quits TeXShop, installs the new version, and restarts the program upon request.

<p>Sparkle is another remarkable product from the open source software community. Written by Andy Matuschak and available at http://sparkle.andymatuschak.org/, it provides every feature you'd want in an update mechanism.The documentation for developers available on the web page is a model of clarity and simplicity. Sparkle is used by a number of other GUI programs for TeX, so users for find it familiar.</p>

<li>  The console window has been greatly improved by Will Robertson, who sent a new Nib file containing his changes several months ago. I waited to implement the improvements until I could add a console preference tab to TeXShop Preferences allowing users to modify Robertson's choices.

<p>The font and background color for the console can be modified in Preferences. Users can adjust the console width to match the number of characters typically output by TeX, and then select a preference allowing the window to be resized only in the vertical direction. Note that preference changes are immediately reflected in the console, so the trick to easy console configuration is to bring a console window to the front, open Preferences, try out various fonts, font sizes, and background colors until satisfied, activate horizontal resizing and adjust the console width, and then, if desired, lock down this width in Preferences.</p>

<li>  A number of items in the Preference panel have been moved to make the operation of the panel more transparent. The most important tab items come first: Source, Preview, Console, Typesetting. In the Preview tab, the "Fixed Magnification Amount" appears immediately following the "Magnification Method" to make it clearer that "Fixed Magnification" only applies when the "Magnification Method" is "Fixed Magnification."
<p> </p>
<li>   Previously, clicking the green "Zoom Dot" on TeXShop windows expanded the window to fill the screen. An attempt has been to made this operation more rational. The Source window now expands to fill the left portion of the screen; the console expands only vertically, and the Preview window expands to fill the right portion of the screen. The Preview window expands by the largest amount because users may want to zoom the image and check fine details. I'd appreciate advice on refinement of the zoom behavior. Recall that the behavior must make sense on small portable screens and large Cinema displays.
<p> </p>
<li>   For some time, TeXShop recognized hidden preference items to set the background color of the Source and Preview windows. These preference items are now exposed and can be set in the Preference dialog.
<p> </p>
<li>   A bug in the MatrixPanel code disabled the hidden preference "matrixsize''. This bug is fixed.
<p> </p>
<li> The name of the alternate typesetting mode "TeX and Ghostscript" has been changed to "TeX and DVI". This fulfills a request of the American Mathematical Society, who have been dealing with users claiming that TeXShop cannot produce dvi files. 
</ul> 

<P><h5>TeXShop Changes 2.15 - 2.18</h5></p>

<p><h6> Changes in TeXShop 2.16 through 2.18:</h6></p>


<p>Versions 2.16 and 2.17 of TeXShop were constructed for  test versions of  MacTeX-2008, and released only to a few people testing that install package. Version 2.18 is now officially released on the TeXShop site.
Here are the changes:</p>

<ul>

<li> Added a new Preference item under the Typesetting tab. The preference is called "After Typesetting" and the choices are "Bring Preview Forward"' and "Continue Editing."' The first item activates the Preview window after typesetting and brings it forward, as TeXShop has behaved in the past. When the "Continue Editing" item is activated, typesetting updates the contents of the Preview window but leaves the Edit window active with the editing cursor blinking. This makes it possible to typeset, glance over to check that things look right, and continue editing. This option is particularly useful on large monitors which can show the full contents of both windows.

<li> Added support for SyncTeX. SyncTeX is new synchronization technology by Jerome Laurens which is included in TeX Live 2008 (but not earlier TeX distributions). The technology is built directly into pdfTeX and XeTeX. In modern TeX distributions, most typesetting actually calls pdfetex (even if using latex to output a dvi file), and thus the technology is available for such typesetting.

<p>To use the technology, add the flag
<dl>
  <dd>      --synctex=1
</dl>

to the command line call to TeX. For example, in TeXShop Preferences under the Engine tab, the lines specifying pdfTeX for Tex and pdfLaTeX should read

<dl>
<dd>        pdftex --shell-escape --synctex=1
<dd>        pdflatex --shell-escape --synctex=1
</dl>
A similar flag should be added to other engine scripts. The TeXShop defaults for these preferences already include this flag for pdftex and pdflatex, but not for other engine files. If the flag is included and an older version of TeX is called, typesetting will still occur (TeX will report to the console that it does not understand the flag.)</p>

<p>The flag causes TeX to output an additional "synctex" file during typesetting, containing information linking the TeX source file(s) to the TeX pdf file. This file is similar to the old pdfsync file generated by the older PdfSync technology, but with the very significant difference that line and page breaks are no longer changed when outputting the data.</p>

<p>Laurens also wrote a command line program named "synctex" which is included in TeX Live 2008; when this program is called with a request for appropriate synchronization data, the program parses the synctex file and outputs appropriate data.</p>

<p>To activate SyncTeX support in TeXShop, go to TeXShop Preferences under the Misc tab and select "SyncTeX" as the "Sync Method." This is the default value if you are installing TeXShop for the first time.</p>

<p>If SyncTeX synchronization is chosen, user interaction is exactly the same as in the old Search method. Hold down the command key while clicking at a spot in the source document. The Preview window will become active and the corresponding spot will be circled in red. Or hold down the command key while clicking at a spot in the Preview window. The source window will become active and the corresponding TeX input commands will be highlighted in yellow.</p>

<p>When these commands are used,TeXShop will fall back on the old Search method if SyncTeX does not find an appropriate synchronization. The most common cause for SyncTeX failure is the absence of a synctex file, which will certainly happen when the file is typeset with an older distribution. Thus users can switch between TeX Live 2007 and TeX Live 2008 without changing their synchronization preference.</p>

<p>A few users might like to test TeXShop's SyncTeX support without being confused by calls to the old Search synchronization method. To simplify this test, there is a new hidden preference which forces synchronization to use only SyncTeX:</p>
<dl>
<dd>	defaults write TeXShop SyncTeXOnly YES
</dl>
Support for SyncTeX was added to TeXShop 2.18 at the last moment. Synctex is now used in both directions, and is generally much better than the old search synchronization. But many improvements should be possible as I digest what Jerome has provided.

<p>Many thanks to Jerome Laurens for this wonderful work. I think you will notice an immediate improvement.</p>


<li> Added encodings ISOLatinGreek, MacCentralEurRoman, and WindowsLatin2 (i.e., WindowsCentralEurRoman).

	<p>The names of the encodings are
<dl>
<dd>		Greek (ISO 8859-7)
<dd>			Mac Central European Roman
<dd>			Central European (ISO Latin 2)
<dd>			Central European Roman (Windows)
</dl>
	and the %!TEX encoding = *** abbreviations are
<dl>
<dd>			IsoLatinGreek
<dd>			Mac Central European Roman
<dd>			ISOLatin2
<dd>			WindowsCentralEurRoman
</dl>
<li> In
<dl>
<dd>		%!TEX encoding =
<dd>		%!TEX root =
<dd>		%!TEX TS-program =
<dd>		%!TEX projectfile = 
</dl>
allow a space between % and ! for better formatting, and to remove %! postscript ambiguity. The old syntax without the space is, of course, also supported.


<li> Added code by Adam Maxwell to permit BibDesk Completions; this is controlled by a new Preference Setting. By default, it is not activated.


<li> Fixed French nib file so Typeset menu works again (there are no longer simultaneous checks on "PdfTeX" and "TeX \& Ghostscript").


<li> Fixed tab settings, so now changing tab spacing in Preferences works correctly.


<li> Command-T now typesets even when the console window is active.


<li> Fixed pdf updating. If a user has an external editor and uses TeXShop to display pdf output, and if the "Automatic Preview Update" preference is set, then whenever the pdf file is updated, TeXShop reads and displays the latest version, activating the pdf window when it does so. There is a hidden preference item named "BringPdfFrontOnAutomaticUpdate". If this is set to "NO", then the preview window is supposed to be updated but not brought forward. Recently, the preview window did this, but didn't display the new content until the user manually activated it. This is fixed.

<li> Instead of separate commands to display each of George Gratzer's symbol tables, there is one command to display all of the tables in one document. It is much easier to find a symbol if you can scroll through tables rather than guessing which table has the desired symbol.

<li> Modified default LaTeX macros to bring them up to date.

</ul> 

<h6>Changes in TeXShop 2.15</h6>


<p>TeXShop 2.15 was an experimental release. It lived for a long time on my personal web page with a promise to migrate it to the usual TeXShop site. After the promise didn't materialize for several months, the link on my personal site was noticed by Version Tracker, and for several months that system pointed to the experimental 2.15 as the latest release. At last 2.15 has become "official" with the release of TeXShop 2.18.</p>

<p>Here is a list of new features:</p>

<ul>
<li> Fixed severe memory leakage on Leopard; said another way, the hidden preference item ReleaseDocumentClasses is now automatically set correctly on Leopard. This very significant bug, which I listed for a long time as the most significant bug in TeXShop, was caused by an Apple bug in PDFKit. This bug is fixed in Leopard. Consequently, users must be running System 10.5 to obtain the fix.
<li> Fixed pdf drag and drop on Leopard. In earlier versions on Leopard, a dragged pdf selection had a white background, making the feature problematic for Keynote and other programs. Now a dragged pdf selection has a transparent background, as it always did on Tiger.
<li>  Support for the Hiero package, used to typeset hieroglyphics. See http://www.filipvervloesem.be/hierotexmac/ and
the detailed explanation on http://www.filipvervloesem.be/hierotexmac/hierotex.html.
<li> Support for Sketch, used to construct 3D images in pdf files. See www.frontiernet.net/~eugene.ressler/.
<li> Generalizing the last two items, support for adding additional extensions to the list of filetypes which can be processed via TeXShop engines.
<li> The default templates now include a template for Beamer taken directly from the beamer web page. To see it, move the folder ~/Library/TeXShop/Templates to the desktop and restart TeXShop. The default Templates folder will be created. Merge your old Templates folder in with the new one.
</ul>

<p>Here are more details on each of these items.</p>

<ul>
<li> When TeXShop was first released on Tiger, users ran into an annoying bug which caused the program to gradually slow to a crawl after several typesetting actions. The problem occurred when a new pdf file was loaded into PdfKitView for the Preview window. According to Apple documentation, this should have released the previous data from memory. The release did occur, but it caused the program slowdown.

<p>To fix this problem, I added code to TeXShop which tricked the system into believing that the old data structures were still being used so the system didn't try to release them. This meant that TeXShop gradually used more and more memory over time, and it caused other problems as well. In notes to collaborators, I called this "the single most important bug in the program."</p> 

<p>This was really a PDFKit bug. But although I have reported several bugs to Apple (and they have been very good about fixing them), I didn't report this problem because I needed to make a small demo program illustrated the bug, and never got around to it.</p>

<p>When system 10.4.3 was released, it looked to me like the problem was resolved, and I modified the TeXShop code to release memory on 10.4.3 and higher. Unfortunately, it soon became apparent that the problem remained, particularly for large pdf files. Luckily, I had added a hidden preference to TeXShop called "ReleaseDocumentClasses"; the value of this preference could be</p> 
<dl>
<dd> 0 to release the data on system 10.4.3 or higher
<dd> 1 to never release the data
<dd> 2 to always release the data
</dl>
Initially the default value of this preference was 0, but I soon changed it to 1, restoring the old "kludge behavior."

<p>But when Leopard came out, several users reported that this preference can safely be set to 2. Further testing showed that the PDFKit bug was fixed in Leopard.
Therefore, in TeXShop 2.15 the data is always released on Leopard, regardless of the value of ReleaseDocumentClasses. The old behavior still applies on system 10.4.11 and earlier.</p>

<p>But just in case, there is another hidden preference called ReleaseDocumentOnLeopard. The default value of this preference is YES. If it is set to NO, the old preference ReleaseDocumentClasses becomes active and behaves as before.</p>

<li> TeXShop has the ability to select a portion of the pdf image, copy the selection, and paste it into another program. Users can also drag the selection directly to another program. Before the program LaTeXiT was introduced, this feature was often used, but now LaTeXiT is usually the better way to proceed. 

<p>The file format of the copy is controlled by TeXShop preferences; the default value is to copy as pdf with a transparent background, making it easy to use the result in Keynote and similar programs.</p>

<p>This feature broke in the beta version of Leopard which Apple released at the 2007 Developer Conference. Later I managed to modify my code and fix the problem. But in the release version of Leopard, my fix also broke.</p>

<p>At the developer conference I spoke to the author of PDFKit, who recommended a different fix. That fix is now in TeXShop 2.15.</p>

<p>The old code used the NSView method "dataWithPDFInsideRect" directly in the PDFKit View. Before calling this method, it set the background color of the image in PDFKit to be transparent, and it also modified the PDFKit "drawPage" method to skip drawing a background when drawing for a selection. However, PDFKit in Leopard seems to have additional drawing layers which make the individual pages of an image stand out, and these layers add their own backgrounds.</p> 

<p>The new method uses PDFKit's page object and the routine "dataRepresentation"', which I learned at the developer conference does not include background information. This data is then placed in a NSPDFImageRep object, imaged in an offscreen NSView object, and captured with the object's "dataWithPDFInsideRect" method.</p> 

<p>There is a slight change when copying and dragging selections. Earlier, a selection could span more than one page. Now the copy will only include the portion of the selection which is on the page under the cursor.</p>

<p>By the way, this fixes the last TeXShop Leopard bug known to me.</p> 

<li> TeXShop now contains an engine file in .../Library/TeXShop/Engines/Inactive for use with the Hiero package. An additional README in the folder explains how to install Hiero. The Hiero ".htx" extension is now recognized by TeXShop, and an icon for such files is provided.

<p>To obtain this engine, it is necessary to move the folder ~/Library/TeXShop/Engines elsewhere, say to the desktop. Then restart TeXShop. The program will create a new Engines folder, containing the new inactive items. Then merge the Engines folder on the desktop into this new default Engines folder.</p>

<li> The same directory contains an engine file for Sketch. An additional README in the folder explains how to install Sketch. The ".sk" extension is now recognized by TeXShop.
 
<li> The previous two items are special cases of a general problem. A number of users have tried to use TeXShop's engine mechanism to process a source file and preview the resulting pdf output in cases where the processing engine isn't TeX at all, but rather some other Unix binary program.  In many of these cases the source file has a new extension; for instance, ".htx" in the Hiero case, and ".sk" in the Sketch case. 
 
<p> There are two problems with this technique, one minor and one major. The minor problem is that when TeXShop creates a file, it always adds an appropriate extension, usually ".tex". In the Save dialog there is a pulldown menu listing all extensions known to TeXShop. By using this menu, files can be created with other extensions like ".ltx", ".ctx", and so forth.</p> 
 
<p> But if an extension is not in this list, creating it within TeXShop is tricky. Users often try to directly type an extension, saving for example a file with name "myfile.htx". But actually TeXShop will then create "myfile.htx.tex" and even worse, the Finder may then hide the ".tex" extension.</p>
 
<p> Luckily, there is a solution. One of the file types which TeXShop can save is named "Plain Text Document". Such a file has no extension. So if the user saves "myfile.htx" after selecting the "Plain Text Document" dropdown menu item, they actually will get "myfile.htx".</p>
 
<p>The good news is that when TeXShop opens a file with an unexpected extension, say by dragging the file to the TeXShop icon, it will preserve the correct extension when saving. So this first problem is a minor problem during file creation, but it doesn't interfere with later processing the file.</p>

<p>The major problem is that TeXShop deactivates the "Typeset" button when a file is opened with an unknown extension, or with an extension which is not used by source files. For example, TeXShop can open pdf files and jpg files, but it doesn't allow the user to typeset such files!
Users who wanted to process ".htx" and ".sk" files with an engine found that they could not use the engine because of this behavior.</p>

<p>TeXShop 2.15 has a new mechanism for such users. A hidden preference allows users to add extensions to the list of legal extensions which activate the Typeset button. For example, the command</p>
<dl>
<dd>     defaults TeXShop OtherTeXExtensions -array-add "htx" 
</dl>
adds ".htx" to the list. To clear the list and start over with the built-in defaults, use
<dl>
<dd>     defaults TeXShop OtherTeXExtensions -array
</dl>
Actually, ".htx" and ".sk" are now built-in, so these users do not need the new mechanism. But it is available for future users.

<li> The Beamer template can certainly be improved. I'd appreciate help from experts.

</ul>

<h3>Version 2.09</h3>

<h5>バージョン 2.09 での変更点</h5>
<p>
<h6>2.09d</h6>

<ul>
	<li>
	<!-- Fixed a bug when opening jpg and other image files while the default encoding is UTF-8. -->
	デフォルトのエンコーディングが UTF-8 になっている状態で jpg その他のイメージファイルを開く際のバグを修正しました。
	</li>
</ul>

<h6>2.09c</h6>

<ul>
	<li>
	<!-- ScriptRunner, an internal TeXShop application which runs applescripts, is now a univeral binary. -->
	「ScriptRunner」がユニバーサルバイナリとなりました──これは Applescript を実行するための、TeXShop 内部のアプリケーションです。
	</li>
</ul>

<h6>2.09b</h6>

<ul>
	<li>
	<!-- The OgreKit Find Panel Framework has been replaced with the latest universal binary version, 2.1.2, from the OgreKit site. This fixes several problems in the previous version when run on Intel processors. -->
	「OgreKit Find Panel Framework」を、OgreKit のサイトから取り寄せて、ユニバーサルバイナリ化された最新のバージョン 2.1.2 に置き換えました。インテルプロセッサ上で使用する際に前バージョンで生じていたいくつかの問題が修正されています。
	</li>
</ul>

<h6>2.09a</h6>

<ul>
	<li>
	<!-- After typesetting, TeXShop leaves the scroll position fixed rather than scrolling to the top of the page. -->
	タイプセット後、スクロール位置がページの先頭に移動せずにそのままになるようにしました。
	</li>
<p>
	<li>
	<!-- Double clicking on a bracket like (, {, [, ], }, or ) selects all text between the bracket and its matching pair. Double clicking on a bracket with the option key down selects just the bracket. -->
	(, {, [, ], }, ) といった括弧類をダブルクリックすると、対応する括弧とその間の全てのテキストが選択されます。option キーを押しながら括弧をダブルクリックすると、その括弧だけを選択することができます。
	</li>
</ul>

<h6>2.09</h6>
<ul>
	<li>
	<!-- The ISO Latin 9 encoding was broken; now it is fixed. -->
	ISO Latin 9 エンコーディングが壊れていました──修正済みです。
	</li>
<p>
	<li>
	<!-- New menu items were localized in German and Japanese -->
	新しいメニュー項目がドイツ語版と日本語版でローカライズされました。
	</li>
<p>
	<li>
	<!-- The hidden preference to keep backup files of source documents was incorrectly described in help as requiring "SaveBackup" rather than the correct "KeepBackup". This section of help is fixed. To keep backup files, type the following in Terminal: -->
	ソースファイルのバックアップを取っておくための隠れた環境設定が、「KeepBackup」ではなく「SaveBackup」と誤ってヘルプに記載されていました。なので、ファイルのバックアップを取っておくには、ターミナルで次のように打ち込みます──
	</li>

		<dl>
			<dd>defaults write TeXShop KeepBackup YES
		</dl>

	<li>
	<!-- A new hidden preference causes the drawer to be open when Preview windows are first opened: -->
	プレビューウインドウを開いた際に、最初からドロワーが表示されるようにするための新しい隠れた環境設定──
	</li>
		<dl>
			<dd>defaults write TeXShop PreviewDrawerOpen YES
		</dl>
<p>
	<li>
	<!-- A new hidden preference adds additional automatic tags for ConTeXt users. Currently lines beginning with ¥chapter, ¥section, ¥subsection, and ¥subsubsection are automatically added to the Tags pulldown menu. If this preference is chosen, lines beginning with ¥subsubsubsection, ¥subsubsubsubsection, ¥part, ¥title, ¥subject, ¥subsubject, ¥subsubsubject,¥subsubsubsubject, and ¥subsubsubsubsubject are also added. -->
	自動的にタグを追加する新しい隠れた環境設定を、ConTeXt ユーザ用に追加しました。現在は「¥chapter」「¥section」「¥subsection」それに「¥subsubsection」で始まる行が自動で「タグ」プルダウンメニューに追加されます。新しい環境設定を選択すると、「¥subsubsubsection」「¥subsubsubsubsection」「¥part」「¥title」「¥subject」「¥subsubject」「¥subsubsubject」「¥subsubsubsubject」それから「¥subsubsubsubsubject」もまた追加されるようになります。
	</li>
		<dl>
			<dd>defaults write TeXShop ConTeXtTags YES
		</dl>

	<li>
	<!-- TeXShop Help has a new section explaining how to make and use TeX formats. -->
	TeX フォーマットの作成と利用について説明する新しい章を TeXShop ヘルプに追加しました。
	</li>
<p>
	<li>
	<!-- A user wrote complaining that dvips could not find figures references in the parent directory as ../figures/xxx.eps during typesetting in tex + ghostscript mode. Gerben Wierda told him that this is a change in the default behavior of dvips because the old behavior was insecure. To return to the old behavior, modify the TeX + dvips + distiller preference in TeXShop Help under the Engine tab to -->
	あるユーザが不満を書き送ってきました──「tex + ghostscript」モードでタイプセットしていると、例えば ../figures/xxx.eps というような上位のディレクトリ内を参照先にする図表を、dvips が見つけられないのだ、と。Gerben Wierda さんはこのユーザに対して、以前のままでは安全ではなかったので、dvips のデフォルトの動作が変更になったのだ、と言いました。旧来の動作に戻すには、環境設定の「内部設定」タブのところで「TeX + dvips + distiller」を以下のようにします──
	</li>

	<dl>
	<dd>simpdftex latex --maxpfb --extradvipsopts "-R0"
	</dl>
</ul>

<h3>Version 2.08</h3>

<h5>バージョン 2.08 での変更点</h5>

<ul>
	<li>
	<!-- In a copy of 2.07 temporarily on the network, conversion of eps files to pdf files was done with ps2pdf rather than the usual epstopdf. This was a mistake and was rapidly fixed. It is fixed in this version. -->
	一時的にネットワーク上にあったバージョン 2.07 では、EPS ファイルから PDF ファイルへの変換が、通常の epstopdf ではなく ps2pdf で行なわれていました。これは誤りですから今バージョンで早急に修正しました。
	</li>
<p>
	<li>
	<!-- In the German localization, the "Default Command" preference under the Typesetting tab was not connected. Fixed. -->
	ドイツ語版のローカライズにおいて、環境設定の「Typesetting」タブ内にある「Standaard TeX opdracht」が接続されていませんでした。これを修正。
	</li>
<p>
	<li>
	<!-- In the German localization while using the German keyboard, the apple-{ shortcut for commenting failed. To fix this, the shortcuts for comment and uncomment in this version are apple-3 and apple-4. This change is only made in the German localization. -->
	ドイツ語版でドイツ語キーボードを使っていると、コメント用のショートカット──コマンド＋「{」が機能しませんでした。これを修正するために、「コメント」および「コメントを外す」ショートカットを、今バージョンにおいてコマンド＋３およびコマンド＋４にしました。この変更はドイツ語版だけです。
	</li>
<p>
	<li>
	<!-- If the "select tool" was chosen in the Preview window and the user switched to the source window with apple-1 and then typeset, the select tool would no longer be selected when the Preview window became active again. This is fixed. -->
	プレビューウインドウで「範囲指定」を選択しており、コマンド＋１を使ってソースウインドウに切り替え、それからタイプセットを行なうと、プレビューウインドウが再びアクティブになったときにはもう「範囲指定」を選べなくなっていました。これを修正。
	</li>
<p>
	<li>
	<!-- The "Insert Reference" macro failed because the first line was "--Applescript direct" rather than "--Applescript" This is fixed for new users, but TeXShop macros are not changed when users upgrade because they made have modified the macros. So users need to make this change on their own. -->
	「Insert Reference」というマクロが機能していませんでした──というのも、最初の行が「--Applescript」ではなく「--Applescript direct」となっていたからです。これは新規のユーザにとっては解決済みのことですが、TeXShop のマクロは、ユーザそれぞれが使いやすいようにしているので、バージョンアップの際にも変更されません。なので変更はユーザが自分で行なう必要があります。
	</li>
</ul>

<h3>Version 2.07</h3>
<h5>バージョン 2.07 での変更点</h5>

<ul>
	<li>
	<!-- Some users still report a spinning beachball, so we revert back to the default value of "1" for the hidden ReleaseDocumentClasses preference. Users who installed 2.05 or 2.06 during the 12 hours it was on the network need to type the following command in Terminal: -->
	いまだにビーチボールが回るという報告がありますので、隠れた環境設定「ReleaseDocumentClasses」のデフォルトの値を「１」に戻しました。今から前12時間以内にバージョン 2.05 ないしは 2.06 をダウンロードしてインストールしたユーザは、Terminal で以下のようにコマンドをタイプする必要があります──
	</li>
		<dl>
			<dd>defaults write TeXShop ReleaseDocumentClasses 1
		</dl>
</ul>

<h3>Version 1.43 & 2.06</h3>

<h5>バージョン 2.06 での変更点</h5>

<ul>
	<li>
	<!-- Removed Indent, Unindent, Back, and Forward key shortcuts from non-English localizations of Menu.nib. -->
	「右シフト」「左シフト」「戻る」「進む」用のキーボードショートカットについては、英語以外のローカライズ版の「Menu.nib」ファイルからは取り除きました。
	</li>
<p>
	<li>
	<!-- Now includes TeX-mdimporter 1.2, which fixes a memory leak in the original. -->
	バージョン1.2の「TeX-mdimporter」が収録されました──これはオリジナル版にあったメモリリークが修繕されたものです。
	</li>
<p>
	<li>
	<!-- Recommended the "Set Default Values" button in Preferences -->
	環境設定内の「設定プロファイル」ボタンがお勧めです。
	</li>
</ul>


<h5>バージョン 1.43 での変更点</h5>

<ul>
	<li>
	<!-- The ISO Latin 9 encoding was broken; now it is fixed. -->
	ISO Latin 9 エンコーディングが壊れていました──修正済みです。
	</li>
<p>
	<li>
	<!-- The "Check for Updates" menu item code had an error. If the user was running on a pre-Tiger system, it correctly looked only for updated versions of TeXShop 1. If such a version was found, it correctly reported the new version it would download. But then it actually downloaded the Tiger version. This is now fixed, but it doesn't fix versions of TeXShop earlier than 1.43, of course. (Note that this command on TeXShop Version 2 has always worked.) -->
	メニュー項目にある「アップデートを確認...」にエラーがありました。ユーザが Tiger 以前のシステムを利用しているのであれば、１系の最新の TeXShop だけを探してくるのが本当です。それでもし最新のバージョンがあれば、そのことを報告し、ダウンロードするわけです。けれども実際には、Tiger 版がダウンロードされていました。これを修正はしましたが、1.43 以前のバージョンについては、むろん直っていません。（注記：２系の TeXShop では、このメニューコマンドはちゃんと機能しています。）
	</li>
<p>
	<li>
	<!-- The hidden preference to keep backup files of source documents was incorrectly described in help as requiring "SaveBackup" rather than the correct "KeepBackup". Thus to keep backup files, type the following in Terminal: -->
	ソースファイルのバックアップを取っておくための隠れた環境設定が、「KeepBackup」ではなく「SaveBackup」と誤ってヘルプに記載されていました。なので、ファイルのバックアップを取っておくには、ターミナルで次のように打ち込みます──
	</li>

		<dl>
			<dd>defaults write TeXShop KeepBackup YES
		</dl>

</ul>


<h3>Version 1.42 ＆ 2.05</h3>
<h5>バージョン 2.05 での新機能</h5>

<ul>

<li>
TeXShop 2.05 でユニバーサル・バイナリ（Universal Binary）になりました──PowerPC 用とインテル・プロセッサ用コードの両方が含まれています。システムにより自動的に適切な方のコードが実行されます。
</li>
<p>
<li>
TeXShop のデフォルトの環境設定では、teTeX バイナリのディレクトリは、/usr/local/teTeX/bin/powerpc-apple-darwin-current です。しかし Gerben Wierda さんの最新の TeX ディストリビューションをインストールしている場合は、インテル用のバイナリが入っていることもあります。なのでインテル機では、teTeX バイナリのディレクトリは、/usr/local/teTeX/bin/i386-apple-darwin-current になるはずです。TeXShop ではこの変更を自動で行なうコードを組み込みました。最初にプログラムを起動した際に「uname -p」をコールして作動中のプロセッサを判定します。その結果が「i386」ならTeXShop は、上述の設定を /usr/local/teTeX/bin/i386-apple-darwin-current へと恒久的に 変更します。とはいえこの変更は、デフォルトの /usr/local/teTeX/bin/powerpc-apple-darwin-current をユーザが手ずから他のロケーションへと書き変えていた場合には行なわれません。なのでもし Fink の teTeX ディストリビューションないしはその他のディストリビューションを入れており、それを teTeX バイナリのディレクトリ設定で指定していれば、環境設定は変更されません。
</li>
<p>
<li>
TeXShop を最初に Tiger 上でリリースした際にユーザが遭遇した厄介なバグは、タイプセットを数度実行した後、プログラムが次第にノロノロしてくるというものでした。このバグは公開して数日で修正しました。新しい PDF ファイルがプレビューウインドウ内の PdfKitView にロードされる際に問題が生じていました。Apple のドキュメントによれば、古いデータ・ストラクチャがメモリから解放されるはずだとのことでした。解放は起こっていました、が、それがプログラムのスローダウンを引き起こしていたのです。なのでバグフィックスはシステムをごまかしてデータ・ストラクチャがまだ使用中であると思い込ませ、システムが解放しようとしないようにさせました。
</li>
<p>
副作用としてメモリが次第にいっぱいになってしまうので、毎日の作業が済んだ後 TeXShop を終了する必要があると覚ったユーザもいました。
<p>
最近の検証ではこのバグは Tiger 10.4.3 で直っているようです。したがって最新の TeXShop ではどのシステムが稼働しているか調べ、10.4.3 以降であれば古いデータ・ストラクチャを解放するようにしますが、そうでなければせずにおきます。
<p>
この挙動は隠れた環境設定の新項目で制御できます：
<p>
<tt>
	<dl>
		<dd>defaults write TeXShop ReleaseDocumentClasses 0
	</dl>
</tt>
<p>
デフォルトの値は 0 です──プログラムは上述のように機能します。値が 1 なら、古いデータストラクチャは解放されず、プログラムは以前のバージョンの TeXShop 2 とまったく同じにふるまいます。もし値が 2 であれば、古いデータストラクチャは常に解放されます。
<p>
ですから、何回かタイプセット作業をした後でプログラムが遅くなってしまうようであれば、ReleaseDocumentClasses を 1 に変更して、できるだけ詳しい状況を私（作者）に報告してください。
<li>
Michael Witten さんは MIT の学生ですが、複数の折り返しモードを TeXShop に追加してくれました。「折り返しなし」を選ぶとユーザが ENTER キーを押すまで行は右に伸びてゆきますし、「ワード毎」を選べばテキストは単語の区切りで折り返し（これが以前までの動作でした）、「文字毎」を選択するとテキストはギリギリ最後の文字できっちりと折り返します。以上の折り返しは「ソフト」というわけではありません──ウインドウのサイズを変更すれば折り返し位置も変更されます。デフォルトの折り返し表示は「ワード毎」になっていますが、メニューコマンドで折り返しを変更できます。さらに、隠れた環境設定でデフォルトの折り返し表示を変えておくことができます──
</li>

<tt>
	<dl>
		<dd>defaults write TeXShop LineBreakMode 1
		</dl>
</tt>

<p>
「折り返しなし」は「 0 」で、「ワード毎」は「 1 」、そして「文字毎」が「 2 」です。折り返しは通常ウインドウの右端で行なわれます──が、もしルーラーがアクティブになっている場合には「右マーカー」の位置で折り返します。
<p>
Witten さんはまた「改行を挿入」コマンドも追加してくれました。段落を選択している場合、このコマンドにより段落の右端に改行が挿入されます。この後でウインドウをリサイズしても折り返し位置はそのまま残ります。これが便利なのは、たとえば仲間にソースを送るとして、先方のエディタの幅が固定されていて折り返しがないようなときでしょう。「改行を挿入」コマンドを実行する際に選択部分がなければ、文書全体にわたってハードラップがかけられます。注意したいのは、「改行を挿入」はアンドゥがきかないということです。
<li>
TeXShop のアプリケーションバンドルに Norman Gall さんの TeX-mdimporter が入りました。ファイルの拡張子が .tex・.latex・.ltx・.ctx・texi であれば、保存時に Spotlight によって索引が作成されます。システム 10.4 から 10.4.2 までは、ファイルタイプが TEXT なので TeXShop ファイルは自動的に索引が作成されていましたが、10.4.3 で Apple がやり方を変えてしまいました。なので索引作成にインポーターが必要となったのです。TeXShop をインストールする際に、システムが自動でインポーターを認識します。そしてそれ以降、TeXShop が起動しておらずとも .tex や .ltx などのファイルの索引作成に利用されます。
</li>
<p>
もし後々 Gall さんがインポーターをアップデートし、ユーザが新しいバージョンを ‾/Library/Spotlight やその他の標準的な場所にインストールした場合には、TeXShop のバンドルに含まれているバージョンではなく、アップデートされたバージョンの方が使用されます──というのも Apple のインポーター検出ルーチンは、バンドルに含まれるインポーターについては最後の手段として用いるからです。
<p>
Gall さんのインポーターは TeXShop を念頭に置いて書かれているわけではありませんが、その代わりにすべての TeX エディタやフロントエンドで利用できるように設計されています；普遍的なインポーターの方が、それぞれのフロントエンド用に特化したものよりも望ましいでしょう。最新版については <a href="http://www.spookyhill.net/‾gall/latex" target="new">http://www.spookyhill.net/‾gall/latex</a> をご覧ください。
<li>
Gerben Wierda さんの TeX ディストリビューションに含まれていた altpdftex, altpdflatex の２つのコマンドが、simldftex tex と smpdftex latex に変更されています。TeXShop でも、これらのコマンドをデフォルトの設定値に変更しました。
</li>
<p>
さらに、ユーザが「TeX＋Ghostscript」モードで最初にタイプセットを試みる際に、TeXShop が上記の設定項目をチェックし、必要であれば変更しておきます。この動作の実行は TeX バイナリのディレクトリにおける「simpdftex」の有無によって判定します。もし「simpdftex」があり、「TeXShop 環境設定」の「内部設定」で、「TeX + dvips + distiller」の欄が「altpdftex」になっていれば、「simpdftex tex」へと書き換えられます。環境設定内であらかじめ変更を加えてあった箇所についてはそのままにしておきます。同時に「LaTeX プログラム」欄も書き換えられます。もしも「altpdflatex」になっていれば「simpdftex latex」へと書き換えられますが、あらかじめ変更してあった箇所についてはそのままにしておきます。
<li>
ISO Latin 9 エンコーディングを追加しました。
</li>
<p>
<li>
コマンド＋「 [ 」およびコマンド＋「 ] 」について、ソースウインドウとプレビューウインドウとでは別々の動作をするようにしました。ソースウインドウ内では「左シフト」と「右シフト」となります。プレビューウインドウ内では「戻る」と「進む」です。デメリットとしては、これらのコマンドをメニューに付け加えられないので、ユーザがショートカットを覚えておかなければなりません。この変更はドイツ語版およびその他のキーボードで、コマンド＋「 < 」およびコマンド＋「 > 」がウインドウの巡回に割り当てられいるユーザの要望によるものでした。英語版キーボードのユーザは、ウインドウの巡回にはコマンド＋「 ` 」が割り当てられています。
</li>
<p>
<li>
新しい隠れた環境設定を追加しました
</li>

<tt>
	<dl>
		<dd>defaults write TeXShop LeftRightArrowsAlwaysPage YES
		</dl>
</tt>

<p>
デフォルトの値は NO です。YES にすると、水平スクロールバーが表示されていても、左矢印・右矢印でページごとにスクロールします。
<li>
「環境設定」の「プレビュー」タブ内の英語表記を「After Window Review」から「Magnification Style」にし、「Preview Window Magnification」を「Preview Window Fixed Magnification」に変更することで、これらの環境設定項目の機能をより詳しく言い表わすようにしました。注意してほしいのは、TeXShop が「プレビューウインドウの倍率」の数値を利用するのは「ウインドウのリサイズ後」の項目が「固定倍率」に設定されている時だけだということです。
</li>
<p>
<li>
新しい項目を追加──
</li>

<tt>
	<dl>
		<dd>%!TEX projectfile =
		</dl>
</tt>

<p>
これは TeX のソースファイルの冒頭に付記できます。この変更は主に ConTeXt ユーザが新しい方式のシンクロナイゼーションを利用できるようにするためのものです。プレビューウインドウからソースウインドウへのシンクロの際、TeXShop は、まだ開かれていないソースファイルを必要に応じて開けるようにするために、プレビュー中の文書に関連するソースファイルをすべて把握しておく必要があります。これはルートファイルを解析し、¥include と ¥input のある行を見つけることで行なっています。けれども ConTeXt では、ファイルを挿入するのに異なるコマンドを用いています。新しい構文では、検索に必要な追加のソースファイルを、ConTeXt ユーザがルートファイル内で直接指示できるようになります。以下に例を挙げておきます──
<p>

<tt>
	<dl>
		<dd>%!TEX projectfile = /Users/koch/MyDoc/chapter1.tex
		<dd>%!TEX projectfile = chapter2.tex
		<dd>%!TEX projectfile = ../chapter3.tex
		</dl>
</tt>

<li>
「.Rnw」を TeXShop で編集できる拡張子として追加しました。これは Paolo Bosetti さんの要望でしたが、彼は TeX と R と Sweave をいっしょに使っています。
</li>
<p>
<li>
ユーザが拡張子「.dvi」のファイルを開こうとすると、TeXShop は DVI ファイルを PDF ファイルに変換するスクリプトを走らせます。以前のバージョンでは、「.dvi」ファイルが書き込み可能なディレクトリにある場合と書き込み不可のディレクトリにある場合とでは異なるスクリプトを実行していました。けれども Gerben Wierda さんが simpdftex のスクリプトを改善して両方のケースを扱えるようにしたので、TeXShop では変換するにあたって常に simpdftex をコールするようになりました。実を言えば「環境設定」で設定した「TeX + dvips + distiller」のスクリプトをコールしているわけです──ユーザがごく最近の TeX ディストリビューションを持っていれば、この環境設定は simpdftex になっていることでしょう。
</li>
<p>
<li>
新しい隠れた環境設定を追加しました──
</li>

<tt>
	<dl>
		<dd>defaults write TeXShop RedConsoleAfterError NO
		</dl>
</tt>

<p>
この初期値が YES ならば、コンソールの最初のエラー部分より後ろのテキストは赤色で表示されます。デフォルト値は NO です。
<li>
コンソールウインドウのアピアランスを微妙に修正しました──とりわけ英語表記ですが。これについてはさらなる作業が必要とされています。コンソールウインドウはサイズが変更でき、場所も移動できますが、TeXShop を再起動してもシステムは変更後のサイズと場所を覚えていることに注意してください。
</li>
<p>
<li>
バージョン 2.05 では、「最後に保存した状態に戻す」について、Mac OS X Tiger の新しいコマンド「textView breakUndoCoalescing」を利用して修正しました。以前のバージョンのTeXShop でも、最後に保存した状態に戻せるようにするコマンドは使えました。けれどもこれには「トリッキーなコード」が必要で、このトリックの影響のひとつとして TeXShop はたまに、文書の現在の状態が既に保存したものだったかどうかわからなくなり、タイプセットする前に保存をしないことがあり、プレビューウインドウに表示される結果が変になっていました。
</li>
<p>
<li>
バージョン 2.00 から 2.04 までの TeXShop では時おり、新しい環境設定を覚えておくという厄介事がありました──「定着」するまで何度か設定してやる必要があったのです。これを修正しました。
</li>
</ul>


<h5>バージョン 1.42 と 2.05 共通の新機能</h5>
<ul>
<li>
Gerben Wierda さんの TeX ディストリビューションに含まれている "altpdftex" と "altpdflatex" のコマンドが、それぞれ "simpdftex tex" と "simpdftex latex" に変更されています。TeXShop を新しくインストールした場合は、これらのコマンドがデフォルトで設定されるようになりました。
</li>
<p>
さらに、ユーザが「TeX＋Ghostscript」モードで最初にタイプセットを試みる際に、TeXShop が上記の設定項目をチェックし、必要であれば変更しておきます。この動作の実行は TeX バイナリのディレクトリにおける「simpdftex」の有無によって判定します。もし「simpdftex」があり、「TeXShop 環境設定」の「内部設定」で、「TeX + dvips + distiller」の欄が「altpdftex」になっていれば、「simpdftex tex」へと書き換えられます。環境設定内であらかじめ変更を加えてあった箇所についてはそのままにしておきます。同時に「LaTeX プログラム」欄も書き換えられます。もしも「altpdflatex」になっていれば「simpdftex latex」へと書き換えられますが、あらかじめ変更してあった箇所についてはそのままにしておきます。
<li>
ISO Latin 9 エンコーディングを追加しました。
</li>
<p>
<li>
新しいドイツ語ローカライズとヘルプファイル。
</li>
<p>
<li>
銭谷誠司さんから助力を得た岡崎祥久さんによる新しい日本語ヘルプ。
</li>
<p>
<li>
新しいスペイン語ヘルプファイルとローカライズ。
</li>
<p>
<li>
バージョン 1.2.4 の OgreKit を使用。
</li>
<p>
<li>
ファイルパスのフォルダ名にスペース文字が含まれている場合も、eps, ps, dvi ファイルを pdf に変換できるようになりました。この変換機能は、これらのファイルをダブルクリックで開いたときに動作します。書き込み権限のないディレクトリにファイルがある場合も、pdf への変換が動作するようになりました。
</li>
<p>
<li>
「作業ファイルを除去」によって取り除かれるファイルの拡張子を追加：cos・idv・4ct・4tc・lg・xref・ttt・fff・ent・wrm 。
</li>
<p>
<li>
ユーザが UTF-8 Unicode エンコーディングのファイルを開こうとしても、そのファイルがきちんとした UTF-8 ファイルではなかった場合には、問題を告げるダイアログが表示され、ファイルは MacOSXRoman エンコーディングで開かれるようにしました。
</li>
<p>
<li>
Bib ファイルの処遇を向上させました──テキストをドラッグできるようにする、シンタックス・カラーリングを機能させる、等々。
</li>
<p>
<li>
ひとこと：コンソールウインドウ内で語句を「検索」することができなくなったとの報告がユーザから寄せられました。でも実際のところは、検索できます。このウインドウは２つの部分から成り立っています。タイプセットが終了した時点では、下側の部分がアクティブになっていますから、検索パネルはこの部分を検索対象にします。上の部分をアクティブにするには、一度クリックしておきます。そうすれば「検索」が機能します。
</li>
<p>
<li>
マウスの初動をコントロールする環境設定項目を追加しました。「選択時にカーソルを移動」がそうです。もしこれにチェックが入っていれば、ソースウインドウをクリックした際に、クリックをした位置に挿入ポイントが置かれます。もしチェックが入っていなければ、もう一度クリックして挿入ポイントを移動させることになります。
</li>
<p>
<li>
TeXShop で編集可能なファイルタイプに pdf を追加し、pdf アイコンも追加しました。これにより TeXShop をデフォルトの PDF ビューワに指定することができるようになりました。
</li>
<p>
<li>
Lilypond・abc・bst を編集可能な拡張子として追加しました。
</li>
<p>
<li>
David Reitter さんのコードを追加することで、¥int 等の語の選択において、最初の「¥」も選択に含まれるようになりました。
</li>
</ul>

<h5>バージョン 1.42 と 2.05 でのバグ修正</h5>
<ul>
<li>
日本語環境では、環境設定項目の「コピー」項目がローカライズ時の手違いで動作しませんでした。この件を修正しました。
</li>
<p>
<li>
コマンド補完用の設定ファイルが UTF-8 Unicode で読み出され保存されるようになりました。
</li>
<p>
<li>
pdfsync におけるエラーを修正しました。
</li>
<p>
<li>
タイプセットエンジンをコールする際に、たんにファイル名だけでなく、拡張子付きのファイル名を渡すようにしました。
</li>
<p>
<li>
バージョン 1.35 では、OgreKit の検索パネルと Apple の検索パネルとの切り替えが、英語版ローカライズでのみ可能でした。これを修正しました。
</li>
<p>
<li>
<!-- 
統計パネルを取り出すためのメニュー項目が英語版にしかありませんでした。これがすべてのバージョンで利用可能となりました。
 -->
統計パネルを呼び出すためのメニュー項目が英語版にしかありませんでした。これが各国語版で利用可能となりました。
</li>
<p>
<li>
「ページレイアウト」が「単一ページ」以外のモードになっていると、各 PDF ページの周囲に黒い境界線が引かれます。以前はこの境界線がわずかにページ内に食い込んでおり、ページの周囲を微妙にへずっていました。今ではページのちょうど外側になっています。このエラーを指摘してくれた Scott Ranby さんに感謝。
</li>
<p>
<li>
コマンド「%!TEX TS-program」と「%!TEX root =」を外部エディタで利用できるようにしました。
</li>
</ul>

<h3>Version 1.41 ＆ 2.04</h3>
<ul>
<li>
バージョン1.41 と 2.04 の TeXShop は、TeX インストールパッケージ「MacTeX.pkg」の最初のリリースに同梱されていますが、それ以外では公開されませんでした。
</li>
</ul>

<h3>Version 1.40 ＆ 2.03</h3>

<h5>バージョン 2.03 での変更点</h5>
<ul>
<li>
PDF 検索（つまりシンクロ）のコードを改善し、¥include{file}・¥input{file}・¥import{file} に対応しました。規模の大きなプロジェクトでシンクロナイゼーションを利用してトラブルに見舞われていたユーザは、これが機能するようになったことに気付くかもしれません。
</li>
<p>
<li>
コマンド＋Ｆで検索パネルを開いた際、前回の検索語句がハイライト表示されるようになったので、新しい検索語句をタイプするだけで書き換えることができます。
</li>
<p>
<li>
コマンド＋左矢印（&#x2318;＋←）とコマンド＋右矢印（&#x2318;＋→）は、プレビューウインドウが開いている際にはページアップとページダウンとして動作しますが、エディタでは行頭・行末への移動となります──バージョン 2.01 でうっかり除いてしまったキーボードショートカットを復元しました。
</li>
<p>
<li>
Juan Luis Verona さんによる新しいスペイン語ローカライズとヘルプ。
</li>
<p>
<li>
Martin Kerz さんによるドイツ語ローカライズへの追加修正。
</li>
</ul>

<h5>バージョン 1.40 での変更点</h5>
<ul>
<li>
コマンド＋Ｆで検索パネルを開いた際、前回の検索語句がハイライト表示されるようになったので、新しい検索語句をタイプするだけで書き換えることができます。
</li>
</ul>

<h3>Version 1.39 ＆ 2.02</h3>

<h5>バージョン 2.02 での変更点</h5>
<ul>
<li>
ショートカットキーを追加しました──コマンド＋左カーソルキーで前ページへ移動、コマンド＋右カーソルキーで次ページへ移動、コマンド＋「 [ 」キーで「戻る」、コマンド＋「 ] 」キーで「進む」となります。上記のショートカットキーはアップルのプレビュー（Preview.app）でも用いられています。この追加に伴い、「行を右シフト」と「行を左シフト」のショートカットキーはそれぞれコマンド＋「 < 」とコマンド＋「 > 」へと変更され、「コメント」と「コメントを外す」はそれぞれコマンド＋「 { 」とコマンド＋「 } 」とに変更されました。
</li>
<p>
<li>
水平方向のスクロールバーがアクティブになっているときには、左右のカーソルキーはそれぞれ左右へのスクロールとなりますが、そうでないときには上下のページ移動となります。この動作はアップルのプレビュー（Preview.app）に倣ったものです。
</li>
<p>
<li>
プレビューウインドウでリンク箇所をクリックしたときは、使用中のツールの種類（スクロールやテキスト、拡大鏡ツールなど）に関わらず、リンク先にジャンプするようになりました。
</li>
<p>
<li>
ツールバー項目の「倍率」と「ページ」の背景の囲みをなくしましたので、サイズも小さくなり、以前よりハッキリと見えるようになりました。
</li>
<p>
<li>
新しいシンクロナイゼーション方法で検索するファイルの数を 20 から 60 に増やしました。
</li>
<p>
<li>
OgreKit のパーミッションを修復。
</li>
<p>
<li>
岡崎祥久さんによる日本語版ローカライズ。
</li>
</ul>
<h5>バージョン 1.39 での変更点</h5>
<ul>
<li>
岡崎祥久さんによる日本語版ローカライズ。
</li>
<p>
<li>
Juan Luis Varona Malumbres さんによるスペイン語版ローカライズ。
</li>
<p>
<li>
OgreKit のパーミッションを修復。
</li>
</ul>

<h3>Version 1.38 ＆ 2.01</h3>

<h5>バージョン 2.01 での変更点</h5>
<ul>
<li>
デフォルトの設定の欠落により PDF ウインドウの背景色が黒くなっていました。これを修正。
</li>
<p>
<li>
書類のタイプセット後にビーチボールが現われ、エディタが使えるようになるまでに相当の遅れの出ることがありました。修正しました。
</li>
<p>
<li>
プレビューウインドウの位置とサイズを定める環境設定が壊れていました。修正済みです。
</li>
<p>
<li>
デフォルトの倍率を変更しても、開いているウインドウでは即座に変更されませんでした。修正しました。
</li>
<p>
<li>
ソースコードのテキストの一部を、ある箇所から別の箇所にドラッグする操作が Tiger ではうまく動作しませんでした。これを修正。
</li>
<p>
<li>
TeXShop および TeXShopヘルプがドイツ語にローカライズされました。
</li>
<p>
<li>
マクロ > Headings > 12pt > book ──つまり、文字サイズ 12 ポイントの「book」クラスのヘッダを挿入するマクロに、誤った文字が入っていました。新規ユーザであればこれは修正されていることになりますが、それ以外のユーザはマクロエディタを使ってこの文字を取り除いておく必要があります。
</li>
</ul>

<h5>バージョン 1.38 での変更点</h5>
<ul>
<li>
ソースコードのテキストの一部を、ある箇所から別の箇所にドラッグする操作が Tiger ではうまく動作しませんでした。これを修正。
</li>
<p>
<li>
ドイツ語版ローカライズにいくらか追加が行なわれました。
</li>
<p>
<li>
マクロ > Headings > 12pt > book ──つまり、文字サイズ 12 ポイントの「book」クラスのヘッダを挿入するマクロに、誤った文字が入っていました。新規ユーザであればこれは修正されていることになりますが、それ以外のユーザはマクロエディタを使ってこの文字を取り除いておく必要があります。
</li>
</ul>


</div>
<div id="header_background"></div>
<div id="header_logo"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></div>
<div id="header_title">更新履歴</div>
</BODY>
</HTML>
