<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
  <title>What's new?</title>
  <meta name="copyright"
 content="Copyright (c) 2003 Richard Koch und Sebastian Siedentopf unter der GNU FDL">
  <meta name="description" content="neue Funktionen; Bug Fixes">
  <link href="../sty/screen.css" rel="stylesheet" media="all">
</head>
<body>
<div id="content_normal">
<p></p>
<h5>Versionen 1.37 und 2.00
erweitern den Funktionsumfang von TeXShop. Dar&uuml;ber hinaus
werden einige Fehler behoben.</h5>
<p></p>
<p></p>
<h6> Neue Funktionen in 2.00:</h6>
<p></p>
<ul>
  <li>
Eine neue Synchronisationsmethode wurde zu TeXShop
hinzugef&uuml;gt, welche die M&ouml;glichkeit von Tiger nutzt,
in PDFs nach Text zu suchen. Die neue Methode ben&ouml;tigt nicht
mehr das Einbinden der pdfsync.sty Datei. Es funktioniert also
direkt mit jedem gesetzten Dokument wenn pdftex oder pdflatex, TeX +
ghostscript oder LaTeX + ghostscript, XeTeX oder eine anderes
Setzprogramm genutzt wurde.
    <p></p>
  </li>
  <li>Klicken Sie auf ein Wort
oder eine Textpassage in der Quelltextdatei. TeXShop wird an die
entsprechende Stelle im Vorschaufenster springen und diese rot
umranden. Klicken sie auf ein Wort oder eine Textpassage im
Vorschaufenster und TeXShop
wird die entsprechende Quelldatei &ouml;ffnen, soweit noch nicht
geschehen,
und die entsprechende Stelle in der Quelldatei gelb hervorheben
    <p></p>
  </li>
  <li> Eine neue TeXShop
Voreinstellung l&auml;&szlig;t die gew&uuml;nschte
Synchronisationsmethode
ausw&auml;hlen: die alte pdfsync Methode, die neue Methode oder
eine Kombination von beiden,
in der die neue Methode genutzt wird, jedoch auf die alte pdfsync
zur&uuml;ckgegriffen wird, falls die
neue Suche versagen sollte.
    <p></p>
  </li>
  <li> TeXShop 2.00 nutzt Apples
neues PDFKit um PDFs im Vorschaufenster anzuzeigen. PDFKit wird mit
System 10.4.0 (Tiger)
eingef&uuml;hrt. Somit setzt TeXShop 2.00 Tiger voraus. PDFKit
erm&ouml;glicht die folgenden neues Features:</li>
  <p> </p>
  <ul>
    <li> TeXShop
unterst&uuml;tzt Hyperlinks (Verweise). Um dieses Feature zu
aktivieren, f&uuml;gen sie die Zeile
      <ul>
        <li>\usepackage[colorlinks=true,
pdfstartview=FitV, linkcolor=blue, citecolor=blue,
urlcolor=blue]{hyperref}</li>
      </ul>
in den Header des Quelldokumentes ein. Verweise auf externe Webseiten
k&ouml;nnen auf folgende Weise im TeX Dokument
erzeugt werden
      <ul>
        <li>
\href{http://www.uoregon.edu/~koch/}{Koch homepage} </li>
      </ul>
Verweise zu anderen Stellen im TeX Dokument k&ouml;nnen auf
folgende Weise erzeugt werden
      <ul>
        <li>
\hyperlink{lemniscate}{Graph of Lemniscate}</li>
      </ul>
wobei der Anker "lemniscate" auf folgende Weise generiert wird
      <ul>
        <li>
\hypertarget{lemniscate}{}</li>
      </ul>
      <p> Um mittels der Verweise
zu navigieren, w&auml;hlen Sie das neue Textauswahlwerkzeug aus
und klicken Sie auf die Links.
      </p>
      <p></p>
    </li>
    <li> Das Vorschaufenster
enth&auml;lt "Zur&uuml;ck" und "Vorw&auml;rts"
Kn&ouml;pfe, um zwischen bereits gew&auml;hlten Links hin- und
herzuspringen.
      <p></p>
    </li>
    <li> Hyperref.sty
f&uuml;gt automatisch Verweise zu Zitaten hinzu, um schnell zw.
Zitat und Bibliographie hin- und herzuspringen.
      <p></p>
    </li>
    <li> Das hyperref Paket
erzeugt au&szlig;erdem einen Inhaltsverzeichnis.
In einem Buch bspw. ist das Inhaltsverzeichnis die Kapitelliste, jedes
Kapitel setzt sich aus
einer Liste der Abschnitte zusammen usw. Das Inhaltsverzeichnis kann
mittels der
neuen Kapitel- und Suchschublade
im Vorschaufenster genutzt werden. </li>
    <p> </p>
    <li> Das Textauswahlwerkzeug
kann genutzt werden, um einzelne Passagen im Vorschaufenster
auszuw&auml;hlen, und um diese anschlie&szlig;end in eine andere
Textverarbeitung/Editor zu kopieren. Im Unterschied dazu
kopiert das PDF-Auswahlwerkzeug den Inhalt als nichtbearbeitbare
Grafik. </li>
    <p> </p>
    <li> In der Vorschau kann
mittels der Suchfeldes in der neuen Schublade gesucht werden.
      <p> </p>
    </li>
    <li> PDFKit sorgt
dar&uuml;ber hinaus f&uuml;r h&ouml;herwertigere Ausgabe in
der Vorschau. Es werden einzelne
auf Querformat gedrehte Seiten korrekt angezeigt und ausgedruckt. Steht
die Seitenvergr&ouml;&szlig;erung auf "An Fenster anpassen"
wird die Darstellung beim Fenstervergr&ouml;&szlig;ern
unverz&uuml;glich aktualisiert.</li>
    <p> </p>
  </ul>
</ul>
<p></p>
<h6> Neue Funktionen in 2.00 und
1.37:</h6>
<p></p>
<p>
Diese Funktionen sind in beiden Versionen neu:
</p>
<ul>
  <li> Fr&uuml;here Versionen
von TeXShop erlaubten es das Satzprogramm einer Datei, die Kodierung
und die Hauptdatei (root) durch entsprechende Kommentierungen im Kopf
der Quelldatei
anzugeben. Die folgenden Zeilen setzen z.B. das Satzprogramm auf
xelatex, die Kodierung auf UTF-8 Unicode
und die Hauptdatei auf ../Main.tex
    <p></p>
    <ul>
      <li> %&amp;xelatex </li>
      <li> %&amp;encoding=
UTF-8 Unicode </li>
      <li> %SourceDoc ../Main.tex </li>
    </ul>
    <p>
Die Wahl dieser Syntax war jedoch ein Fehler, da die Ausdr&uuml;cke
"%&amp;" f&uuml;r TeX reserviert sind.
    </p>
    <p></p>
  </li>
  <li> In der TeXShop-Version 1.37
und 2.00 wurde die Syntax auf folgende Weise ge&auml;ndert
    <p> </p>
    <ul>
      <li> %!TEX TS-program =
xelatex </li>
      <li> %!TEX encoding = UTF-8
Unicode </li>
      <li> %!TEX root =
../Main.tex </li>
    </ul>
    <p>
Falls Sie die alte Syntax genutzt haben, m&uuml;ssen alte
Quelldateien an die neue Syntax angepa&szlig;t werden.
Es tut mir sehr leid, aber diese Ver&auml;nderung war nicht zu
umgehen.
    </p>
    <p></p>
  </li>
  <li> Falls Sie gerade mitten in
einem Projekt sind und die Syntax aus diesem Grund nicht unmittelbar
wechseln k&ouml;nnen, kann tempor&auml;r eine versteckte
Einstellung zur Aktivierung der alten Syntax genutzt werden. Geben sie
dazu in Apples Terminal.app Programm folgendes ein
    <p></p>
    <ul>
      <li> defaults write TeXShop
UseOldHeadingCommands YES </li>
    </ul>
    <p>
Daraufhin wird die neue Syntax erkannt, die alten Syntax jedoch
trotzdem noch funktionieren.
Nichts desto trotz wird ein Umstellen auf die neue Syntax so bald wie
m&ouml;glich empfohlen.
    </p>
    <p> </p>
  </li>
  <li> Dem Makromen&uuml;
wurden Befehle hinzugef&uuml;gt, die "%!TEX TS-program = ", "%!TEX
encoding = " und "%!TEX root = " in das Quelldokument
einf&uuml;gen. Neue Nutzer sehen diese Befehle sofort, wer TeXShop
schon nutzt
und aktualisiert hat, kann diese Eintr&auml;ge leicht selbst
&auml;ndern. Daf&uuml;r ist "Makro Editor &ouml;ffen ..."
aus dem Men&uuml;
"Makros" zu w&auml;hlen und mittels "Neu" Knopf einen neuen Eintrag
"Program" hinzuf&uuml;gen, dessen Inhalt auf
    <p></p>
    <ul>
      <li> %!TEX TS-program =
#INS# </li>
    </ul>
    <p>
gesetzt wird. Analog dazu die "Encoding" und "Root" Eintr&auml;ge. </p>
    <p></p>
  </li>
  <li> Martin Kerz f&uuml;gte
den "Nach Aktualisierungen suchen..." Befehl ein. Er entwarf weiterhin
die neue
TeXShop Homepage. Thanks! </li>
  <p>
  </p>
  <li> Das OgreKit f&uuml;r
die Suche wurde auf die letzte Version 2.0.1 aktualisiert.</li>
  <p>
  </p>
  <li> Weitere Dateitypen
k&ouml;nnen bearbeitet werden, darunter "abc", "bst", "bib", "lp",
und
"pdf". Durch "pdf" kann TeXShop als Standard f&uuml;r die PDF
Vorschau festgelegt werden. Ein neues
PDF-Icon f&uuml;r mit TeXShop verkn&uuml;pften PDF Datein wurde
hinzugef&uuml;gt.</li>
  <p>
  </p>
  <li> TeXShop besa&szlig;
schon immer eine "Wiederherstellen" Funktionen im Men&uuml;
"Ablage", das jedoch nicht funktionierte!
Sorry. Jetzt funktioniert es. </li>
  <p> </p>
  <li> David Reitter modifizierte
den Auswahlcode, so dass beim Klick auf ein Befehlswort
wie \gamma das f&uuml;hrende "\" mit ausgew&auml;hlt wird </li>
  <p>
  </p>
  <li> Eine neue Voreinstellung "Cursorstelle bei Fensterklick": Falls
aktiviert, sorgt ein Klick in ein Fenster f&uuml;r dessen Aktivierung
und Setzen des Cursors
an die entsprechende Stelle. Falls deaktiviert, wird nur das Fenster
aktiviert und ein zus&auml;tzlicher Klick f&uuml;r die Positionierung
des Cursors ist n&ouml;tig.</li>
  <p>
  </p>
  <li> Neue versteckte Einstellung f&uuml;r Nutzer, die die
Standardvorder- und hintergrundfarbe
des Quelltextfensters &auml;ndern. Diese Einstellung ver&auml;ndert die
Farbe der Textmarke/Einsetzpunkt, der u.U.
unsichtbar werden konnte. Um die Textmarke auf Wei&szlig; zu setzen:</li>
  <p>
  </p>
  <ul>
    <li> defaults write TeXShop
insertionpoint_R 1.0 </li>
    <li> defaults write TeXShop
insertionpoint_G 1.0 </li>
    <li> defaults write TeXShop
insertionpoint_B 1.0 </li>
  </ul>
  <p>
  </p>
  <li> Wenn eine Datei gesetzt wird, werden alle Dateien mit der
gleichen Hauptdatei (root) zuerst gespeichert.</li>
  <p>
  </p>
  <li> Verbesserungen im pdfsync Code.</li>
  <p>
  </p>
  <li> In fr&uuml;heren englischen Versionen war es m&ouml;glich, einen
Makroknopf in der Werkzeugleiste der Vorschau
zu positionieren. Dies funktioniert dank Juan Luis Varona nun in allen
Sprachen.</li>
  <p>
  </p>
  <li> Neue japanische Hilfe von Yoshihisa Okazaki mit Hilfe von Seiji
Zenitani. </li>
  <p>
  </p>
  <li> Die Kopfleiste des Vorschaufenstern besitzt nun ein Proxiicon.
Dieses kann wie normal in Mac OS X genutzt werden.
Das Quelltextfenster besa&szlig; schon immer ein Proxiicon. Dank an
Rene Donner f&uuml;r den Hinweis und Hilfe bei der Implementierung. </li>
</ul>
<p></p>
<h5>Version 1.36 wurde niemals
ver&ouml;ffentlicht.</h5>
<p></p>
<p></p>
<h5>Version 1.35 von TeXShop
enth&auml;lt neue Funktionen und beseitigt einige Fehler.</h5>
<p></p>
<p></p>
<h6> Neue Funktionen:</h6>
<p></p>
<ul>
  <li> Eine wichtige neue
Entwicklung stellt die Ver&ouml;ffentlichung von XeTeX und XeLaTeX
durch Jonathan Kew dar. Siehe:
    <p></p>
    <ul>
      <li>
http://scripts.sil.org/xetex
      </li>
    </ul>
    <p> XeTeX ist nicht
Bestandteil von Gerben Wierdas Standardinstallation, aber mittels
Wierdas i-Installer als zus&auml;tzliches Packet direkt von
Jonathan Kew verf&uuml;gbar. XeTeX kann direkt auf Macintosh Fonts
zugreifen, so das TeX Dokumente mit Lucinda Grande, Zapfino und jedem
anderen Mac Font gesetzt werden k&ouml;nnen. Ferner kann XeTeX mit
Unicode umgehen. So k&ouml;nnen z.B. Arabische Zeichen direkt in
das Quelldokument von rechts nach links eingegeben werden, um nach dem
Setzen mit TeX Arabische Zeichen in der Ausgabe zu erhalten.
Insbesondere sind XeTeX Quelldokumente UTF-8 Unicode codiert. </p>
    <p> TeXShop 1.35
unterst&uuml;tzt XeTeX durch:
    </p>
    <p></p>
    <ul>
      <li> a) XeTeX und XeLaTeX
sind &uuml;ber das Setzen Pull Down Men&uuml; des Quellfensters
verf&uuml;gbar </li>
      <li> b) XeTeX oder XeLaTex
k&ouml;nnen in den Einstellungen als Standard f&uuml;r das
Setzen angegeben werden </li>
      <li> c) Falls eine der
ersten 10 Zeilen den Ausdruck
        <p></p>
        <ul>
          <li>
%&amp;encoding=UTF-8 Unicode
          </li>
        </ul>
        <p> enth&auml;lt, wird
die Datei als UTF-8 Unicode geladen und gespeichert,
unabh&auml;ngig wie die Voreinstellungen f&uuml;r andere
Dokumente gew&auml;hlt wurden. </p>
      </li>
      <li> d) Falls die erste
Zeile der Quelldatei
        <p></p>
        <ul>
          <li>
%&amp;program=xetex oder %&amp;program=xelatex
          </li>
        </ul>
        <p> enth&auml;lt, wird
das entsprechende Programm gew&auml;hlt, unabh&auml;ngig von
der gew&auml;hlten Einstellung f&uuml;r das Setzen.
        </p>
      </li>
    </ul>
  </li>
  <li> Die XeTeX Features sind die
Anwendung einer neuen Methode, um ganz allgemein neue
Schriftsatzsysteme zu TeXShop hinzuzuf&uuml;gen. In
~/Library/TeXShop existiert ein neuer Ordner "Engines". Die Dateien in
diesem Ordner sind Shell Skripte, welche Satzprogramme aufrufen. Beim
ersten Start von TeXShop werden alle dort befindlichen Skripte dem
Setzen Pull Down Men&uuml; hinzugef&uuml;gt. Die Auswahl des
Skripts und bet&auml;tigen des Setzen Buttons ruft ein Skript auf.
Nutzer k&ouml;nnen eigene Skripte schreiben und dem Engines Ordner
hinzuf&uuml;gen.
    <p> Eintr&auml;ge von
~/Library/TeXShop/Engines k&ouml;nnen als Standardsatzmethode in
den TeXShop Einstellungen ausgew&auml;hlt werden.
    </p>
    <p> In vorangegangenen TeXShop
Versionen konnte das Satzprogramm mittels %&amp;tex,
%&amp;latex, %&amp;pdftex usw. in der ersten Zeile des
Quelltextes festgelegt werden. Aus
Kompatibilit&auml;tsgr&uuml;nden funktioniert dies weiterhin,
die neue bevorzugte Syntax ist jedoch %&amp;program=tex,
%&amp;program=latex, %&amp;program=pdftex usw. Diese neue
Syntax funktioniert ebenfalls mit allen neuen ~/Library/TeXShop/Engines
hinzugef&uuml;gten Satzprogrammen. %&amp;program=xelatex
w&auml;hlt bspw. XeLaTeX aus.
    </p>
  </li>
  <li> Das Encoding f&uuml;r
das Laden oder Speichern einer Datei kann durch eine Zeile der Form
    <p></p>
    <ul>
      <li>
%&amp;encoding=UTF-8 Unicode
      </li>
    </ul>
    <p> als eine der ersten 10
Zeilen des Quelldokumentes festgelegt werden. Alle
unterst&uuml;tzten Codierungsarten sind erlaubt. In der Hilfe zu
TeXShop sind die entsprechenden Zeichenketten angegeben. Dieses
Verhalten kann durch Bet&auml;tigen der Wahltaste beim
&Ouml;ffnen der Datei umgangen werden.
    </p>
  </li>
  <li> TeXShop besitzt ein neues
Such Dialogfeld von Isao Sonobe. Der Dialog unterst&uuml;tzt
regul&auml;re Ausdr&uuml;cke. In den Voreinstellungen kann
zwischen dem neuen und dem Originaldialog gew&auml;hlt werden. Die
Suchmaske baut auf OgreKit auf, einem Cocoa Framework f&uuml;r den
Umgang mit regul&auml;ren Ausdr&uuml;cken, ebenfalls von
Sonobe. Siehe:
    <p></p>
    <ul>
      <li>
http://www-gauge.scphys.kyoto-u.ac.jp/~sonobe/OgreKit/
      </li>
    </ul>
    <p></p>
    <p> OgreKit wird unter einer
leicht abge&auml;nderten BSD Lizenz vertrieben. Die Lizenz ist in
der Dokumentation einsehbar, welche direkt im OgreKit Framework Ordner
innerhalb der TeXShop Distribution enthalten ist. OgreKit
ben&ouml;tigt Panther, so dass das die neue Suchmaske nur auf 10.3
Systemen verf&uuml;gbar ist. </p>
    <p> Die neue Suchmaske
enth&auml;lt viele interessante Features, welche dem Nutzer
&uuml;berlassen werden, sie auszuprobieren. OgreKit modifiziert das
"Suchen" Untermen&uuml; des TeXShop Bearbeiten Men&uuml;s,
indem es dieses durch ein Erweitertes ersetzt. Dies ist f&uuml;r
&Uuml;bersetzer u.U. verwirrend, da das Men&uuml; in der
TeXShop nib Datei nicht identisch ist mit dem bei laufenden TeXShop.
Das Suchen Men&uuml; in der nib Datei sollte nicht modifiziert
werden, da es in 10.2 verwendet wird. Statt dessen muss das
entsprechende Men&uuml; in OgreKit der TeXShop Quelldateien
lokalisiert werden. Der Suchdialog enth&auml;lt Buttons, welche die
Art und Weise der Wortsuche steuern. Die Einstellungen werden werden
zwischen einzelnen Sitzungen gespeichert. Einfach die Einstellungen auf
das gew&uuml;nschte Ergebnis einstellen und zur&uuml;cklehnen.
    </p>
  </li>
  <li> TeXShop 1.35 wird mit der
letzten pdfsync.sty von Piero d'Ancona und J. Laurens ausgeliefert.
Diese behebt einige Probleme beim Setzen, verursacht von Versionen
ausgeliefert mit TeXShop 1.34. TeXShop war f&uuml;r einige Monate
nicht auf dem letzten Stand der &Auml;nderungen von d'Ancona und
Laurens, sorry.
    <p> In der neuen Version
werden \include und \input unterst&uuml;tzt. Um letzteres zu
nutzen, ist \input{dateiname} anstatt \input dateiname zu verwenden.
Die neue Version unterst&uuml;tzt \pdfsync, \pdfsyncstart und
\pdfsyncstop. Der erste Befehl wird an jeder Stelle genutzt, auf die
verwiesen werden soll. Falls pdfsync den Quellcode zerst&ouml;rt,
sind die fehlerhaften Passagen in \pdfsyncstop und \pdfsyncstart Paare
einzuklammern.
    </p>
  </li>
  <li> Angenommen, die Datei
meinedatei.tex wird gesetzt. Pdfsync erzeugt dann eine Datei
meinedatei.pdfsync mit den Synchronisationsdaten. Grob gesagt,
beschreibt jeder Eintrag einen Synchronisationspunkt
folgenderma&szlig;en:
    <p></p>
    <ul>
      <li> die Seitenzahl in der
Ausgabe, wo der Punkt auftritt
      </li>
      <li> den Ort auf der Seite
      </li>
      <li> den Namen der
Quelldatei, welchen die Ausgabe erzeugt hat
      </li>
      <li> die Zeilennummer der
Quelldatei f&uuml;r diesen Punkt in der Ausgabe
      </li>
    </ul>
    <p></p>
    <p> Die Synchronisationspunkte
k&ouml;nnen von TeXShop angezeigt werden. Das Vorschaufenster
besitzt f&uuml;r die Werkzeugleiste eine neue Checkbox SyncMarks.
Standardm&auml;&szlig;ig wird diese nicht angezeigt;
&uuml;ber das Anpassen der Men&uuml;leiste kann diese sichtbar
gemacht werden. Wenn die Checkbox ausgew&auml;hlt ist, werden die
Synchronisationspunkte angezeigt.
    </p>
    <p>
Standardm&auml;&szlig;ig ist die Checkbox beim ersten
&ouml;ffnen des Vorschaufensters deaktiviert. Eine versteckte
Einstellung &auml;ndert dies:
    </p>
    <p></p>
    <ul>
      <li> defaults write TeXShop
ShowSyncMarks YES
      </li>
    </ul>
    <p></p>
  </li>
  <li> TeXShop 1.35
enth&auml;lt neuen Code f&uuml;r die Matrixmaske von Jonas
Zimmermann. Die Matrix Palette erzeugt nun Tabellen. F&uuml;r die
neuen Funktionen einfach selbst ausprobieren. Es existiert eine
versteckte Einstellung f&uuml;r die
Standardgr&ouml;&szlig;e der der Matrix:
    <p></p>
    <ul>
      <li> defaults write TeXShop
matrixsize 12
      </li>
    </ul>
    <p></p>
    <p> Einige Nutzer haben u.U.
die "matrixpanel.plist" in ~/Library/TeXShop/MatrixPanel angepasst.
Diese plist wurde erweitert und hei&szlig;t jetzt
"matrixpanel_1.plist". Bitte diese Datei f&uuml;r eigene
&Auml;nderungen bearbeiten.
    </p>
  </li>
  <li> In vorangegangenen
Versionen von TeXShop musste, wenn das Quellfenster nicht aktiviert
war, zweimal in dieses hineingeklickt werden, um den Cursor korrekt zu
positionieren. Dies wurde ge&auml;ndert, der erste Klick in den
Textbereich wird erkannt und positioniert den Cursor.
    <p> Wenn ein AppleScript
mittels Makro Men&uuml; ausgef&uuml;hrt wird, startet
tats&auml;chlich eine kleine zweite Anwendung, enthalten im TeXShop
Ordner. Dies ist notwendig, da, wenn z.B. ein Befehl wie "latex"
ausgef&uuml;hrt wird und ein Fehler im Quelltext auftritt, die
Konsole Nutzereingaben entgegennehmen soll, aber der TeXShop Event Loop
nicht w&auml;hrend einer AppleScript Aktion l&auml;uft und
somit keine Nutzereingabe stattfinden k&ouml;nnte.
    </p>
    <p> Viele AppleScripte
besitzen dieses Problem nicht. TeXShop erlaubt nun das Starten eines
AppleScript mittels des Makrobefehls
    </p>
    <p></p>
    <ul>
      <li> -- applescript direct
      </li>
    </ul>
    <p> Auf diese Weise wird das
Skript direkt unter TeXShop ausgef&uuml;hrt, anstatt durch die
zweite kleine Anwendung.
    </p>
  </li>
  <li> Men&uuml;befehl und
Button in Consolenfenster "Aux-Dateien l&ouml;schen"
hinzugef&uuml;gt. Der Befehl bewegt alle Dateien im momentanen
Quellordner mit dem gleichen Namen wie die Quelldatei und den Endungen
aux, bbl, blg, brf, glo, idx, ilg, ind, ioa, lof, log, lot, mtc, mlf,
out, pdfsync und toc in den Papierkorb. Dank an Will Robertson
f&uuml;r die Anregung und diese Liste von Endungen.
    <p> Zus&auml;tzliche
Endungen k&ouml;nnen mittels versteckter Einstellung
hinzugef&uuml;gt werden. Um "dvi" zu der Liste
hinzuzuf&uuml;gen:
    </p>
    <p></p>
    <ul>
      <li> defaults write TeXShop
OtherTrashExtensions -array-add "dvi"
      </li>
    </ul>
    <p> Mehrere Endungen
k&ouml;nnen nacheinander auf diese Weise hinzugef&uuml;gt
werden. Um alle Endungen zu entfernen:
    </p>
    <p></p>
    <ul>
      <li> defaults write TeXShop
OtherTrashExtensions -array
      </li>
    </ul>
    <p> Die urspr&uuml;ngliche
Liste von Endungen wird jedoch immer aktiv bleiben.
    </p>
    <p> Angenommen ein Buchprojekt
besitzt eine haupt.tex Datei in einem Ordner und die Kapitel in
Unterordnern, auf welche durch Befehle wie
\include{kapitel1/kapitel1.tex} zugegriffen wird. Wenn das Buch gesetzt
wird, werden haupt.aux und andere Dateien in dem prim&auml;ren
Ordner erzeugt, w&auml;hrend sich kapitel1.aux etc. im Unterordner
befinden. Der "AUX-Dateien l&ouml;schen" Befehl l&ouml;scht
also nicht alle Dateien. Aber, falls die Wahltaste gedr&uuml;ckt
wird, w&auml;hrend der Men&uuml;befehl ausgew&auml;hlt bzw.
der Button bet&auml;tigt wird, dann
    </p>
    <p></p>
    <ul>
      <li> a) werden SourceDoc-
und Hauptdateiinformationen herangezogen um das Hauptdokument zu
bestimmen. </li>
      <li> b) werden alle Dateien
aus Haupt- und Unterordner mit den oben angegebenen Endungen, selbst
wenn sie nicht den gleichen Namen wie die Hauptdatei besitzen, in den
Papierkorb verschoben. </li>
    </ul>
    <p></p>
    <p> Einige Nutzer
m&ouml;chten vielleicht alle Vorsicht in den Wind schlagen und mit
"AUX-Datein l&ouml;schen" immer das erweiterte Aufr&auml;umen
durchf&uuml;hren lassen. Eine versteckte Einstellung erlaubt dies:
    </p>
    <p></p>
    <ul>
      <li> defaults write TeXShop
AggressiveTrashAUX YES
      </li>
    </ul>
    <p></p>
  </li>
  <li> Neue Vorlagen von Will
Robertson hinzugef&uuml;gt. Diese sind ausf&uuml;hrlichst
kommentiert. Es ist beabsichtigt, das Nutzer sie den eigenen
Bed&uuml;rfnissen anpassen. Diese Vorlagen werden nur beim ersten
Start von TeXShop installiert oder falls der Vorlagen Ordner
~/Library/TeXShop vollst&auml;ndig entfernt wurde. Wills Vorlagen
befinden sich ebenfalls im Ordner "More" bei der TeXShop Distribution.
Bisherige Nutzen k&ouml;nnen sie durch das Bewegen des Ordner
"More" nach ~/Library/TeXShop/Templates hinzuf&uuml;gen.
  </li>
  <li> Neue Makros von Will
Robertson hinzugef&uuml;gt zum Erzeugen von Tabellen und Arrays,
Einf&uuml;gen einer Referenz und zum schnellen &Ouml;ffnen
anderer Projektdateien. Diese Makros wurden auf der TeX-On-MacOSX
Mailingliste gelobt. Die Makros sind verf&uuml;gbar f&uuml;r
neue Nutzer, bisherige k&ouml;nnen sie mittels der einfachen
Instruktionen, welche TeXShop 1.35 beigef&uuml;gt sind, aktivieren.
  </li>
  <li> Makro hinzugef&uuml;gt,
welches die Betrachtung von Dateien im teTeX Baum erm&ouml;glicht.
Falls z.B. "article.sty" in dem vom Macro erzeugten Dialog eingegeben
wird, wird kpsewhich verwendet um diese Datei im Baum zu finden und in
TeXShop zu &ouml;ffnen.
  </li>
  <li> Es existieren versteckte
Einstellungen, um die Textfarbe im Quelltextfenster festzulegen:
    <p></p>
    <ul>
      <li> defaults write TeXShop
foreground_R 0.3
      </li>
      <li> defaults write TeXShop
foreground_G 0.3
      </li>
      <li> defaults write TeXShop
foreground_B 0.3
      </li>
    </ul>
    <p> Die Farbe wird angezeigt,
falls "Text farblich hervorheben" in den Voreinstellungen
gew&auml;hlt ist. Ansonsten wird der Text schwarz sein bzw. kann
die Farbe im Font Men&uuml; gesetzt werden.
    </p>
    <p> In Verbindung mit den
versteckten Einstellungen f&uuml;r die Hintergrundfarbe des
Quelltextfensters, k&ouml;nnen somit Wei&szlig; auf Schwarz
oder andere Farbkombinationen realisiert werden. TeXShop besitzt neue
Makros um die Farbe des Quelltextfensters zu setzen oder auf die
Standardfarben zur&uuml;ckzusetzen.
    </p>
  </li>
  <li> Es existieren versteckte
Einstellungen um das Quelltext-, Vorschau- und Konsolenfenster
abgestuft transparent zu schalten:
    <p></p>
    <ul>
      <li> defaults write TeXShop
ConsoleWindowAlpha 0.75
      </li>
      <li> defaults write TeXShop
SourceWindowAlpha 0.75
      </li>
      <li> defaults write TeXShop
PreviewWindowAlpha 0.75
      </li>
    </ul>
    <p> Ein Alphawert von 0.00
bedeutet vollst&auml;ndig transparent und ein Alphawert von 1.00
vollst&auml;ndig undurchsichtig. Vorsicht bei Verwendung dieser
Einstellungen!
    </p>
  </li>
  <li> TeXShop besitzt jetzt ein
Statistikanzeige, in der die Anzahl von W&ouml;rtern, Zeilen und
Zeichen in einem Dokument angezeigt werden. Dieses wird erreicht durch
Aufruf von
    <p></p>
    <ul>
      <li> detex myfile | wc
      </li>
    </ul>
    <p> Beim ersten Aufruf wird
das Dokument auf der Platte gepr&uuml;ft. Nachdem
&Auml;nderungen am Dokument vorgenommen wurden, speichert der
Update Button das Dokument und ruft detex erneut auf. Der detex Befehl
ignoriert tex Kommandos, aber der Wortz&auml;hler ist bisher noch
ungenau. Input und include Dateien werden ebenfalls
mitgez&auml;hlt. </p>
  </li>
  <li> Neue deutsche Hilfe von
Martin Kerz und Sebastian Siedentopf. Siedentopf hat das Layout
dar&uuml;ber hinaus an Apples derzeitige Richtlinien angepasst. Die
&Auml;nderungen sind derzeit in der deutschen und englischen Hilfe
implementiert, treten jedoch nicht zwingend bei anderen Lokalisierungen
auf.
  </li>
  <li> Falls eine Datei Drag und
Drop bewegt wird, werden Aliase jetzt aufgel&ouml;st. So
k&ouml;nnen Alias Referenzen auf Graphik Dateien (und andere)
einfach durch hineinziehen in das Quellfenster genutzt werden. Alias
Dateien funktionieren nicht, falls der Aliasname per Hand eingegeben
wird, da tex diese nicht aufl&ouml;sen kann (symbolische Links
jedoch schon).
  </li>
  <li> Verschiedene
&Auml;nderungen betreffen den Code der japanischen Implementation
von Seiji Zenitani, mit Hilfe von Yu Itoh und Koichi Inoue. Es gibt
eine neue japanische Codierung Shift JIS X0213, welche Standard wird in
Japan. Weiterhin ab jetzt utf.sty Unterst&uuml;tzung f&uuml;r
pTeX. Vor dieser &Auml;nderung unterst&uuml;tzte pTeX nur 6000
Kanji Zeichen, mit utf.sty jedoch mehr als 20.300. Die
Unterst&uuml;tzung wir in den Voreinstellungen unter "Misc"
aktiviert. Wenn aktiviert, exportiert TeXShop nicht-ptex Zeichen als
utf.sty Codes; so werden z.B. Unicode Zeichen \UTF(Hex code) und nicht
Uni-Code Zeichen \CID(glyph ID). </li>
  <li> Zenitani hat ebenfalls neue
japanische Standardeinstellungen hinzugef&uuml;gt. Zuvor wurde
f&uuml;r jede japanisches ptex Distribution eigene "altpdflatex"
Skripte bereitgestellt. Dies war besonders f&uuml;r
Anf&auml;nger verwirrend. Diese neue Version von TeXShop fasst
"altpdflatex-for-ptex" Skripte zusammen und installiert sie in
~/Library/TeXShop/bin. Die neuen japanischen Standardeinstellungen
veranlasst TeXShop automatisch diese neuen Skripte zu nutzen. </li>
  <li> Die folgenden Chinesischen
Codierungen wurden auf Anfrage von Adam Si hinzugef&uuml;gt: Mac
Chinese Traditional, Mac Chinese Simplified, DOS Chinese Traditional,
DOS Chinese Simplified, GBK, GB 2312, und GB 18030.
  </li>
  <li> Neues japanisches
Hilfesystem von Yoshihisa Okazaki. </li>
  <li> Neue spanische
Lokalisierung und Hilfe. </li>
  <li> TeXShop kann nun Dateien
mit den Endungen .dn und .engine &ouml;ffnen und speichern . </li>
  <li> Versteckte Einstellung:
    <p></p>
    <ul>
      <li> defaults write TeXShop
BringPdfFrontOnAutomaticUpdate NO
      </li>
    </ul>
    <p> welche das PDF Fenster
veranlasst, an der aktuellen Position zu verbleiben wenn es
aktualisiert und ein externer Editor verwendet wird. Diese Einstellung
wurde von einem Nutzer mit X11 Editor nachgefragt und sollte auch nur
in diesem Fall notwendig sein. </p>
  </li>
  <li> Manchmal upgraden Nutzer
Mac OS X via "archive and install". Nach der Installation ist TeXShop
weiterhin vorhanden, aber teTeX ist verschwunden. Beim ersten
Satzversuch erscheint dann eine Fehlermeldung "pdflatex cannot be
found". Diese Fehlermeldung wurde erweitert um exakt anzugeben, was die
m&ouml;gliche Ursache ist und wie der Fehler behoben wird. </li>
  <li> Die TeXShop Webseite
enth&auml;lt nun einen Abschnitt "LaTeX Documentation", in der
B&uuml;cher und Weblinks zu freien LaTeX Anleitungen im Internet
aufgelistet sind. Die Webseite stellt ebenfalls eine Anzahl kleinerer
LaTeX Beispieldateien von Will Robertson zur Verf&uuml;gung.
  </li>
</ul>
<p></p>
<h6> Korrigierte Fehler:</h6>
<p></p>
<ul>
  <li> Falls eine gro&szlig;e
Anzahl von Fenstern ge&ouml;ffnet war, konnte der Wechsel zwischen
diesen l&auml;ngere Zeit ben&ouml;tigen und u.U. im Beachball
enden. TeXShop war dann nicht mehr ansprechbar. Dies war durch einen
Fehler im Makrocode verursacht. Das Problem ist nun gel&ouml;st. </li>
  <li> Falls ein dvi in einem
Verzeichnis ohne Schreibrechte ge&ouml;ffnet war, konnte TeXShop
die entsprechende PDF Datei nicht generieren und anzeigen. Jetzt wird
eine PDF Datei in einem tempor&auml;ren Verzeichnis
angelegt und angezeigt. </li>
  <li> Falls der Abbrechen Button
in der Konsole bet&auml;tigt wurde und er Nutzer sp&auml;ter
Eingaben vornahm und RETURN bet&auml;tigte, st&uuml;rzte das
Programm ab. </li>
  <li> Zwei kleinere
Fehlerdialoge, welche in einem Fenster angezeigt werden sollten anstatt
auf dem Desktop mit nicht nutzbaren OK Buttons. </li>
  <li> In Lokalisationen,
ausgenommen der Englischen, brachten Versuche auf die AppleScript
Bibliothek zuzugreifen das Programm zum Absturz. </li>
  <li> Bibtex etc., Tools im
Quellfenster funktionierten nicht, falls eine Datei eine Hauptdatei
(root) besa&szlig;.
  </li>
</ul>
<p></p>
<h5>Version 1.34 von TeXShop
enth&auml;lt neue Funktionen und beseitigt einige Fehler.</h5>
<p></p>
<p> </p>
<h6>Neue Funktionen:</h6>
<p>
</p>
<ul>
  <li> Ein Palette f&uuml;r
Matrizen von Jonas Zimmermann, zimmerleut@gmx.de, wurde
hinzugef&uuml;gt. Vielen Dank daf&uuml;r.
  </li>
  <li> Auf Anfrage von Claus
Gerhardt wurde das AppleScript Kommando "goto line"
hinzugef&uuml;gt. Bsp:
    <dl>
      <dd> tell front document of
application "TeXShop"
      </dd>
      <dd> goto line 15
      </dd>
      <dd> end tell
      </dd>
    </dl>
  </li>
  <li> Erste Implementierung von
pdfsync. Ein Klick in ein PDF bei gedr&uuml;ckter Kommando Taste
springt zur dazugeh&ouml;rigen Stelle in der Quelldatei. Falls die
Quelldatei andere Dateien einbindet, wird die entsprechende,
eingebundene Datei ge&ouml;ffnet und an die passende Stelle
gesprungen. Weitere wichtige Hinweise zur Verwendung von pdfsync
befindet sich in der Hilfe Datei "General Help: Pdfsync". Diese
&Auml;nderung beruht auf der Datei pdfsync.sty geschrieben von
Piero D'Ancona mit Verbesserungen von J&eacute;r&ocirc;me
Laurens.
  </li>
  <li> Weiterhin wurde pdfsync
f&uuml;r den umgekehrte Anwendung implementiert: Ein Klick in der
Quelldatei (oder auch Quelldateien mit &uuml;bergeordneten
Hauptdateien) bei gedr&uuml;ckter Kommando Taste springt im
Vorschaufenster zur entsprechenden Stelle der PDF Datei.
  </li>
</ul>
<p></p>
<h6> Korrigierte Fehler:</h6>
<p></p>
<ul>
  <li> Die TeX, LaTeX, Bibtex,
Makeindex, Metapost, Context und Metafont Button in der Symbolleiste
schalteten die Methode f&uuml;r das Setzen zur&uuml;ck auf den
Standardwert. Dies findet nun nicht mehr statt. So ist es
m&ouml;glich, den Bibtex Button zu verwenden und danach wieder
Kommando+T f&uuml;r ein erneutes Setzen zu nutzen.
  </li>
  <li> Der Abbruch Button des
Konsolen Fensters behielt seine Position beim Ver&auml;ndern der
Fenstergr&ouml;&szlig;e nicht bei. Der Dank f&uuml;r den
Hinweis auf diese ersten beiden Fehler geb&uuml;hrt Sean Luke.
  </li>
  <li> Die Tastenkombination
Kommando+1 schaltet vor und zur&uuml;ck zwischen dem Quell- und
Vorschaufenster. In vorangegangenen Versionen funktionierte dies nicht,
falls im Quellfenster eine Hauptdatei durch myfile.texshop oder
%SourceDoc angegeben wurde. Dies wurde behoben. Die Verwendung von
Kommando+1 im Quell- fenster aktiviert das entsprechende
Vorschaufenster. Erneutes Kommando+1 bringt das Quellfenster wieder in
den Vordergrund. Ein Vorschaufenster kann mehrere Quelldateien
besitzen. Kommando+1 aktiviert das letzte Quellfenster, von welchen aus
mittel Kommando+1 zum Vorschaufenster gewechselt wurde oder die
Hauptdatei, falls noch kein Wechsel stattgefunden hat.
  </li>
  <li> Neue spanische Hilfedateien
von Juan Luis Varona Malumbres. Danke.
  </li>
  <li> Beim Drucken wird jetzt die
Einstellung "Gr&ouml;&szlig;e" aus den Einstellungen
"Papierformat" beachtet. Es wird jedoch weiterhin die Angabe
"Papiergr&ouml;&szlig;e" ignoriert, da diese durch teTeX
festgelegt wird. Das Drucken funktioniert ca. so: Die Abmessungen des
zu druckenden Dokuments werden von tex bestimmt und in der PDF Datei
festgehalten. Das PDF wird dann mit dem Gr&ouml;&szlig;enfaktor
skaliert, falls dieser ungleich 100% ist, oder anderenfalls in voller
Gr&ouml;&szlig;e und mittig auf der zu druckenden Seite aus-
gegeben. Normalerweise entsprechen die Dimensionen des Dokumentes der
Seitengr&ouml;&szlig;e des Papiers. In den seltenen
F&auml;llen, in denen dies nicht der Fall ist, werden unter
Umst&auml;nden die Seitenr&auml;nder des Dokumentes
abgeschnitten.
  </li>
</ul>
<p></p>
<p></p>
<h5> Version 1.33 adds extra
features to TeXShop and fixes some bugs.
</h5>
<p></p>
<p></p>
<h6> New features:
</h6>
<p>
</p>
<ul>
  <li> The changes in version 1.33
support improved apple scripting, better macro support, and improved
interaction with external editors.
  </li>
  <li> Improved macro support was
prompted by Claus Gerhardt, who wrote several useful scripts included
with version 1.33. For example, one script calls htlatex to typeset a
latex file for the web. The script saves the source, typesets, and
opens the resulting html file in Safari. Thus the script behaves
exactly like the Latex typesetting button except that it creates an
html rather than a pdf, and displays the html in Safari rather than
TeXShop. An advantage of this approach is that users can create their
own scripts similarly and thus add features to TeXShop without waiting
for new program code.
  </li>
  <li> TeX typesetting often
requires a sequence of operations. To process a file with a
bibliography, the source must be run through latex, bibtex must be run,
and latex must be run twice more. A script is included to do this
automatically. The script saves the source before the first latex run
and updates the preview display at the end. Users can easily customize
this script for their own workflow.
  </li>
  <li> Additional scripts convert
the tex source file to a file with Windows line feed convention, or a
file with Macintosh 9 line feed conventions, or a file with Unix line
feed conventions. Mac OS X understands all line feeds without help, but
many computers are not so smart; the conversions are useful when
sending files to friends. The "flip" binary used to do these
conversions was written by Craig Stuart Sapp. See
http://ccrma-www.stanford.edu/~craig/utility/flip/ for details.
  </li>
  <li> A script is included to
call pdfselect and extract portions of pdf documents. A user could
request one file containing pages 3 through 7 of the tex document, one
containing page 29, and one containing pages 31 through 36. The
advantage of placing this code in the Macros menu is that a user
interface is provided, so users don't need to remember calling
conventions for pdfselect and don't need to switch to the Terminal.
  </li>
  <li> A #DOCUMENTNAME# variable
was added to the Macro editor, giving applescript commands the name of
the calling document.
  </li>
  <li> The following applescript
commands were added to TeXShop. Consult the TeXShop help files for
details about writing your own scripts using these commands.
    <p> </p>
    <ul>
      <li> typeset </li>
      <li> latex </li>
      <li> tex </li>
      <li> bibtex </li>
      <li> context </li>
      <li> metapost </li>
      <li> makeindex </li>
      <li> typesetinteractive </li>
      <li> latexinteractive </li>
      <li> texinteractive </li>
      <li> bibtexinteractive </li>
      <li> contextinteractive </li>
      <li> metapostinteractive </li>
      <li> makeindexinteractive </li>
      <li> typeset </li>
      <li> refreshpdf </li>
      <li> refreshtext </li>
      <li> taskdone </li>
    </ul>
    <p></p>
  </li>
  <li> Improved support was added
for external editors, following prodding by Joachim Kock. Several
changes have been made:
    <ul>
      <p></p>
      <li> There is now a
preference to turn on continuous updating of the preview window if the
user is running in external editor mode. Once each second the program
checks to see if the pdf file has been updated. If so, it refreshes the
pdf display.
        <p></p>
      </li>
      <li> The interval between
refresh checks is controlled by a hidden preference item named
RefreshTime. To reset to another interval in seconds (say every 2.19
seconds)
        <p> defaults write TeXShop
RefreshTime 2.19 </p>
        <p></p>
        <p></p>
      </li>
      <li> Applescript command
support has been added to TeXShop so external applications can send
commands to it. For external editors, the important script commands are
        <p> </p>
        <ul>
          <li> latexinteractive </li>
          <li> texinteractive </li>
          <li> bibtexinteractive </li>
          <li> contextinteractive </li>
          <li> metapostinteractive
          </li>
          <li>
makeindexinteractive </li>
          <li> typesetinteractive </li>
          <li> refreshpdf </li>
          <li> taskdone </li>
          <li>
open_for_externaleditor </li>
        </ul>
        <p> The first seven
commands call TeXShop's typesetting engine. When one of these commands
is called, control immediately returns to the calling program even
though the typesetting operation is not complete. The taskdone command
returns FALSE while this operation continues and TRUE when it is done,
so a calling program wishing to send several commands can send one
command and then test that it has been completed before sending another
command.
        </p>
        <p></p>
      </li>
      <li> Refreshpdf updates the
preview display, and can be used instead of continuous updating to
control that display. Typesetting commands automatically update the
display upon completion.
        <p></p>
      </li>
      <li> The
open_for_externaleditor command opens a .tex file, calling "Open for
Preview..."
      </li>
    </ul>
    <p>
    </p>
  </li>
  <li> Additional features not
related to scripting or external editors have also been added: </li>
  <li> "Select All" can be used to
select the full page of pdf output in selection mode. There is one
restriction; in Multi-Page and Double-Multi-Page mode, select all is
only active if the document has at most 20 pages, since otherwise the
selected pdf will be enormous and bring the machine to a crawl. </li>
  <li> A preference item now
allows users to distill with Apple's pstopdf rather than ghostscript.
This only works in Panther because pstopdf is only in Panther. If the
preference is chosen but Panther is not running, the old ghostscript
code will be used. When the preference is chosen, ghostscript is no
longer needed for internal TeXShop scripts, but it may still be
required for teTeX style files. One such case is epstopdf.sty, used to
automatically convert eps files to pdf format during typesetting. </li>
  <li> Zenitani provided
additional drag and drop support. The new version reports an error if
the filename of the dropped file contains a space. The new code also
permits customization, in a somewhat strange way. To customize drag and
drop code, add a new submenu to the Macros menu titled "Drag &amp;
Drop". Inside this folder, insert items for file types and make the
text of each item be the code to be produced by drag and drop. For
example, one item might be called ".pdf" and the body of this item
might be "\includegraphics[#INS#]{%r}" where neither item would include
the quotation marks. In these inclusions,
    <p> </p>
    <ul>
      <li> %F = full path of an
dropped file </li>
      <li> %f = dropped filename </li>
      <li> %r = relative path of
the dropped file </li>
      <li> %n = filename without
extension </li>
      <li> %e = extension </li>
    </ul>
    <p> </p>
  </li>
  <li> If an extension is not
listed in the Drag &amp; Drop menu, or if there is no such menu,
then drag and drop behaves as Zenitani proscribed, so most users won't
need to customize the code.
  </li>
  <li> German help has been
updated by Martin Kerz, the Italian localization has been updated by
Nicola Vitacolonna, the Spanish help was updated by Juan Luis Varona
Malumbres, the French localization was updated by Hendrik Chaltin, and
a Romanian localization was added by Andrei Teleman. Thanks! </li>
  <li> Macros can now be called
when the preview window is active; commands which insert text will be
deactivated in this mode. A toolbar item for the Preview window was
added so the Preview toolbar can display a Macros button. </li>
  <li> An "Abort" button was added
to the console for people who want to stop the typesetting program in
midstream. This is a minor change.
  </li>
  <li> Code by Elliott Hughes was
added to clean up some of the code calling a latex, tex, bibtex, etc.,
task. If the binary file is not found, the program now puts up an error
message explaining the error and asking if the preferences bin path is
correct. This will be useful for those running fink who forget to
change the preference.
  </li>
  <li> At the request of Joachim
Kock, when TeXShop opens a file for Preview, or is in external editor
mode and opens a file, the program now compares the dates of the source
and preview files. If the preview file is not up to date or does not
exist at all, the source file is automatically typeset. There is a
hidden preference to turn this behavior off, but it is on by default:
To turn it off
    <p> defaults write TeXShop
ExternalEditorTypesetAtStart NO
    </p>
    <p></p>
  </li>
</ul>
<p></p>
<h6> Bugs fixed:
</h6>
<ul>
  <li> A few users reported that
their printers added a slight yellow background to the page. Only a few
printers had that problem. Frank Stengel discovered that it was caused
by a NSEraseRect call in the print drawing routine. This call has been
removed; now TeXShop prints using only one line, the vanilla Cocoa call
[myRep draw]. </li>
  <li> In Panther, all Text
objects offer word completion. If a portion of a word is typed and
option-escape is typed, the system will offer a list of possible
completions. This works in TeXShop, TextEdit, and other Cocoa programs.
But TeXShop's Command completion was broken in Panther, and made it
impossible to use this new feature. This is fixed. </li>
  <li> TextShop has an applescript
command to add text, but this command did not update the undo stack.
This was fixed by Stefan Walsen; his patch is in version 1.33. </li>
  <li> If the user printed the
source and later printed the typeset document, the document would be
lowered on the page. This is fixed. </li>
  <li> Jerry Keough found a
strange bug when using TeXShop in Jaguar. If the user's preference
setting asked that no empty document appear at startup and if the user
opened a document, made the pdf window active, and then reached over
and closed the source window, the next menu use would crash the
program. This bug did not occur in Panther. It is fixed.
  </li>
</ul>
<p></p>
<h5> Version 1.32 adds two extra
features to TeXShop and fixes some bugs.
</h5>
<p></p>
<h6> New features:
</h6>
<ul>
  <li> There is a new menu item,
"New Tag", which inserts an empty tag in the source text and positions
the cursor so the user can add the name of the tag. As a corollary,
there is now a keystroke to add a new tag; the keystroke is command-2.
  </li>
  <li> In Applescript macros, the
terms #LOGPATH#, #AUXPATH#, #INDPATH#, #BBLPATH#, and #HTMLPATH# will
now be recognized; this has been added at the request of Claus
Gerhardt.
  </li>
</ul>
<p></p>
<h6> Bugs fixed:
</h6>
<ul>
  <li> Although the magnification
level can increase to 1000 in version 1.31, the arrow keys next to the
magnification control only allowed values up to 400. This is fixed.
  </li>
  <li> If the preview window's
toolbar was in text-only mode and the magnification panel was selected,
the resulting small dialog window would not go away in 1.31. This is
fixed. </li>
  <li> In Preferences, if the user
set the tab size or the preview window magnification and then
cancelled, the new values would still appear when the Preference panel
was again displayed. This is fixed.
  </li>
  <li> Suppose the preference to
place the first page on the right side is active. In 1.31, the left
arrow key did now work in double page mode, and the right arrow key
stopped one page before the end. In double multipage mode, the end key,
the page down key, and the right arrow key stopped before displaying
the last page. All of these problems are fixed.
  </li>
</ul>
<p></p>
<h5> Version 1.31 adds some extra
features to TeXShop and fixes several bugs.</h5>
<p></p>
<h6> New features:
</h6>
<ul>
  <li> Macros items are now
specific to the typesetting engine set in the current
window. Two default sets are created when TeXShop first starts, one for
Latex and one for Context. (The Context set was created by Hans Hagen;
thanks!). Suppose a different engine is selected, say TeX. When it
starts, it will have the default Latex macros. But if this set of
Macros
is edited with the Macro editor, the new set will always be associated
with TeX, while the old Latex macros will continue to be associated
with Latex. Of course the Latex macros can also be changed.
  </li>
  <li> A new preference item
allows the first page in the two double page modes
to be either on the left or on the right. Books usually put this page
on
the right, so that is the default preference.
  </li>
  <li> The preference dialog has a
new pulldown menu to reset preferences to
default values. This addition was requested by Seiji Zenitani for users
in
Japan who must cope with three different versions of pTeX. These users
can
now rapidly set preferences without consulting documentation on web
sites.
  </li>
  <li> The largest possible
magnification in the preview window is
now 1000 (previously it was 400).
Additional French menu translations by Hendrik Chaltin; thanks!
  </li>
</ul>
<p></p>
<h6> Bugs fixed:
</h6>
<ul>
  <li> Three Panther problems are
fixed. A few interface changes
were made to improve appearance in Panther. This
release is essential for Panther.
    <ul>
      <li> In Panther, older
versions of TeXShop refuse to create new files, although they can open
existing files. This was fixed by adding two lines to the "displayName"
code. </li>
      <li> In Panther, the small
yellow tags which display the current page when scrolling in multipage
and double multipage display formats were blank. Also, the small yellow
tags which display the size of a selection rectangle to copy a portion
of the pdf window were blank. This is fixed. </li>
      <li> On my system, Panther
spellchecking often fails for all programs. This happens at boot time.
The computer boots up, but even if the first program used is TextEdit
or Mail, it refuses to "spell check as you type" and the "Spelling
dialog" refuses to appear. I suspect this is due to a defective third
party program on my disk, since other Panther users haven't seen the
problem. But I haven't been able to isolate the bug. Once the problem
occurs, TextEdit and Mail have minor text input glitches which are
cured by turning off continuous spell checking. TeXShop had more
serious glitches in this situation. So in 1.31, extra code has been
added to turn off continuous spell checking when TeXShop starts if the
spell checker is not available. </li>
    </ul>
  </li>
  <li> Fixed a bug reported by
Luis Sequeira: when text was dragged within
the source window, it was always copied and pasted. It should have been
cut and
pasted unless the option key was down. This is fixed. </li>
  <li> Juan Luis Varona Malumbres
slightly improved Spanish help (small
icon for the list of help files in the drawer).
  </li>
  <li> In two page mode,
typesetting no longer scrolls to the first
page.
  </li>
  <li> The new page and
magnification buttons retain firstResponder
status (as before 1.29) so users can experiment with several
settings without clicking again for each experiment.
  </li>
  <li> In version 1.30 and before,
if the user input an impossible line into the "Go To Line" dialog, the
program could crash; this is fixed. Thanks to Eric Seidel for the bug
report.
  </li>
  <li> Kevin Ballard,
kevin@sb.org, contributed a new English.lproj folder
with revised placement of interface items in preferences, slightly
revised
menu items, and other changes to improve the look of the interface
in Panther. Many thanks!
  </li>
  <li> Made spacing changes for
Panther in the German preference panel.
Thanks to Martin Kerz for the suggestions.
  </li>
  <li> There is a hidden
preference item to turn off tag computation:
"defaults write TeXShop TagSections NO" but this preference was
disabled
  </li>
  <li> The Preference window is no
longer hidden when the program is
deactivated.
  </li>
</ul>
</div>
<div id="header_background"></div>
<div id="header_logo"><a href="../TeXShop%20Help.html"><img
 src="../gfx/xicnsc.gif" border="0" height="40" width="40"></a></div>
<div id="header_title"> Was
gibt's Neues?</div>
</body>
</html>
