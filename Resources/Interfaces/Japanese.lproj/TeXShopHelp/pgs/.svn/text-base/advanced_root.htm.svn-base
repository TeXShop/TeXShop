<HTML>

<HEAD>
			<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=Shift_JIS">
			<TITLE>プロジェクトのルートファイルを設定する</TITLE>
			<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch under the GNU FDL">
			<META NAME="description" CONTENT="大きな入力ファイルを分割して管理する方法">
			<link href="../sty/screen.css" rel="stylesheet" media="all">
</HEAD>

<!--コメントアウトしてある部分はバージョン1.35の旧文です。-->

<body>	

<div id="content_border">

<p>
大きな入力ファイルを小さくいくつかに分割して、ルートファイルで管理するのは、よく行なわれることです。たとえば、書籍のプロジェクトのルートファイルは次のような形になっているかもしれません──
</p>

<tt>
		<dl>
			<dd>\documentclass[11pt]{book}
			<dd>\includeonly{Chapter2/two}
			<dd>\textwidth = 6.5 in
			<dd>\textheight = 9 in
			<dd>\begin{document}
			<dd>\include{Chapter1/one}
			<dd>\include{Chapter2/two}
			<dd>\include{Chapter3/three}
			<dd>\end{document}
		</dl>
</tt>

<p>
このルートファイルにはプロジェクト全体に対するフォーマット・コマンドはありますが、その内容については one.tex ・ two.tex ・ three.tex という３つのファイルに収められています。上記の第２行目は、第２章だけをタイプセットするよう TeX に指示しています──第２章の執筆中にタイプセットにかかる時間を短縮するためです。本が完成した暁には、この行はコメントアウトして、本全体を最終的にタイプセットすることができます。
</p>

<p>
第２章を書いているときに、ファイル two.tex を TeXShop で開くというのはごく自然なことでしょう。けれどもこの入力ファイルに変更を施した後、two.tex をタイプセットすべきではありません ； 代わりにルートファイルをタイプセットします。そうするよう TeXShop に指示できる方法が２つあります。
<!--１つ目は、各章ごとのファイルの第１行目に次のように書くことで、ルートファイルを指定します──-->
１つ目は、各章ごとのファイルの冒頭20行以内の１行に次のように書くことで、ルートファイルを指定します──
</p>
<tt>
	<dl>
<!--		<dd>%SourceDoc ../Main.tex-->
		<dd>%!TEX root = ../Main.tex
	</dl>
</tt>
<p>
２つ目は「プロジェクトルートの設定...」というメニューコマンドを使う方法です。このメニューコマンドが提示するパネルにはテキストボックスがありますから、そこにルートファイルの名前を入れます。
</p>

<p>
ルートファイルが入力ファイルと同じフォルダ内にあるときは、ファイル名だけで十分です──拡張子「.tex」を含めた名前です。たとえば、ルートファイルの名前が Main なら、ソースの第１行目またはダイアログウインドウには Main.tex と書き入れます。
</p>

<p>
もしルートファイルが異なるディレクトリにあるなら、入力ファイルの位置に対する相対パス名を付けることもできます。上記の例では、個々の章はルートファイルのあるフォルダ内のサブフォルダの中に入っています。このような場合、ソースの第１行目またはダイアログウインドウに ../Main.tex と入力すれば、章ごとの入力ファイルに対する相対パスでルートファイルの場所を示すことができます。
</p>

<p>
最後に、ルートの名前は、絶対パス名でも指定できます──/Users/me/Main.tex のように。
</p>

<p>
TeX ソース全体が単一のファイルになっている場合には、プロジェクトルートを設定する必要はありません。
</p>

<p>
「プロジェクトルートの設定...」コマンドを使ってルートファイルを指定すると、TeXShop は、入力ファイルと名前が同じで拡張子が「.texshop」となっているファイルに情報を書き込むことで、ルートファイル名を記憶します。たとえば、第２章の入力ファイルが two.tex の場合、TeXShop は、two.tex と同じディレクトリにある two.texshop にルートファイル名を書き込みます。後で two.texshop を捨ててしまうと、TeXShop は Main.tex ではなく two.tex をタイプセットするようになってしまいます。ソースファイルの第１行目でルートファイルを特定すれば、余分な「.texshop」ファイルは不要になります。
</p>

<p>
ルートファイルが有効なら、所定のソースウインドウが前面に出ている状態で command＋1 を押すと、対応するプレビューウインドウがアクティブになります。もう一度 command＋1 を押せば、ソースウインドウがアクティブになります。プレビューウインドウは複数のソースウインドウに対応しているかもしれないので、command＋1 でアクティブになるのは、直前にプレビューウインドウをアクティブにしたソースウインドウです──それまでに一度も command＋1 が押されていなかった場合は、ルートソースをアクティブにします。
</p>

<div id="header_background"></div>
<div id="header_logo"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></div>
<div id="header_chapter">上級向けのヘルプ</div>
<div id="header_title">プロジェクトのルートファイルを設定する</div>

		<div id="menu_border">
		<ul>
			<li><a href="advanced_personaltetex.htm">スタイルとマクロを teTeX に追加する</a>
			<li><a href="advanced_addengine.htm">追加のタイプセットエンジン</a>
			<li><a href="advanced_removeaux.htm">作業ファイルを削除する</a>
			<li><a href="advanced_externaleditor.htm">外部エディタを使用する</a>
			<li><a href="advanced_pdfcopypaste.htm">プレビューウインドウからのコピー＆ペーストおよびドラッグ＆ドロップ </a>
			<li><a href="advanced_root.htm">プロジェクトのルートファイルを設定する</a>
			<li><a href="advanced_pdfsync.htm">Pdfsync</a>
			<li><a href="advanced_unicode.htm">Unicode（ユニコード）</a>
			<li><a href="advanced_bibtex.htm">BibTeX</a>
			<li><a href="advanced_makeindex.htm">MakeIndex</a>
			<li><a href="advanced_formats.htm">新規フォーマットの作成と利用</a>
			<li><a href="advanced_otherfiles.htm">その他のファイルを TeXShop で開く</a>
			<li><a href="advanced_mathematica.htm">Mathematica</a>
			<li><a href="advanced_localization.htm">各国語版へのローカライズ</a>
			<li><a href="advanced_syntaxcolor.htm">ソースのカラー表示</a>
			<li><a href="advanced_shellescape.htm">Shell-Escape の保護</a>			
			<li><a href="advanced_coloredtext.htm">TeX における文字の色指定</a>			
			<li><a href="advanced_moretetex.htm">teTeX についてさらに</a>
			<li><a href="advanced_fink.htm">Fink との共存</a>
			<li><a href="advanced_otherdistributions.htm">他の TeX ディストリビューションとの共存</a>
			<li><a href="advanced_context.htm">ConTeXt と MetaPost</a>
			<li><a href="advanced_plist.htm">Plist ファイル</a>
			<li><a href="advanced_menushortcuts.htm">メニュー項目のショートカットキーを再定義する</a>
		</ul>
	</div>
	</body>

</HTML>
