<HTML>

<HEAD>
		<META HTTP-EQUIV="content-type" CONTENT="text/html;charset=iso-8859-1">
		<TITLE>Making and Using TeX Formats</TITLE>
		<META NAME="copyright" CONTENT="Copyright (c) 2003 Richard Koch under the GNU FDL">
		<META NAME="description" CONTENT="index; makeindex; makeidx">
	<link href="../sty/screen.css" rel="stylesheet" media="all">
	</HEAD>

<BODY>
	<div id="content_border">
<h4> Using formats </h4>
		<P>When TeX typesets a document, it must process the document header, which may contain
a large number of \input, \include, and \usepackage statements. Every time the document is typeset,
this process is repeated even though large portions of the header did not change.</P>

<p> TeX has a built-in mechanism to speed up this process. It can be instructed to process lines of source and output the result to a "format file." When TeX typesets after that, it can rapidly read the format and then typeset the document. LaTeX is constructed in this manner;
the format file is created when TeX is installed on your machine and the command "latex file" tells TeX to read this format and then typeset "file". </p>

<p> When machines were slower, users often created their own format files to speed up typesetting.
This is done less often today, but dealing with format files may still be useful. For instance, some organizations create and distribute a format to be used by everyone working on a common project. In this section we'll explain how to use a format file provided by someone else, and how to create a format.</p>

<p> A typical format file has extension "fmt". Suppose a department of the University of Oregon has provided a format "uo.fmt". To use this format, follow the steps below:</p>
<ul>
<li> Move uo.fmt to "~/Library/texmf/web2c/uo.fmt". You may need to create some of these directories.
<li> Create a new "engine file" by going to ~/Library/TeXShop/Engines and duplicating the file
XeLaTeX.engine. Engine files need to have the execute bit set, and this duplication step automatically does that.
<li> Rename this new file. The name need not
match the name of the format. Since the name will appear in the TeXShop interface, it should make sense to a user. We'll choose "Oregon.engine".
<li> Open Oregon.engine in TeXShop and edit it to read as follows
<dl>
<dd>#!/bin/tcsh
<dd>
<dd>set path= ($path /usr/texbin /usr/local/bin)
<dd>pdflatex -fmt uo  "$1" 
</dl>
	The first two lines will already be present, so it may only be necessary to change the third line.
However if your machine has an Intel processor, the word "powerpc" in the second line should
be changed to "i386".
</ul>
<p> This completes the installation. The next time you start TeXShop, the pulldown menu beside
the typeset button on the Source Window Toolbar will list "Oregon" as an option. Choose this to typeset using the uo.fmt format. If you want this typesetting method to be the default, go to
TeXShop preferences under the Typesetting tab, and in the Default Command box select "Command Listed Below" and fill in the edit box with the word Oregon.</p>
<p> It is also possible to select the Oregon format for a particular document 
without changing the typesetting option. To do that, add the
following line to the top of the source file:</p>
<dl>
<dd> %!TEX TS-program = Oregon
</dl>
<p> Then uo.fmt will be used for that document regardless of the typesetting option chosen.</p>
<p> The above instructions assume you have a format for pdflatex. You can also make formats for plain tex; in that case change "pdflatex" to "pdftex" in the engine file.</p>
<p> It is also possible to use formats when you are typesetting with tex + ghostscript. TeXShop assumes that an
engine file contains one or more command line instructions and ultimately produces a pdf file.
So the engine file must contain the commands which convert the dvi file to a pdf file.
Here is a typical engine file for uo.fmt in that case:</p>
<dl>
<dd>#!/bin/tcsh
<dd>set path= ($path /usr/texbin /usr/local/bin)
<dd>latex -fmt uolatex  "$1"
<dd>set filename = "$1"
<dd>dvips "${filename:r}.dvi"
<dd>pstopdf "${filename:r}.ps" 
</dl>  
<h4> Making formats </h4>
<p> Format files contain the internal binary representation of typeset lines of source.
This representation depends on the processor and particular TeX implementation. Thus it is
rarely possible to use a format file from someone else unless that person has the same
machine and TeX installation that you do.<p>

<p> However, it is common for organizations to distribute the source lines needed to construct
a format. In that case you'll be told to make the format using "initTeX". For example,
suppose this source text is "uo.tex". To make the format,
open Apple's Terminal program and change to the directory containing the source for the
format. Then type</p>
<dl>
<dd>pdflatex -ini
</dl>
<p>You will get a ** prompt. Type the following line at the prompt</p>
<dl>
<dd>&pdflatex uo
</dl>
<p>and press return. The format file will be created. At the end you may have to
issue a "\dump" command if the format source doesn't contain it. This will produce
the required "uo.fmt".</p>
<p> You might like to try this with the follow "uo.tex" file:</p>
<dl>
<dd>\documentclass[11pt]{article}
<dd>\usepackage{geometry}   
<dd>\geometry{letterpaper}                 
<dd>\usepackage[parfill]{parskip} 
<dd>\usepackage{graphicx}
<dd>\usepackage{amssymb}
<dd>\usepackage{epstopdf}
<dd>\DeclareGraphicsRule{.tif}{png}{.png}{`convert #1 `dirname #1`/`basename #1 .tif`.png}

<dd>\dump
</dl>








	</div>		
<div id="header_background"></div>
<div id="header_logo"><a href="../TeXShop%20Help.html"><IMG HEIGHT="40" WIDTH="40" border="0" SRC="../gfx/xicnsc.gif"></a></div>
<div id="header_chapter">Advanced Help</div><div id="header_title">TeX Formats</div>

	<div id="menu_border">
		<ul>
			<LI><a href="advanced_personaltetex.htm">Adding Personal Sty and Macro Files to TeX Live</a>
			<LI><a href="advanced_addengine.htm">Additional Typesetting Engines</a>
			<li><a href="advanced_encoding.htm">Encodings</a>
			<li><a href="advanced_xetex.htm">XeTeX and XeLaTeX</a>
			<LI><a href="advanced_removeaux.htm">Removing AUX Files</a>
			<li><a href="advanced_externaleditor.htm">Using an External Editor</a>
			<li><a href="advanced_pdfcopypaste.htm">Copy-Paste and Drag-Drop from the Preview Window </a>
			<li><a href="advanced_root.htm">Setting a Project Root File</a>
			<li><a href="advanced_pdfsync.htm">Synchronizing Source and Preview</a>
			<li><a href="advanced_unicode.htm">Unicode</a>
			<li><a href="advanced_bibtex.htm">BibTeX</a>
			<li><a href="advanced_makeindex.htm">MakeIndex</a>
			<li><a href="advanced_formats.htm">Making and Using New TeX Formats</a>
			<li><a href="advanced_otherfiles.htm">Opening Other Files with TeXShop</a>
			<li><a href="advanced_mathematica.htm">Mathematica</a>
			<li><a href="advanced_localization.htm">Localizations</a>
			<li><a href="advanced_syntaxcolor.htm">Syntax Colors </a>
			<li><a href="advanced_shellescape.htm">Shell Escape Protection </a>			
			<li><a href="advanced_coloredtext.htm">Colored Text in TeX </a>			
			<li><a href="advanced_moretetex.htm">More About TeX Live</a>
			<li><a href="advanced_fink.htm">Coexisting with Fink</a>
			<li><a href="advanced_otherdistributions.htm">Coexisting with Other TeX Distributions</a>
			<li><a href="advanced_context.htm">ConTeXt and MetaPost</a>
			<li><a href="advanced_plist.htm">Plist Files</a>
			<li><a href="advanced_menushortcuts.htm">Redefining Keyboard Menu Shortcuts</a>
		</UL>
	</div>
	</BODY>

</HTML>